// meta={"simUrl":"https://trg-arcade.userpxt.io/v1.8.22/---simulator","cdnUrl":"https://pxt.azureedge.net","version":"0.1.0","target":"arcade","targetVersion":"1.8.22","repo":"aqeeaqee/arcade-screenshot"}
// total=1684627 new=10.36% cached=85.54% other=4.09%
(function (ectx) {
'use strict';
const runtime = ectx.runtime;
const oops = ectx.oops;
const doNothing = ectx.doNothing;
const pxsim = ectx.pxsim;
const globals = ectx.globals;
const maybeYield = ectx.maybeYield;
const setupDebugger = ectx.setupDebugger;
const isBreakFrame = ectx.isBreakFrame;
const breakpoint = ectx.breakpoint;
const trace = ectx.trace;
const checkStack = ectx.checkStack;
const leave = ectx.leave;
const checkResumeConsumed = ectx.checkResumeConsumed;
const setupResume = ectx.setupResume;
const setupLambda = ectx.setupLambda;
const checkSubtype = ectx.checkSubtype;
const failedCast = ectx.failedCast;
const buildResume = ectx.buildResume;
const mkVTable = ectx.mkVTable;
const bind = ectx.bind;
const leaveAccessor = ectx.leaveAccessor;
const __this = runtime;
const pxtrt = pxsim.pxtrt;
let yieldSteps = 1;
ectx.setupYield(function() { yieldSteps = 100; })
pxsim.setTitle("arcade-screenshot");
pxsim.setConfigData({}, {});
pxtrt.mapKeyNames = [
 "",
 "__draw",
 "__drawCore",
 "__preUpdate",
 "__update",
 "__visible",
 "_action",
 "_ax",
 "_ay",
 "_col",
 "_connected",
 "_controlledSprites",
 "_data",
 "_destroyCore",
 "_dt",
 "_factory",
 "_fx",
 "_fy",
 "_height",
 "_hitbox",
 "_id",
 "_image",
 "_kind",
 "_kindsOverlappedWith",
 "_lastX",
 "_lastY",
 "_layer",
 "_layers",
 "_map",
 "_millis",
 "_obstacles",
 "_offsetX",
 "_offsetY",
 "_overlappers",
 "_owner",
 "_player",
 "_pressed",
 "_pressedElasped",
 "_prune",
 "_repeatCount",
 "_row",
 "_scale",
 "_sprites",
 "_sx",
 "_sy",
 "_text",
 "_update",
 "_vx",
 "_vy",
 "_width",
 "_x",
 "_y",
 "_z",
 "action",
 "activeCard",
 "add",
 "addShape",
 "addSprite",
 "alignX",
 "alignY",
 "allSprites",
 "analog",
 "anchor",
 "applyTo",
 "areaHeight",
 "areaWidth",
 "ax",
 "ay",
 "background",
 "basicCard",
 "bgColor",
 "bottom",
 "buckets",
 "button",
 "buttonEventHandlers",
 "buttons",
 "cachedTileView",
 "cachedVx",
 "cachedVy",
 "calcDimensionalHash",
 "callback",
 "camera",
 "canResolveClipping",
 "card",
 "cardSpacing",
 "cardWidth",
 "cardsPerRow",
 "cardsTop",
 "cellHeight",
 "cellWidth",
 "change",
 "charHeight",
 "charWidth",
 "clear",
 "clearObstacles",
 "collisionHandlers",
 "color",
 "column",
 "columnCount",
 "condition",
 "connected",
 "constrain",
 "contains",
 "controlledSprites",
 "createMovingSprite",
 "createParticle",
 "createdHandlers",
 "data",
 "defaultLifespan",
 "defaultRate",
 "deltaTime",
 "deltaTimeMillis",
 "destroy",
 "destroyHandler",
 "destroyedHandlers",
 "dispose",
 "distance",
 "down",
 "draw",
 "drawOffsetX",
 "drawOffsetY",
 "drawParticle",
 "drawText",
 "dx",
 "dy",
 "effect",
 "eid",
 "enabled",
 "event",
 "eventContext",
 "fastRandom",
 "fgColor",
 "flags",
 "followingSprites",
 "frameCallbacks",
 "frameWorker",
 "framesInSample",
 "fx",
 "fy",
 "galois",
 "gameForeverHandlers",
 "generator",
 "getObstacle",
 "getOrCreateHandlerForEvent",
 "getText",
 "getTile",
 "getTileImage",
 "getTileIndex",
 "getTileset",
 "handler",
 "handlerState",
 "handlers",
 "hash",
 "head",
 "headerFont",
 "headerText",
 "height",
 "icon",
 "iconImage",
 "id",
 "idleCallbacks",
 "image",
 "img",
 "infoFont",
 "infoTop",
 "init",
 "insertAABB",
 "insertAtKey",
 "isObstacle",
 "isOnWall",
 "isOutOfScreen",
 "isOutsideMap",
 "isPressed",
 "isScaled",
 "isStatic",
 "isValid",
 "isWall",
 "key",
 "kind",
 "layer",
 "layers",
 "left",
 "length",
 "lfsr",
 "lifespan",
 "map",
 "maxLifespan",
 "maxNegativeVelocity",
 "maxSingleStep",
 "maxSpeed",
 "maxStep",
 "maxVelocity",
 "mergeAtKey",
 "millis",
 "minAngle",
 "minLifespan",
 "minSingleStep",
 "minStep",
 "move",
 "moveSprite",
 "multiplier",
 "neighbors",
 "next",
 "offsetX",
 "offsetY",
 "onEvent",
 "onUpdate",
 "once",
 "options",
 "order",
 "overlapHandlers",
 "overlapMap",
 "overlaps",
 "overlapsWith",
 "ox",
 "oy",
 "pFlags",
 "padding",
 "parent",
 "particleSources",
 "period",
 "physicsEngine",
 "pickRandom",
 "playerIndex",
 "position",
 "preferredDelay",
 "pressureLevel",
 "prevTimeMillis",
 "previousScene",
 "priority",
 "raiseButtonDown",
 "raiseButtonRepeat",
 "raiseButtonUp",
 "randomRange",
 "recalcSize",
 "register",
 "registerFrameCallbacks",
 "registerFrameHandler",
 "registerHandler",
 "registerObstacle",
 "remove",
 "removeSprite",
 "render",
 "renderable",
 "repeatDelay",
 "repeatInterval",
 "repeatX",
 "repeatY",
 "resetHitbox",
 "resizeBuckets",
 "right",
 "row",
 "rowCount",
 "runButtonEvents",
 "runCallbacks",
 "runningCallbacks",
 "s",
 "sayEndTime",
 "sayRenderer",
 "scale",
 "scene",
 "sceneDefaultRate",
 "scrollOffset",
 "scrollRow",
 "scrollTarget",
 "seed",
 "selectedCard",
 "selection",
 "setAcceleration",
 "setAnchor",
 "setDirection",
 "setFactory",
 "setFlag",
 "setHitbox",
 "setImage",
 "setKind",
 "setOffset",
 "setPressed",
 "setRate",
 "setRelativeToCamera",
 "setSelection",
 "setSpeed",
 "setState",
 "setTheme",
 "shakeAmplitude",
 "shakeDuration",
 "shakeStartTime",
 "shouldBeVisible",
 "show",
 "source",
 "sourceFactory",
 "sources",
 "speed",
 "spread",
 "sprite",
 "spriteCollisions",
 "spriteNextId",
 "sprites",
 "spritesByKind",
 "src",
 "start",
 "state",
 "sx",
 "sy",
 "system",
 "text",
 "theme",
 "tileIndex",
 "tileMap",
 "tileOverlapHandlers",
 "tileSet",
 "tilemapCollisions",
 "tilemapOverlaps",
 "tileset",
 "timeInSample",
 "timeOut",
 "timer",
 "times",
 "toString",
 "top",
 "unregister",
 "up",
 "update",
 "updateCard",
 "updateParticle",
 "updateScrollTarget",
 "user",
 "value",
 "vid",
 "vx",
 "vy",
 "wallCollisionHandlers",
 "width",
 "x",
 "xOffset",
 "xRange",
 "xStep",
 "y",
 "yOffset",
 "yRange",
 "yStep",
 "z"
];
__this.setupPerfCounters([]);
const pxsim_Array__getAt = pxsim.Array_.getAt;
const pxsim_Array__length = pxsim.Array_.length;
const pxsim_Array__mk = pxsim.Array_.mk;
const pxsim_Array__push = pxsim.Array_.push;
const pxsim_Boolean__bang = pxsim.Boolean_.bang;
const pxsim_String__concat = pxsim.String_.concat;
const pxsim_String__stringConv = pxsim.String_.stringConv;
const pxsim_numops_toBool = pxsim.numops.toBool;
const pxsim_numops_toBoolDecr = pxsim.numops.toBoolDecr;
const pxsim_pxtcore_mkAction = pxsim.pxtcore.mkAction;
const pxsim_pxtcore_mkClassInstance = pxsim.pxtcore.mkClassInstance;
const pxsim_pxtrt_ldlocRef = pxsim.pxtrt.ldlocRef;
const pxsim_pxtrt_mapGetByString = pxsim.pxtrt.mapGetByString;
const pxsim_pxtrt_stclo = pxsim.pxtrt.stclo;
const pxsim_pxtrt_stlocRef = pxsim.pxtrt.stlocRef;
const pxsim_Boolean_ = pxsim.Boolean_;
const pxsim_pxtcore = pxsim.pxtcore;
const pxsim_String_ = pxsim.String_;
const pxsim_ImageMethods = pxsim.ImageMethods;
const pxsim_Array_ = pxsim.Array_;
const pxsim_pxtrt = pxsim.pxtrt;
const pxsim_numops = pxsim.numops;


function _main___P59361(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    globals._intervals___27464 = (undefined);
    globals._pollEventQueue___27473 = (undefined);
    globals.minPriority___23746 = (1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, listeners_inline__P27476);
    globals.listeners___27477 = (s.tmp_0);
    globals.globalVolume___27530 = (null);
    globals.playToneID___27537 = (0);
    r0 = pxsim_pxtcore_mkClassInstance(music_Melody__C24987_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_Melody_constructor__P24990_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = "~15 e3:3 r:1 d#:3 r:1 d:4 r:1 c#:8";
    s.callLocIdx = 0; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    globals.wawawawaa___25004 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(music_Melody__C24987_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_Melody_constructor__P24990_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = "g4:1 c5 e g:2 e:1 g:3";
    s.callLocIdx = 1; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    globals.powerUp___25007 = (s.tmp_0);
    globals.brightness___25125 = (100);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 6);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 8);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex33906);
    globals.font8___25147 = (s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex33908);
    globals.font12___25148 = (s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 6);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 5);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex35330);
    globals.font5___25152 = (s.tmp_0);
    globals.__updated___27586 = (false);
    r0 = pxsim.control.runInParallel(control___screen_inline__P27589);
    r0 = pxsim_pxtcore.setPalette(_hex27600);
    s.tmp_0 = _screen_internal_createScreen__P25208_mk(s);
    s.callLocIdx = 4; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    globals.screen___25204 = (r0);
    globals.RUN_KEY___27606 = ("#run");
    globals.SCOPE_KEY___27607 = ("#scope");
    s.tmp_0 = settings_initScopes__P27618_mk(s);
    s.callLocIdx = 5; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C25355_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P25361_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 5;
    s.tmp_1.arg2 = 4;
    s.callLocIdx = 6; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    globals.A___25283 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C25355_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P25361_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 6;
    s.tmp_1.arg2 = 5;
    s.callLocIdx = 7; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    globals.B___25284 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C25355_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P25361_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1;
    s.tmp_1.arg2 = 47;
    s.callLocIdx = 8; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    globals.left___25285 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C25355_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P25361_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 2;
    s.tmp_1.arg2 = 49;
    s.callLocIdx = 9; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    globals.up___25286 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C25355_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P25361_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = 48;
    s.callLocIdx = 10; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    globals.right___25287 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C25355_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P25361_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 4;
    s.tmp_1.arg2 = 50;
    s.callLocIdx = 11; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    globals.down___25288 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C25355_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P25361_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 7;
    s.tmp_1.arg2 = 51;
    s.callLocIdx = 12; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    globals.menu___25289 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_AnyButton__C27647_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P25361_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = -1;
    s.callLocIdx = 13; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    globals.anyButton___25336 = (s.tmp_0);
    globals._userEventsEnabled___27661 = (true);
    globals.defaultRepeatDelay___27663 = (500);
    globals.defaultRepeatInterval___27665 = (30);
    s.tmp_0 = SpriteKind_create__P25634_mk(s);
    s.callLocIdx = 14; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    globals.Player___25635 = (r0);
    s.tmp_0 = SpriteKind_create__P25634_mk(s);
    s.callLocIdx = 15; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    globals.Food___25637 = (r0);
    s.tmp_0 = SpriteKind_create__P25634_mk(s);
    s.callLocIdx = 16; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    globals.Enemy___25638 = (r0);
    s.tmp_0 = Fx8__P23520_mk(s);
    s.tmp_0.arg0 = 0.1;
    s.callLocIdx = 17; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    globals.MIN_MOVE_GAP___25676 = (r0);
    globals.infoState___27721 = (undefined);
    s.tmp_0 = game_addScenePushHandler__P26075_mk(s);
    s.tmp_0.arg0 = info_inline__P27725;
    s.callLocIdx = 18; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.tmp_0 = game_addScenePopHandler__P26077_mk(s);
    s.tmp_0.arg0 = info_inline__P27740;
    s.callLocIdx = 22; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    r0 = pxsim_Array__mk();
    globals.scene_Scene_initializers___25968 = (r0);
    globals.debug___26057 = (false);
    globals.stats___26058 = (false);
    globals.winEffect___26059 = (undefined);
    globals.loseEffect___26060 = (undefined);
    globals.loseSound___27836 = (undefined);
    globals.winSound___27838 = (undefined);
    s.tmp_0 = scene_systemMenu_initVolume__P28105_mk(s);
    s.callLocIdx = 23; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.tmp_0 = scene_systemMenu_initScreen__P28106_mk(s);
    s.callLocIdx = 24; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    r0 = pxsim_Array__push(globals.scene_Scene_initializers___25968, scene_systemMenu_register__P26163);
    r0 = pxsim.image.ofBuffer(_hex28113);
    globals.CARD_NORMAL___26168 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28115);
    globals.CARD_SELECTED___26169 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28117);
    globals.CARD_ACTIVE___26170 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28119);
    globals.VOLUME_UP_ICON___26171 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28121);
    globals.BRIGHTNESS_DOWN_ICON___26172 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28123);
    globals.CLOSE_MENU_ICON___26173 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28125);
    globals.VOLUME_DOWN_ICON___26174 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28127);
    globals.SLEEP_ICON___26175 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28129);
    globals.CONSOLE_ICON___26176 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28131);
    globals.BRIGHTNESS_UP_ICON___26177 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28133);
    globals.STATS_ICON___26178 = (r0);
    globals.consoleColor___28136 = (1);
    globals.tabSize___28139 = (8);
    globals.consoleFont___28145 = (globals.font5___25152);
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_2 = r0;
    s.tmp_5 = if_charHeight_1_mk(s);
    s.tmp_5.arg0 = globals.consoleFont___28145;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "charHeight");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["charHeight"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["charHeight"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 25; s.pc = 21; return s.tmp_5; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 / s.tmp_3);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.floor(s.tmp_1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    globals.consoleLines___28150 = (r0);
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 8);
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.consoleFont___28145;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 26; s.pc = 22; return s.tmp_4; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 / s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.consoleColumns___28160 = (r0);
    s.tmp_0 = console_addListener__P23754_mk(s);
    s.tmp_0.arg0 = game_consoleOverlay_listener__P28172;
    s.callLocIdx = 27; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = MAX_SOURCES_inline__P32527;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 29; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    globals.MAX_SOURCES___28174 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(particles_SprayFactory__C26248_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_SprayFactory_constructor__P26249_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 20;
    s.tmp_1.arg2 = 0;
    s.tmp_1.arg3 = 60;
    s.callLocIdx = 30; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    globals.defaultFactory___26228 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C26116_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P26118_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 31; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    globals.galois___28194 = (s.tmp_0);
    globals.angleSlice___28202 = (0.06283185307179587);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ScreenEffect__C26323_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ScreenEffect_constructor__P26324_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 10;
    s.tmp_1.arg2 = 40;
    s.tmp_1.arg3 = 4000;
    s.tmp_1.arg4 = confetti_inline__P32059;
    s.callLocIdx = 37; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    globals.confetti___26331 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ImageEffect__C26346_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ImageEffect_constructor__P26347_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 100;
    s.tmp_1.arg2 = dissolve_inline__P36077;
    s.callLocIdx = 43; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    globals.dissolve___26351 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ImageEffect__C26346_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ImageEffect_constructor__P26347_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 125;
    s.tmp_1.arg2 = melt_inline__P31951;
    s.callLocIdx = 46; s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
    globals.melt___26352 = (s.tmp_0);
    r0 = pxsim.image.ofBuffer(_hex28563);
    globals.tileGrass2___26632 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28575);
    globals.tilePath5___26638 = (r0);
    r0 = pxsim.image.ofBuffer(_hex28817);
    globals.forestTiles0___26761 = (r0);
    s.tmp_0 = game_setWaitAnyButton__P26062_mk(s);
    s.tmp_0.arg0 = controller_pauseUntilAnyButtonIsPressed__P25371;
    s.callLocIdx = 47; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.tmp_0 = game_eventContext__P26064_mk(s);
    s.callLocIdx = 48; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    globals.hex___58111 = ("0123456789abcdef");
    r0 = pxsim.image.ofBuffer(_hex30120);
    globals.transparency16___27301 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30124);
    globals.tile1___27302 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30128);
    globals.tile2___27303 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30132);
    globals.tile3___27304 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30136);
    globals.tile4___27305 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30140);
    globals.tile5___27306 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30144);
    globals.tile6___27307 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30148);
    globals.tile7___27308 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30152);
    globals.tile8___27309 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30156);
    globals.tile9___27310 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30160);
    globals.tile10___27311 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30164);
    globals.tile11___27312 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30168);
    globals.tile12___27313 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30172);
    globals.tile13___27314 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30176);
    globals.tile14___27315 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30180);
    globals.tile15___27316 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30184);
    globals.tile16___27317 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30188);
    globals.tile17___27318 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30192);
    globals.tile18___27319 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30196);
    globals.tile19___27320 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30200);
    globals.tile20___27321 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30204);
    globals.tile21___27322 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30208);
    globals.tile22___27323 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30212);
    globals.tile23___27324 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30216);
    globals.tile24___27325 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30220);
    globals.tile25___27326 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30224);
    globals.tile26___27327 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30228);
    globals.tile27___27328 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30232);
    globals.tile28___27329 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30236);
    globals.tile29___27330 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30240);
    globals.tile30___27331 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30244);
    globals.tile31___27332 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30248);
    globals.tile32___27333 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30252);
    globals.tile33___27334 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30256);
    globals.tile34___27335 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30260);
    globals.tile35___27336 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30264);
    globals.tile36___27337 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30268);
    globals.tile37___27338 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30272);
    globals.tile38___27339 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30276);
    globals.tile39___27340 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30280);
    globals.tile40___27341 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30284);
    globals.tile41___27342 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30288);
    globals.tile42___27343 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30292);
    globals.tile43___27344 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30296);
    globals.tile44___27345 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30300);
    globals.tile45___27346 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30304);
    globals.tile46___27347 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30308);
    globals.tile47___27348 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30312);
    globals.tile48___27349 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30316);
    globals.tile49___27350 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30320);
    globals.tile50___27351 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30324);
    globals.tile51___27352 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30328);
    globals.tile52___27353 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30332);
    globals.tile53___27354 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30336);
    globals.tile54___27355 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30340);
    globals.tile55___27356 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30344);
    globals.tile56___27357 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30348);
    globals.tile57___27358 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30352);
    globals.tile58___27359 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30356);
    globals.tile59___27360 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30360);
    globals.tile60___27361 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30364);
    globals.tile61___27362 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30368);
    globals.tile62___27363 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30372);
    globals.tile63___27364 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30376);
    globals.tile64___27365 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30380);
    globals.tile65___27366 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30384);
    globals.tile66___27367 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30388);
    globals.tile67___27368 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30392);
    globals.tile68___27369 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30396);
    globals.tile69___27370 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30400);
    globals.tile70___27371 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30404);
    globals.tile71___27372 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30408);
    globals.tile72___27373 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30412);
    globals.tile73___27374 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30416);
    globals.tile74___27375 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30420);
    globals.tile75___27376 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30424);
    globals.tile76___27377 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30428);
    globals.tile77___27378 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30432);
    globals.tile78___27379 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30436);
    globals.tile79___27380 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30440);
    globals.tile80___27381 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30444);
    globals.tile81___27382 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30448);
    globals.tile82___27383 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30452);
    globals.tile83___27384 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30456);
    globals.tile84___27385 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30460);
    globals.tile85___27386 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30464);
    globals.tile86___27387 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30468);
    globals.tile87___27388 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30472);
    globals.tile88___27389 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30476);
    globals.tile89___27390 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30480);
    globals.tile90___27391 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30484);
    globals.tile91___27392 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30488);
    globals.tile92___27393 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30492);
    globals.tile93___27394 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30496);
    globals.tile94___27395 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30500);
    globals.tile95___27396 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30504);
    globals.tile96___27397 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30508);
    globals.tile97___27398 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30512);
    globals.tile98___27399 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30516);
    globals.tile99___27400 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30520);
    globals.tile100___27401 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30524);
    globals.tile101___27402 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30528);
    globals.tile102___27403 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30532);
    globals.tile103___27404 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30536);
    globals.tile104___27405 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30540);
    globals.tile105___27406 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30544);
    globals.tile106___27407 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30548);
    globals.tile107___27408 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30552);
    globals.tile108___27409 = (r0);
    r0 = pxsim.image.ofBuffer(_hex30556);
    globals.tile109___27410 = (r0);
    s.tmp_0 = helpers__registerFactory__P26387_mk(s);
    s.tmp_0.arg0 = "tilemap";
    s.tmp_0.arg1 = myTiles_inline__P30560;
    s.callLocIdx = 80; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.tmp_0 = helpers__registerFactory__P26387_mk(s);
    s.tmp_0.arg0 = "tile";
    s.tmp_0.arg1 = myTiles_inline__P30578;
    s.callLocIdx = 82; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    s.tmp_0 = scene_setBackgroundImage__P25988_mk(s);
    r0 = pxsim.image.ofBuffer(_hex43338);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 83; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_0.arg0 = globals.A___25283;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = inline__P43342;
    s.callLocIdx = 85; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_0.arg0 = globals.B___25284;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = inline__P43347;
    s.callLocIdx = 87; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_main___P59361.info = {"start":0,"length":0,"line":0,"column":0,"endLine":0,"endColumn":0,"fileName":"test.ts","functionName":"<main>","argumentNames":[]}
_main___P59361.continuations = [  ]

function _main___P59361_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _main___P59361, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
} }

const _hex33906 = pxsim.BufferMethods.createBufferFromHex("")
const _hex33908 = pxsim.BufferMethods.createBufferFromHex("20000000000000000000000000000000000000000000000000002100000000000006fc0000000000000000000000000000000000220000001c00000000001c0000000000000000000000000000002300a000f807a000f807a00000000000000000000000000000002400000018022404460c8803000000000000000000000000000025003802c4017800200390040803000000000000000000000000260080037804a4041803800340040000000000000000000000002700000000001c00000000000000000000000000000000000000280000000000f8010606010800000000000000000000000000002900000001080606f801000000000000000000000000000000002a00040014000e001400040000000000000000000000000000002b0040004000f8034000400000000000000000000000000000002c000000000000090006000000000000000000000000000000002d000000800080008000000000000000000000000000000000002e000000000000060000000000000000000000000000000000002f00000c800360001c000300000000000000000000000000000030000000f80304040404f80300000000000000000000000000003100000004040404fc07000400040000000000000000000000003200000008060405c4043804000000000000000000000000000033000000080244044404b803000000000000000000000000000034000000800170010801fc070001000000000000000000000000350000023c0424042404c403000000000000000000000000000036000000f0034804440488030000000000000000000000000000370000000400c40734000c00000000000000000000000000000038000000b80344044404b803000000000000000000000000000039000000780284048802f00100000000000000000000000000003a000000000030060000000000000000000000000000000000003b000000000018090006000000000000000000000000000000003c004000a000a000a000100100000000000000000000000000003d002001200120012001200100000000000000000000000000003e0000001001a000a000a00040000000000000000000000000003f000000080084066400180000000000000000000000000000004000f0030c04c20822092409f80900000000000000000000000041000007f8008400f8000007000000000000000000000000000042000000fc0744044404b803000000000000000000000000000043000000f001080204040404080200000000000000000000000044000000fc0704040802f001000000000000000000000000000045000000fc07440444044404000000000000000000000000000046000000fc07440044004400000000000000000000000000000047000000f00108024404c803000000000000000000000000000048000000fc0740004000fc070000000000000000000000000000490000000404fc070404040400000000000000000000000000004a000000000200040004fc0300000000000000000000000000004b000000fc074000f0000c0304040000000000000000000000004c000000fc0700040004000400000000000000000000000000004d000000fc0738007000fc0700000000000000000000000000004e000000fc073800c003fc0700000000000000000000000000004f000000f80304040404f803000000000000000000000000000050000000fc07840084004400780000000000000000000000000051000000fc0102020206fc09000000000000000000000000000052000000fc074400c4013806000000000000000000000000000053000000180224044404880300000000000000000000000000005400000004000400fc070400040000000000000000000000000055000000fc0300040004fc03000000000000000000000000000056000c00f0030004f0030c00000000000000000000000000000057007c008007e001f0010007fc0000000000000000000000000058000404b8034000b80304040000000000000000000000000000590004003800c00730000c0000000000000000000000000000005a0004040407e4041c04040400000000000000000000000000005b0000000000ff0f0108010800000000000000000000000000005c0003001c0060008003000c00000000000000000000000000005d00000001080108ff0f000000000000000000000000000000005e004000380004003800400000000000000000000000000000005f00000800080008000800080000000000000000000000000000600000000000020004000000000000000000000000000000000061000000200390049004e007000000000000000000000000000062000000fc0710041004e003000000000000000000000000000063000000c001200210043004000200000000000000000000000064000000e00310041004fc07000000000000000000000000000065000000e00390049004e0040000000000000000000000000000660000001000f80714001400000000000000000000000000000067000000b806440944093c09040600000000000000000000000068000000fc0710001000e0070000000000000000000000000000690000000000f4070000000000000000000000000000000000006a00000800080008fd07000000000000000000000000000000006b000000fe078000e001100610040000000000000000000000006c0000000000fc030004000400000000000000000000000000006d00f00710001000e0071000e0070000000000000000000000006e000000f00710001000e00700000000000000000000000000006f000000e00310041004e003000000000000000000000000000070000000fc0f04010401f800000000000000000000000000000071000000f80004010401fc0f000000000000000000000000000072000000f00720001000100000000000000000000000000000007300000060029004900420030000000000000000000000000000740000001000fc0310041004000000000000000000000000000075000000f00300040004f007000000000000000000000000000076003000c0030004c003300000000000000000000000000000007700f0000007e003c0010007f000000000000000000000000000780010046003800060031004000000000000000000000000000079000c0870088007f0000c0000000000000000000000000000007a000000000410079004700410040000000000000000000000007b0000004000be070108010800000000000000000000000000007c0000000000ff0f0000000000000000000000000000000000007d00000001080108be07400000000000000000000000000000007e00800040004000800080004000000000000000000000000000")
const _hex35330 = pxsim.BufferMethods.createBufferFromHex("20000000000000002100001700000000220000030003000023000a1f0a1f0a0024000a17151d0a00250013090412190026000a15150a100027000003000000002800000e11000000290000110e0000002a00000a040a00002b0000040e0400002c000010080000002d000004040400002e000008000000002f0010080402010030000e11110e0000310000121f100000320019151512000033000911150b000034000c0a091f080035001715151509003600081416150800370011090503010038000a1515150a00390002150d0502003a00000a000000003b0000100a0000003c0000040a1100003d00000a0a0a00003e0000110a0400003f0002011505020040000e1115090e0041001e05051e000042001f15150a000043000e111111000044001f11110e000045001f151511000046001f050501000047000e1111150c0048001f04041f00004900111f110000004a000911110f01004b001f040a1100004c001f10101000004d001f0204021f004e001f0204081f004f000e11110e000050001f0505020000510006091916000052001f05050a10005300121515090000540001011f01010055000f10100f0000560007081008070057001f0804081f0058001b04041b0000590001021c0201005a001915131100005b00001f111100005c000102040810005d000011111f00005e000002010200005f00101010101000600000010200000061000c12121e100062001f141408000063000c121212000064000814141f000065000e15151200006600041e0501000067000215150f000068001f04041800006900001d000000006a000010100d00006b001f040a1000006c00000f101000006d001e0204021e006e001e02021c00006f000c12120c000070001e0a0a0400007100040a0a1e000072001c0202020000730010140a0200007400000f1414100075000e10101e1000760006081008060077001e1008101e007800120c0c12000079001214080402007a00121a161200007b0000041f1100007c00001f000000007d00111f040000007e00000404080800d3000c1213130c00f3000c12130d000004010e05051e100005010609191f080006010c121313120007010c121313000018010f0b1b19000019010e151d1a000041011f14121000004201100f1412000043011f0205081f0044011e03031c00005a0110140b0302005b0110140b0300007901121a171300007a01121a171300007b01121b171200007c01121b17120000")
const _hex27600 = pxsim.BufferMethods.createBufferFromHex("000000ffffffff2121ff93c4ff8135fff609249ca378dc52003fad87f2ff8e2ec4a4839f5c406ce5cdc491463d000000")
const _hex28113 = pxsim.BufferMethods.createBufferFromHex
const _hex28115 = pxsim.BufferMethods.createBufferFromHex
const _hex28117 = pxsim.BufferMethods.createBufferFromHex
const _hex28119 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d00000000000000000000000070666607000000000000000000000000006776000000000000000000000000660700007066000000000000000000006766777766760000000000000000000060666666660600000000000000000066006766667600660000000000000000667600000000676600000000000000006766767777676676000000000000000060666666666666060000000000000000006766666666760000000000000000000000676666760000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex28121 = pxsim.BufferMethods.createBufferFromHex("8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0bb000000000000000000000000b000404500b0000000000000000000005b0b000400540b0000000000000000b0550400000054b5000000000000000000440040bb0040040000000000000000000040d4ddbb0000000000000000000000004055ddbd000000000000000000004b005455d5dd0b400b000000000000005b045411d5dd0b540b000000000000004b005411d5dd0b400b0000000000000000004055ddbd00000000000000000000000040d4ddbb0000000000000000000000440040bb0040040000000000000000b0550400000054b50000000000000000005b04000400540b000000000000000000b000404500b0000000000000000000000000b0bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex28123 = pxsim.BufferMethods.createBufferFromHex
const _hex28125 = pxsim.BufferMethods.createBufferFromHex("8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d0000000000000000000000007066660700000000000000000000000000677600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex28127 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0cbcc0c0000000000000000000000b0db55d5cd0c00000000000000000000db555555ddcd000000000000000000b055555555d59d0b0000000000000000db55555555d59db900000000000000005b55555555d5ddb900000000000000b05db5cccc5bdddd990b000000000000b055ccccccccdddd9d0b000000000000b0b5ccccccccdbdd9d0b000000000000b0c5ccccccccdcdd9d0b000000000000b0c5ccdccbccdcdd9d0c000000000000b0cdcc5b55ccdcdd9d0c00000000000000ccdc55b5ccdcddc90000000000000000cccc5b55ccdbddc90000000000000000c0ccdccbccdd9d0c000000000000000000ccccccdbddcd00000000000000000000c0dcddddcd0c0000000000000000000000c0cccc0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex28129 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00000000000000b0bbbbbbbbcb00c0cd000000000000001bddddddddbd0c1ccd000000000000b011cbccccccbc0c1ccd000000000000b01d6c666666bc0cbccd000000000000b01d6c616661bc0c1ccd000000000000b01d6c161666bccc1bcd000000000000b01d6c666166bcccbbcd000000000000b01d6c666666bccc1bcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666661bcccbbcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666666bc0c1ccd000000000000b01dcbccccccbc0cbccd000000000000c0b1bbbbbbbbbb0cdccb000000000000c0bbbbbbbbbbcb00dc0c00000000000000cccccccccc0c00cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex28131 = pxsim.BufferMethods.createBufferFromHex("87042000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004004000000000000000000000000000054450000000000000000000000440b00bbbb00b0440000000000000040550b00000000b0550400000000000040b5000044bb00005b04000000000000b00b0044ddddbb00b00b0000000000000000405d55d5dd0b00000000000000000000d4555555ddbd0000000000000000000054555555d5bd0000000000000000b44055555555d5dd0b4b000000000040b54055555555d5dd0b5b040000000040b54055555555d5dd0b5b040000000000b44055115555d5dd0b4b000000000000000054115555d5bd00000000000000000000d4555555ddbd00000000000000000000405d55d5dd0b0000000000000000b00b0044ddddbb00b00b00000000000040b5000044bb00005b0400000000000040550b00000000b0550400000000000000440b00bbbb00b0440000000000000000000000544500000000000000000000000000004004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex28133 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbb00000000000000000000000000b055bb00bbbbbb000000000000000000b0b5bdbcbbbbddcb0000000000000000b0dbcb5b5555bbdd0c00000000000000b0cbdcbdbb5b55dbcd0000000000000000c0dddb11d15bb5bd0c00000000000000bbbd111111b155bb0c00000000000000db1b111111115bb5cb00000000000000db1bb11d1199b9d5cb00000000000000db1b11bb9199b955cb000000000000005b1b11b19b99995bcb000000000000005b1d1111bb99995ccb00000000000000b0b511bbbb99995ccb00000000000000b0d51d919999d95b0b00000000000000005bdb919999c9d50b0000000000000000b0d51b99d9bcb5000000000000000000005bd5bbbc550b00000000000000000000b05b5555bd000000000000000000000000b0bbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex28563 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex28575 = pxsim.BufferMethods.createBufferFromHex("8704100010000000dddddddddd1dd1dddddddddddd1dd1dddddddbdddddddddd1dd1dddddddddddd1dd1dddddddddddddddddddddbdddddddddddddddddd1dddddddddddddddddddddddddddddddddddddddbbddddddddddddddbbdddddddddddddddddddddddddddddddddddddddbddbdddddddddddddddddddddddddddddbddddddddddddddddd")
const _hex28817 = pxsim.BufferMethods.createBufferFromHex("87041000100000000060668866880800607677768766f800607767776686660f767777777767e6fe767777777766e8fe76777777676686fe767777777677668676777777776766ee76777777776688e876777777676686f876777777776666ff76777777766786ff76777777678688f8607767776766880f607677768766f8000060668866880800")
const _hex30120 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30124 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30128 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30132 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30136 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30140 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30144 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30148 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30152 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30156 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30160 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30164 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30168 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30172 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30176 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30180 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30184 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30188 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30192 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30196 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30200 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30204 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30208 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30212 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30216 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30220 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30224 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30228 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30232 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30236 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30240 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30244 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30248 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30252 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30256 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30260 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30264 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30268 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30272 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30276 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30280 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30284 = pxsim.BufferMethods.createBufferFromHex("87041000100000001111111111111111010000001000001001000000010000100100001000000010010000010000001101001000000010100100010000000110011000000010001001010000000100101100000010000010010000000100001001000010000000100100000100000010010010000000001001000100000000101111111111111111")
const _hex30288 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30292 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30296 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30300 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30304 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30308 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30312 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30316 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30320 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30324 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30328 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30332 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30336 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30340 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30344 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30348 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30352 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30356 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30360 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30364 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30368 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30372 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30376 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30380 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30384 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30388 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30392 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30396 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30400 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30404 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30408 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30412 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30416 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30420 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30424 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30428 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30432 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30436 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30440 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30444 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30448 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30452 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex30456 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30460 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30464 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30468 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30472 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30476 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30480 = pxsim.BufferMethods.createBufferFromHex("87041000100000000060668866880800607677768766f800607767776686660f767777777767e6fe767777777766e8fe76777777676686fe767777777677668676777777776766ee76777777776688e876777777676686f876777777776666ff76777777766786ff76777777678688f8607767776766880f607677768766f8000060668866880800")
const _hex30484 = pxsim.BufferMethods.createBufferFromHex("8704100010000000dddddddddd1dd1dddddddddddd1dd1dddddddbdddddddddd1dd1dddddddddddd1dd1dddddddddddddddddddddbdddddddddddddddddd1dddddddddddddddddddddddddddddddddddddddbbddddddddddddddbbdddddddddddddddddddddddddddddddddddddddbddbdddddddddddddddddddddddddddddbddddddddddddddddd")
const _hex30488 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30492 = pxsim.BufferMethods.createBufferFromHex("87041000100000000060668866880800607677768766f800607767776686660f767777777767e6fe767777777766e8fe76777777676686fe767777777677668676777777776766ee76777777776688e876777777676686f876777777776666ff76777777766786ff76777777678688f8607767776766880f607677768766f8000060668866880800")
const _hex30496 = pxsim.BufferMethods.createBufferFromHex("8704100010000000dddddddddd1dd1dddddddddddd1dd1dddddddbdddddddddd1dd1dddddddddddd1dd1dddddddddddddddddddddbdddddddddddddddddd1dddddddddddddddddddddddddddddddddddddddbbddddddddddddddbbdddddddddddddddddddddddddddddddddddddddbddbdddddddddddddddddddddddddddddbddddddddddddddddd")
const _hex30500 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30504 = pxsim.BufferMethods.createBufferFromHex("87041000100000000060668866880800607677768766f800607767776686660f767777777767e6fe767777777766e8fe76777777676686fe767777777677668676777777776766ee76777777776688e876777777676686f876777777776666ff76777777766786ff76777777678688f8607767776766880f607677768766f8000060668866880800")
const _hex30508 = pxsim.BufferMethods.createBufferFromHex("8704100010000000dddddddddd1dd1dddddddddddd1dd1dddddddbdddddddddd1dd1dddddddddddd1dd1dddddddddddddddddddddbdddddddddddddddddd1dddddddddddddddddddddddddddddddddddddddbbddddddddddddddbbdddddddddddddddddddddddddddddddddddddddbddbdddddddddddddddddddddddddddddbddddddddddddddddd")
const _hex30512 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30516 = pxsim.BufferMethods.createBufferFromHex("87041000100000000060668866880800607677768766f800607767776686660f767777777767e6fe767777777766e8fe76777777676686fe767777777677668676777777776766ee76777777776688e876777777676686f876777777776666ff76777777766786ff76777777678688f8607767776766880f607677768766f8000060668866880800")
const _hex30520 = pxsim.BufferMethods.createBufferFromHex("8704100010000000dddddddddd1dd1dddddddddddd1dd1dddddddbdddddddddd1dd1dddddddddddd1dd1dddddddddddddddddddddbdddddddddddddddddd1dddddddddddddddddddddddddddddddddddddddbbddddddddddddddbbdddddddddddddddddddddddddddddddddddddddbddbdddddddddddddddddddddddddddddbddddddddddddddddd")
const _hex30524 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30528 = pxsim.BufferMethods.createBufferFromHex("87041000100000000060668866880800607677768766f800607767776686660f767777777767e6fe767777777766e8fe76777777676686fe767777777677668676777777776766ee76777777776688e876777777676686f876777777776666ff76777777766786ff76777777678688f8607767776766880f607677768766f8000060668866880800")
const _hex30532 = pxsim.BufferMethods.createBufferFromHex("8704100010000000dddddddddd1dd1dddddddddddd1dd1dddddddbdddddddddd1dd1dddddddddddd1dd1dddddddddddddddddddddbdddddddddddddddddd1dddddddddddddddddddddddddddddddddddddddbbddddddddddddddbbdddddddddddddddddddddddddddddddddddddddbddbdddddddddddddddddddddddddddddbddddddddddddddddd")
const _hex30536 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30540 = pxsim.BufferMethods.createBufferFromHex("87041000100000000060668866880800607677768766f800607767776686660f767777777767e6fe767777777766e8fe76777777676686fe767777777677668676777777776766ee76777777776688e876777777676686f876777777776666ff76777777766786ff76777777678688f8607767776766880f607677768766f8000060668866880800")
const _hex30544 = pxsim.BufferMethods.createBufferFromHex("8704100010000000dddddddddd1dd1dddddddddddd1dd1dddddddbdddddddddd1dd1dddddddddddd1dd1dddddddddddddddddddddbdddddddddddddddddd1dddddddddddddddddddddddddddddddddddddddbbddddddddddddddbbdddddddddddddddddddddddddddddddddddddddbddbdddddddddddddddddddddddddddddbddddddddddddddddd")
const _hex30548 = pxsim.BufferMethods.createBufferFromHex("870410001000000075777777777777777777d176771776777537116377717157771176d177177677771176d17777777777371163777777777777d176177677777777777771717777777777771776777777576577777777777777775775176d777777775576133176776177671761177d171777771761177d77617777771331767777777777176d77")
const _hex30552 = pxsim.BufferMethods.createBufferFromHex("87041000100000000060668866880800607677768766f800607767776686660f767777777767e6fe767777777766e8fe76777777676686fe767777777677668676777777776766ee76777777776688e876777777676686f876777777776666ff76777777766786ff76777777678688f8607767776766880f607677768766f8000060668866880800")
const _hex30556 = pxsim.BufferMethods.createBufferFromHex("8704100010000000dddddddddd1dd1dddddddddddd1dd1dddddddbdddddddddd1dd1dddddddddddd1dd1dddddddddddddddddddddbdddddddddddddddddd1dddddddddddddddddddddddddddddddddddddddbbddddddddddddddbbdddddddddddddddddddddddddddddddddddddddbddbdddddddddddddddddddddddddddddbddddddddddddddddd")
const _hex43338 = pxsim.BufferMethods.createBufferFromHex("8704a000780000001111111111111111111111111111111111d1dddddd99999999999999999999999969666666666666666666666666666666666666666666666666666611111111111111111111111111111111dddddddddd9d99999999999999999999966966666666666666666666666666666666666666666666666666661111111111111111111111111111d1dddddddddddd9d999999999999999696696666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddddddd9999999999996666666666666666666666666666666666666666666666666666666666666666111111111111111111111111d1dddddddddddddddddd9d999999999969696666666666666666666666666666666666666666666666666666666666661111111111111111111111d1dddddddddddddddddddddd999999999999996666666666666666666666666666666666666666666666666666666666661111111111111111111111dddddddddddddddddddddddd9d9999999999996666666666666666666666666666666666666666666666666666666666661111111111111111111111dddddddddddddddddddddddd9d99969999966966666666666666666666666666666666666666666666666666666666666611111111111111111111d1dddddddddddddddddddddddd9999966969966666666666666666666666666666666666666666666666666666666666666611111111111111111111d1ddddddddddddddddddddddd69969666669966666666666666666666666666666666666666666666666666666666666666611111111111111111111d1ddddddddddddddddddddddd69666669666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd6ddd6d669666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd6d6d66666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddd66666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddd6d66666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111ddddddddddddddddddd66d666666666669666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1ddddddddddddddddddddddd6666d666669666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1ddddddddddddddddddddddd66ddd669969666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1dddddddddddddddddddddddddddd6d9999966966666666666666666666666666666666666666666666666666666666666666111111111111111111d1dddddddddddddddddddddddddddd9d999999666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddddddddddddd999969696666666666666666666666666666666666666666666666666666666666666666111111111111111111111111d1dddddddddddddddddddd9d99996669666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddddd9969696666666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddd9d6966666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddd999999966669666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dd9d99999999696996666666666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111dddddddd9d99999999999996666966666666666666666666666666666666666666666666666666666666661111111111111111111111111111dddddddddddddd99999999999999996969966666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd9d99999999999999999999966666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd9d99999999999999999999996969666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd999999999999999999999999999966666666666666666666666666666666666666666666666666661111111111111111111111111111dddddddddddd99999999999999999999999996666666666666666666666666666666666666666666666666666666111111111111111111111111111111d1dddddddd99999999999999999999999666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111d1dd9999999999999999996969666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111dd99999999999999999666666666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111dddd99999999999999666666666666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111dddd999999999999999966696666666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddd9d9999999999999999999696666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddd9d9999999999999999999999696666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddddd99999999999999999999999969666666666666666666666666666666666666666666666666666611111111111111111111111111111111dddddddddd9d99999999999999999999966966666666666666666666666666666666666666666666666666661111111111111111111111111111d1dddddddddddd9d999999999999999696696666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddddddd9999999999996666666666666666666666666666666666666666666666666666666666666666111111111111111111111111d1dddddddddddddddddd9d999999999969696666666666666666666666666666666666666666666666666666666666661111111111111111111111d1dddddddddddddddddddddd999999999999996666666666666666666666666666666666666666666666666666666666661111111111111111111111dddddddddddddddddddddddd9d9999999999996666666666666666666666666666666666666666666666666666666666661111111111111111111111dddddddddddddddddddddddd9d99969999966966666666666666666666666666666666666666666666666666666666666611111111111111111111d1dddddddddddddddddddddddd9999966969966666666666666666666666666666666666666666666666666666666666666611111111111111111111d1ddddddddddddddddddddddd69969666669966666666666666666666666666666666666666666666666666666666666666611111111111111111111d1ddddddddddddddddddddddd69666669666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd6ddd6d669666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd6d6d66666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddd66666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddd6d66666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111ddddddddddddddddddd66d666666666669666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1ddddddddddddddddddddddd6666d666669666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1ddddddddddddddddddddddd66ddd669969666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1dddddddddddddddddddddddddddd6d9999966966666666666666666666666666666666666666666666666666666666666666111111111111111111d1dddddddddddddddddddddddddddd9d999999666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddddddddddddd999969696666666666666666666666666666666666666666666666666666666666666666111111111111111111111111d1dddddddddddddddddddd9d99996669666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddddd9969696666666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddd9d6966666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddd999999966669666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dd9d99999999696996666666666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111dddddddd9d99999999999996666966666666666666666666666666666666666666666666666666666666661111111111111111111111111111dddddddddddddd99999999999999996969966666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd9d99999999999999999999966666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd9d99999999999999999999996969666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd999999999999999999999999999966666666666666666666666666666666666666666666666666661111111111111111111111111111dddddddddddd99999999999999999999999996666666666666666666666666666666666666666666666666666666111111111111111111111111111111d1dddddddd99999999999999999999999666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111d1dd9999999999999999996969666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111dd99999999999999999666666666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111dddd99999999999999666666666666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111dddd999999999999999966696666666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddd9d9999999999999999999696666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddd9d9999999999999999999999696666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddddd99999999999999999999999969666666666666666666666666666666666666666666666666666611111111111111111111111111111111dddddddddd9d99999999999999999999966966666666666666666666666666666666666666666666666666661111111111111111111111111111d1dddddddddddd9d999999999999999696696666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddddddd9999999999996666666666666666666666666666666666666666666666666666666666666666111111111111111111111111d1dddddddddddddddddd9d999999999969696666666666666666666666666666666666666666666666666666666666661111111111111111111111d1dddddddddddddddddddddd999999999999996666666666666666666666666666666666666666666666666666666666661111111111111111111111dddddddddddddddddddddddd9d9999999999996666666666666666666666666666666666666666666666666666666666661111111111111111111111dddddddddddddddddddddddd9d99969999966966666666666666666666666666666666666666666666666666666666666611111111111111111111d1dddddddddddddddddddddddd9999966969966666666666666666666666666666666666666666666666666666666666666611111111111111111111d1ddddddddddddddddddddddd69969666669966666666666666666666666666666666666666666666666666666666666666611111111111111111111d1ddddddddddddddddddddddd69666669666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd6ddd6d669666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd6d6d66666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddd66666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddd6d66666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111ddddddddddddddddddd66d666666666669666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1ddddddddddddddddddddddd6666d666669666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1ddddddddddddddddddddddd66ddd669969666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1dddddddddddddddddddddddddddd6d9999966966666666666666666666666666666666666666666666666666666666666666111111111111111111d1dddddddddddddddddddddddddddd9d999999666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddddddddddddd999969696666666666666666666666666666666666666666666666666666666666666666111111111111111111111111d1dddddddddddddddddddd9d99996669666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddddd9969696666666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddd9d6966666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddd999999966669666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dd9d99999999696996666666666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111dddddddd9d99999999999996666966666666666666666666666666666666666666666666666666666666661111111111111111111111111111dddddddddddddd99999999999999996969966666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd9d99999999999999999999966666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd9d99999999999999999999996969666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd999999999999999999999999999966666666666666666666666666666666666666666666666666661111111111111111111111111111dddddddddddd99999999999999999999999996666666666666666666666666666666666666666666666666666666111111111111111111111111111111d1dddddddd99999999999999999999999666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111d1dd9999999999999999996969666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111dd99999999999999999666666666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111dddd99999999999999666666666666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111dddd999999999999999966696666666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddd9d9999999999999999999696666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddd9d9999999999999999999999696666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddddd99999999999999999999999969666666666666666666666666666666666666666666666666666611111111111111111111111111111111dddddddddd9d99999999999999999999966966666666666666666666666666666666666666666666666666661111111111111111111111111111d1dddddddddddd9d999999999999999696696666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddddddd9999999999996666666666666666666666666666666666666666666666666666666666666666111111111111111111111111d1dddddddddddddddddd9d999999999969696666666666666666666666666666666666666666666666666666666666661111111111111111111111d1dddddddddddddddddddddd999999999999996666666666666666666666666666666666666666666666666666666666661111111111111111111111dddddddddddddddddddddddd9d9999999999996666666666666666666666666666666666666666666666666666666666661111111111111111111111dddddddddddddddddddddddd9d99969999966966666666666666666666666666666666666666666666666666666666666611111111111111111111d1dddddddddddddddddddddddd9999966969966666666666666666666666666666666666666666666666666666666666666611111111111111111111d1ddddddddddddddddddddddd69969666669966666666666666666666666666666666666666666666666666666666666666611111111111111111111d1ddddddddddddddddddddddd69666669666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd6ddd6d669666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd6d6d66666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddd666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddd66666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddd6d66666666666666666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111ddddddddddddddddddd66d666666666669666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1ddddddddddddddddddddddd6666d666669666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1ddddddddddddddddddddddd66ddd669969666666666666666666666666666666666666666666666666666666666666666666111111111111111111d1dddddddddddddddddddddddddddd6d9999966966666666666666666666666666666666666666666666666666666666666666111111111111111111d1dddddddddddddddddddddddddddd9d999999666666666666666666666666666666666666666666666666666666666666666611111111111111111111dddddddddddddddddddddddddddd999969696666666666666666666666666666666666666666666666666666666666666666111111111111111111111111d1dddddddddddddddddddd9d99996669666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddddd9969696666666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddd9d6966666666666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dddd999999966669666666666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111d1dd9d99999999696996666666666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111dddddddd9d99999999999996666966666666666666666666666666666666666666666666666666666666661111111111111111111111111111dddddddddddddd99999999999999996969966666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd9d99999999999999999999966666666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd9d99999999999999999999996969666666666666666666666666666666666666666666666666666611111111111111111111111111d1dddddddddddd999999999999999999999999999966666666666666666666666666666666666666666666666666661111111111111111111111111111dddddddddddd99999999999999999999999996666666666666666666666666666666666666666666666666666666111111111111111111111111111111d1dddddddd99999999999999999999999666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111d1dd9999999999999999996969666666666666666666666666666666666666666666666666666666666611111111111111111111111111111111111111dd99999999999999999666666666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111dddd99999999999999666666666666666666666666666666666666666666666666666666666666666666111111111111111111111111111111111111dddd999999999999999966696666666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddd9d9999999999999999999696666666666666666666666666666666666666666666666666666666661111111111111111111111111111111111d1dddd9d999999999999999999999969666666666666666666666666666666666666666666666666666666")




function control___screen_inline__P27589(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

  case 1:
    r0 = pxsim_numops_toBoolDecr(true);
    if (!r0) { step = 4; continue; }
    globals.__updated___27586 = (false);
    s.tmp_0 = pause__P23784_mk(s);
    s.tmp_0.arg0 = 200;
    s.callLocIdx = 2; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals.__updated___27586);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = control___screen_update__P25165_mk(s);
    s.callLocIdx = 3; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    globals.__updated___27586 = (true);
  case 2:
  case 3:
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_inline__P27589.info = {"start":396,"length":211,"line":17,"column":26,"endLine":26,"endColumn":5,"fileName":"pxt_modules/screen---st7735/frame.ts","functionName":"inline","argumentNames":[]}

function control___screen_inline__P27589_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_inline__P27589, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function info_inline__P27725(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals.infoState___27721);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_numops_toBoolDecr(globals.infoStateStack___27723);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals.infoStateStack___27723 = (r0);
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "state", globals.infoState___27721);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "scene", s.arg0);
    r0 = pxsim_Array__push(globals.infoStateStack___27723, s.tmp_0);
    globals.infoState___27721 = (undefined);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_inline__P27725.info = {"start":1996,"length":259,"line":75,"column":29,"endLine":84,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["oldScene"]}

function info_inline__P27725_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_inline__P27725, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function info_inline__P27740(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___27741 = undefined;
    s.nextState___27750 = undefined;
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 19; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___27741 = (r0);
    globals.infoState___27721 = (undefined);
    s.tmp_0 = r0 = globals.infoStateStack___27723;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals.infoStateStack___27723);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array_.pop(globals.infoStateStack___27723);
    s.nextState___27750 = (r0);
    s.tmp_2 = if_scene_1_mk(s);
    s.tmp_2.arg0 = s.nextState___27750;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "scene");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["scene"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["scene"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 20; s.pc = 8; return s.tmp_2; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.scene___27741);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = if_state_1_mk(s);
    s.tmp_3.arg0 = s.nextState___27750;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "state");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["state"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["state"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 21; s.pc = 9; return s.tmp_3; }
    }
  case 9:
    r0 = s.retval;
    globals.infoState___27721 = (r0);
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__push(globals.infoStateStack___27723, s.nextState___27750);
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_inline__P27740.info = {"start":2287,"length":376,"line":86,"column":28,"endLine":97,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":[]}

function info_inline__P27740_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_inline__P27740, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___27741: undefined,
  nextState___27750: undefined,
} }





function myTiles_inline__P30560(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_1 = helpers_stringTrim__P23494_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 78; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq("level1", s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq("level1", s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, globals.transparency16___27301);
    r0 = pxsim_Array__push(s.tmp_2, globals.tileGrass2___26632);
    r0 = pxsim_Array__push(s.tmp_2, globals.forestTiles0___26761);
    r0 = pxsim_Array__push(s.tmp_2, globals.tilePath5___26638);
    s.tmp_3 = tiles_createTilemap__P25869_mk(s);
    s.tmp_3.arg0 = _hex30567;
    r0 = pxsim.image.ofBuffer(_hex30569);
    s.tmp_3.arg1 = r0;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = 4;
    s.callLocIdx = 79; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    r0 = null;
  case 4:
    return leave(s, r0)
  default: oops()
} } }
myTiles_inline__P30560.info = {"start":11437,"length":1373,"line":223,"column":40,"endLine":246,"endColumn":5,"fileName":"tilemap.g.ts","functionName":"inline","argumentNames":["name"]}

function myTiles_inline__P30560_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: myTiles_inline__P30560, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }

const _hex30567 = pxsim.BufferMethods.createBufferFromHex
const _hex30569 = pxsim.BufferMethods.createBufferFromHex("87041000100000000202000000000000000000000000000002020000000000000000000000000000020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")




function myTiles_inline__P30578(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_1 = helpers_stringTrim__P23494_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 81; s.pc = 113; return s.tmp_1;
  case 113:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq("transparency16", s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile1", s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile2", s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile3", s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile4", s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile5", s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile6", s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile7", s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile8", s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile9", s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile10", s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile11", s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile12", s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile13", s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile14", s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile15", s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile16", s.tmp_0);
    if (r0) { step = 17; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile17", s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile18", s.tmp_0);
    if (r0) { step = 19; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile19", s.tmp_0);
    if (r0) { step = 20; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile20", s.tmp_0);
    if (r0) { step = 21; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile21", s.tmp_0);
    if (r0) { step = 22; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile22", s.tmp_0);
    if (r0) { step = 23; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile23", s.tmp_0);
    if (r0) { step = 24; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile24", s.tmp_0);
    if (r0) { step = 25; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile25", s.tmp_0);
    if (r0) { step = 26; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile26", s.tmp_0);
    if (r0) { step = 27; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile27", s.tmp_0);
    if (r0) { step = 28; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile28", s.tmp_0);
    if (r0) { step = 29; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile29", s.tmp_0);
    if (r0) { step = 30; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile30", s.tmp_0);
    if (r0) { step = 31; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile31", s.tmp_0);
    if (r0) { step = 32; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile32", s.tmp_0);
    if (r0) { step = 33; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile33", s.tmp_0);
    if (r0) { step = 34; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile34", s.tmp_0);
    if (r0) { step = 35; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile35", s.tmp_0);
    if (r0) { step = 36; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile36", s.tmp_0);
    if (r0) { step = 37; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile37", s.tmp_0);
    if (r0) { step = 38; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile38", s.tmp_0);
    if (r0) { step = 39; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile39", s.tmp_0);
    if (r0) { step = 40; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile40", s.tmp_0);
    if (r0) { step = 41; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile41", s.tmp_0);
    if (r0) { step = 42; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile42", s.tmp_0);
    if (r0) { step = 43; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile43", s.tmp_0);
    if (r0) { step = 44; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile44", s.tmp_0);
    if (r0) { step = 45; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile45", s.tmp_0);
    if (r0) { step = 46; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile46", s.tmp_0);
    if (r0) { step = 47; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile47", s.tmp_0);
    if (r0) { step = 48; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile48", s.tmp_0);
    if (r0) { step = 49; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile49", s.tmp_0);
    if (r0) { step = 50; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile50", s.tmp_0);
    if (r0) { step = 51; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile51", s.tmp_0);
    if (r0) { step = 52; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile52", s.tmp_0);
    if (r0) { step = 53; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile53", s.tmp_0);
    if (r0) { step = 54; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile54", s.tmp_0);
    if (r0) { step = 55; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile55", s.tmp_0);
    if (r0) { step = 56; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile56", s.tmp_0);
    if (r0) { step = 57; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile57", s.tmp_0);
    if (r0) { step = 58; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile58", s.tmp_0);
    if (r0) { step = 59; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile59", s.tmp_0);
    if (r0) { step = 60; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile60", s.tmp_0);
    if (r0) { step = 61; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile61", s.tmp_0);
    if (r0) { step = 62; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile62", s.tmp_0);
    if (r0) { step = 63; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile63", s.tmp_0);
    if (r0) { step = 64; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile64", s.tmp_0);
    if (r0) { step = 65; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile65", s.tmp_0);
    if (r0) { step = 66; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile66", s.tmp_0);
    if (r0) { step = 67; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile67", s.tmp_0);
    if (r0) { step = 68; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile68", s.tmp_0);
    if (r0) { step = 69; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile69", s.tmp_0);
    if (r0) { step = 70; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile70", s.tmp_0);
    if (r0) { step = 71; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile71", s.tmp_0);
    if (r0) { step = 72; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile72", s.tmp_0);
    if (r0) { step = 73; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile73", s.tmp_0);
    if (r0) { step = 74; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile74", s.tmp_0);
    if (r0) { step = 75; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile75", s.tmp_0);
    if (r0) { step = 76; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile76", s.tmp_0);
    if (r0) { step = 77; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile77", s.tmp_0);
    if (r0) { step = 78; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile78", s.tmp_0);
    if (r0) { step = 79; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile79", s.tmp_0);
    if (r0) { step = 80; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile80", s.tmp_0);
    if (r0) { step = 81; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile81", s.tmp_0);
    if (r0) { step = 82; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile82", s.tmp_0);
    if (r0) { step = 83; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile83", s.tmp_0);
    if (r0) { step = 84; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile84", s.tmp_0);
    if (r0) { step = 85; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile85", s.tmp_0);
    if (r0) { step = 86; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile86", s.tmp_0);
    if (r0) { step = 87; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile87", s.tmp_0);
    if (r0) { step = 88; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile88", s.tmp_0);
    if (r0) { step = 89; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile89", s.tmp_0);
    if (r0) { step = 90; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile90", s.tmp_0);
    if (r0) { step = 91; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile91", s.tmp_0);
    if (r0) { step = 92; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile92", s.tmp_0);
    if (r0) { step = 93; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile93", s.tmp_0);
    if (r0) { step = 94; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile94", s.tmp_0);
    if (r0) { step = 95; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile95", s.tmp_0);
    if (r0) { step = 96; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile96", s.tmp_0);
    if (r0) { step = 97; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile97", s.tmp_0);
    if (r0) { step = 98; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile98", s.tmp_0);
    if (r0) { step = 99; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile99", s.tmp_0);
    if (r0) { step = 100; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile100", s.tmp_0);
    if (r0) { step = 101; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile101", s.tmp_0);
    if (r0) { step = 102; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile102", s.tmp_0);
    if (r0) { step = 103; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile103", s.tmp_0);
    if (r0) { step = 104; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile104", s.tmp_0);
    if (r0) { step = 105; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile105", s.tmp_0);
    if (r0) { step = 106; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile106", s.tmp_0);
    if (r0) { step = 107; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile107", s.tmp_0);
    if (r0) { step = 108; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile108", s.tmp_0);
    if (r0) { step = 109; continue; }
    r0 = pxsim_pxtcore.switch_eq("tile109", s.tmp_0);
    if (r0) { step = 110; continue; }
    r0 = s.tmp_0;
    { step = 111; continue; }
  case 1:
    r0 = globals.transparency16___27301;
    { step = 112; continue; }
  case 2:
    r0 = globals.tile1___27302;
    { step = 112; continue; }
  case 3:
    r0 = globals.tile2___27303;
    { step = 112; continue; }
  case 4:
    r0 = globals.tile3___27304;
    { step = 112; continue; }
  case 5:
    r0 = globals.tile4___27305;
    { step = 112; continue; }
  case 6:
    r0 = globals.tile5___27306;
    { step = 112; continue; }
  case 7:
    r0 = globals.tile6___27307;
    { step = 112; continue; }
  case 8:
    r0 = globals.tile7___27308;
    { step = 112; continue; }
  case 9:
    r0 = globals.tile8___27309;
    { step = 112; continue; }
  case 10:
    r0 = globals.tile9___27310;
    { step = 112; continue; }
  case 11:
    r0 = globals.tile10___27311;
    { step = 112; continue; }
  case 12:
    r0 = globals.tile11___27312;
    { step = 112; continue; }
  case 13:
    r0 = globals.tile12___27313;
    { step = 112; continue; }
  case 14:
    r0 = globals.tile13___27314;
    { step = 112; continue; }
  case 15:
    r0 = globals.tile14___27315;
    { step = 112; continue; }
  case 16:
    r0 = globals.tile15___27316;
    { step = 112; continue; }
  case 17:
    r0 = globals.tile16___27317;
    { step = 112; continue; }
  case 18:
    r0 = globals.tile17___27318;
    { step = 112; continue; }
  case 19:
    r0 = globals.tile18___27319;
    { step = 112; continue; }
  case 20:
    r0 = globals.tile19___27320;
    { step = 112; continue; }
  case 21:
    r0 = globals.tile20___27321;
    { step = 112; continue; }
  case 22:
    r0 = globals.tile21___27322;
    { step = 112; continue; }
  case 23:
    r0 = globals.tile22___27323;
    { step = 112; continue; }
  case 24:
    r0 = globals.tile23___27324;
    { step = 112; continue; }
  case 25:
    r0 = globals.tile24___27325;
    { step = 112; continue; }
  case 26:
    r0 = globals.tile25___27326;
    { step = 112; continue; }
  case 27:
    r0 = globals.tile26___27327;
    { step = 112; continue; }
  case 28:
    r0 = globals.tile27___27328;
    { step = 112; continue; }
  case 29:
    r0 = globals.tile28___27329;
    { step = 112; continue; }
  case 30:
    r0 = globals.tile29___27330;
    { step = 112; continue; }
  case 31:
    r0 = globals.tile30___27331;
    { step = 112; continue; }
  case 32:
    r0 = globals.tile31___27332;
    { step = 112; continue; }
  case 33:
    r0 = globals.tile32___27333;
    { step = 112; continue; }
  case 34:
    r0 = globals.tile33___27334;
    { step = 112; continue; }
  case 35:
    r0 = globals.tile34___27335;
    { step = 112; continue; }
  case 36:
    r0 = globals.tile35___27336;
    { step = 112; continue; }
  case 37:
    r0 = globals.tile36___27337;
    { step = 112; continue; }
  case 38:
    r0 = globals.tile37___27338;
    { step = 112; continue; }
  case 39:
    r0 = globals.tile38___27339;
    { step = 112; continue; }
  case 40:
    r0 = globals.tile39___27340;
    { step = 112; continue; }
  case 41:
    r0 = globals.tile40___27341;
    { step = 112; continue; }
  case 42:
    r0 = globals.tile41___27342;
    { step = 112; continue; }
  case 43:
    r0 = globals.tile42___27343;
    { step = 112; continue; }
  case 44:
    r0 = globals.tile43___27344;
    { step = 112; continue; }
  case 45:
    r0 = globals.tile44___27345;
    { step = 112; continue; }
  case 46:
    r0 = globals.tile45___27346;
    { step = 112; continue; }
  case 47:
    r0 = globals.tile46___27347;
    { step = 112; continue; }
  case 48:
    r0 = globals.tile47___27348;
    { step = 112; continue; }
  case 49:
    r0 = globals.tile48___27349;
    { step = 112; continue; }
  case 50:
    r0 = globals.tile49___27350;
    { step = 112; continue; }
  case 51:
    r0 = globals.tile50___27351;
    { step = 112; continue; }
  case 52:
    r0 = globals.tile51___27352;
    { step = 112; continue; }
  case 53:
    r0 = globals.tile52___27353;
    { step = 112; continue; }
  case 54:
    r0 = globals.tile53___27354;
    { step = 112; continue; }
  case 55:
    r0 = globals.tile54___27355;
    { step = 112; continue; }
  case 56:
    r0 = globals.tile55___27356;
    { step = 112; continue; }
  case 57:
    r0 = globals.tile56___27357;
    { step = 112; continue; }
  case 58:
    r0 = globals.tile57___27358;
    { step = 112; continue; }
  case 59:
    r0 = globals.tile58___27359;
    { step = 112; continue; }
  case 60:
    r0 = globals.tile59___27360;
    { step = 112; continue; }
  case 61:
    r0 = globals.tile60___27361;
    { step = 112; continue; }
  case 62:
    r0 = globals.tile61___27362;
    { step = 112; continue; }
  case 63:
    r0 = globals.tile62___27363;
    { step = 112; continue; }
  case 64:
    r0 = globals.tile63___27364;
    { step = 112; continue; }
  case 65:
    r0 = globals.tile64___27365;
    { step = 112; continue; }
  case 66:
    r0 = globals.tile65___27366;
    { step = 112; continue; }
  case 67:
    r0 = globals.tile66___27367;
    { step = 112; continue; }
  case 68:
    r0 = globals.tile67___27368;
    { step = 112; continue; }
  case 69:
    r0 = globals.tile68___27369;
    { step = 112; continue; }
  case 70:
    r0 = globals.tile69___27370;
    { step = 112; continue; }
  case 71:
    r0 = globals.tile70___27371;
    { step = 112; continue; }
  case 72:
    r0 = globals.tile71___27372;
    { step = 112; continue; }
  case 73:
    r0 = globals.tile72___27373;
    { step = 112; continue; }
  case 74:
    r0 = globals.tile73___27374;
    { step = 112; continue; }
  case 75:
    r0 = globals.tile74___27375;
    { step = 112; continue; }
  case 76:
    r0 = globals.tile75___27376;
    { step = 112; continue; }
  case 77:
    r0 = globals.tile76___27377;
    { step = 112; continue; }
  case 78:
    r0 = globals.tile77___27378;
    { step = 112; continue; }
  case 79:
    r0 = globals.tile78___27379;
    { step = 112; continue; }
  case 80:
    r0 = globals.tile79___27380;
    { step = 112; continue; }
  case 81:
    r0 = globals.tile80___27381;
    { step = 112; continue; }
  case 82:
    r0 = globals.tile81___27382;
    { step = 112; continue; }
  case 83:
    r0 = globals.tile82___27383;
    { step = 112; continue; }
  case 84:
    r0 = globals.tile83___27384;
    { step = 112; continue; }
  case 85:
    r0 = globals.tile84___27385;
    { step = 112; continue; }
  case 86:
    r0 = globals.tile85___27386;
    { step = 112; continue; }
  case 87:
    r0 = globals.tile86___27387;
    { step = 112; continue; }
  case 88:
    r0 = globals.tile87___27388;
    { step = 112; continue; }
  case 89:
    r0 = globals.tile88___27389;
    { step = 112; continue; }
  case 90:
    r0 = globals.tile89___27390;
    { step = 112; continue; }
  case 91:
    r0 = globals.tile90___27391;
    { step = 112; continue; }
  case 92:
    r0 = globals.tile91___27392;
    { step = 112; continue; }
  case 93:
    r0 = globals.tile92___27393;
    { step = 112; continue; }
  case 94:
    r0 = globals.tile93___27394;
    { step = 112; continue; }
  case 95:
    r0 = globals.tile94___27395;
    { step = 112; continue; }
  case 96:
    r0 = globals.tile95___27396;
    { step = 112; continue; }
  case 97:
    r0 = globals.tile96___27397;
    { step = 112; continue; }
  case 98:
    r0 = globals.tile97___27398;
    { step = 112; continue; }
  case 99:
    r0 = globals.tile98___27399;
    { step = 112; continue; }
  case 100:
    r0 = globals.tile99___27400;
    { step = 112; continue; }
  case 101:
    r0 = globals.tile100___27401;
    { step = 112; continue; }
  case 102:
    r0 = globals.tile101___27402;
    { step = 112; continue; }
  case 103:
    r0 = globals.tile102___27403;
    { step = 112; continue; }
  case 104:
    r0 = globals.tile103___27404;
    { step = 112; continue; }
  case 105:
    r0 = globals.tile104___27405;
    { step = 112; continue; }
  case 106:
    r0 = globals.tile105___27406;
    { step = 112; continue; }
  case 107:
    r0 = globals.tile106___27407;
    { step = 112; continue; }
  case 108:
    r0 = globals.tile107___27408;
    { step = 112; continue; }
  case 109:
    r0 = globals.tile108___27409;
    { step = 112; continue; }
  case 110:
    r0 = globals.tile109___27410;
    { step = 112; continue; }
  case 111:
    r0 = null;
  case 112:
    return leave(s, r0)
  default: oops()
} } }
myTiles_inline__P30578.info = {"start":12850,"length":4632,"line":248,"column":37,"endLine":362,"endColumn":5,"fileName":"tilemap.g.ts","functionName":"inline","argumentNames":["name"]}

function myTiles_inline__P30578_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: myTiles_inline__P30578, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function inline__P43342(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = console_takeScreenshot__P58113_mk(s);
    s.callLocIdx = 84; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P43342.info = {"start":19932,"length":44,"line":126,"column":52,"endLine":128,"endColumn":1,"fileName":"test.ts","functionName":"inline","argumentNames":[]}

function inline__P43342_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P43342, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P43347(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = console_takeTilemapSnapshot__P58159_mk(s);
    s.callLocIdx = 86; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P43347.info = {"start":20031,"length":49,"line":130,"column":52,"endLine":132,"endColumn":1,"fileName":"test.ts","functionName":"inline","argumentNames":[]}

function inline__P43347_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P43347, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function console_takeTilemapSnapshot__P58159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___58164 = undefined;
    s.data___58175 = undefined;
    s.str___58178 = undefined;
    s.bufTiles___58179 = undefined;
    s.index___58203 = undefined;
    s.y___58205 = undefined;
    s.x___58211 = undefined;
    s.strLast___58252 = undefined;
    s.y___58253 = undefined;
    s.x___58260 = undefined;
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 52; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___58164 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tm___58164);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = tiles_TileMap_data__P25847_mk(s);
    s.tmp_4.arg0 = s.tm___58164;
    s.callLocIdx = 53; s.pc = 23; return s.tmp_4;
  case 23:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.tmp_6 = console_log__P23751_mk(s);
    s.tmp_6.arg0 = "[e] [console.takeTilemapSnapshot()] No Tilemap loaded currently, load a tilemap first before call me.";
    s.callLocIdx = 54; s.pc = 24; return s.tmp_6;
  case 24:
    r0 = s.retval;
    { step = 21; continue; }
  case 3:
  case 4:
    s.tmp_0 = tiles_TileMap_data__P25847_mk(s);
    s.tmp_0.arg0 = s.tm___58164;
    s.callLocIdx = 55; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.data___58175 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.str___58178 = (r0);
    s.tmp_0 = r0 = s.str___58178;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_3 = tiles_TileMapData_width__P25826_mk(s);
    s.tmp_3.arg0 = s.data___58175;
    s.callLocIdx = 56; s.pc = 26; return s.tmp_3;
  case 26:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = tiles_TileMapData_height__P25827_mk(s);
    s.tmp_5.arg0 = s.data___58175;
    s.callLocIdx = 57; s.pc = 27; return s.tmp_5;
  case 27:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_2 * s.tmp_4);
    s.tmp_1 = r0;
    r0 = (8 + s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_0);
    s.bufTiles___58179 = (r0);
    s.tmp_0 = r0 = s.bufTiles___58179;
    s.tmp_2 = tiles_TileMapData_width__P25826_mk(s);
    s.tmp_2.arg0 = s.data___58175;
    s.callLocIdx = 58; s.pc = 28; return s.tmp_2;
  case 28:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, 0, s.tmp_1);
    s.tmp_0 = r0 = s.bufTiles___58179;
    s.tmp_2 = tiles_TileMapData_height__P25827_mk(s);
    s.tmp_2.arg0 = s.data___58175;
    s.callLocIdx = 59; s.pc = 29; return s.tmp_2;
  case 29:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, 2, s.tmp_1);
    s.index___58203 = (4);
    s.y___58205 = (0);
  case 5:
    s.tmp_1 = r0 = s.y___58205;
    s.tmp_3 = tiles_TileMapData_height__P25827_mk(s);
    s.tmp_3.arg0 = s.data___58175;
    s.callLocIdx = 60; s.pc = 30; return s.tmp_3;
  case 30:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.x___58211 = (0);
  case 6:
    s.tmp_1 = r0 = s.x___58211;
    s.tmp_3 = tiles_TileMapData_width__P25826_mk(s);
    s.tmp_3.arg0 = s.data___58175;
    s.callLocIdx = 61; s.pc = 31; return s.tmp_3;
  case 31:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_4 = r0 = s.index___58203;
    r0 = (s.tmp_4 + 1);
    s.index___58203 = (r0);
    s.tmp_5 = r0 = s.bufTiles___58179;
    s.tmp_7 = tiles_TileMapData_getTile__P25830_mk(s);
    s.tmp_7.arg0 = s.data___58175;
    s.tmp_7.arg1 = s.x___58211;
    s.tmp_7.arg2 = s.y___58205;
    s.callLocIdx = 62; s.pc = 32; return s.tmp_7;
  case 32:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim.BufferMethods.setUint8(s.tmp_5, s.tmp_4, s.tmp_6);
    r0 = (s.x___58211 + 1);
    s.x___58211 = (r0);
    { step = 6; continue; }
  case 7:
    r0 = (s.y___58205 + 1);
    s.y___58205 = (r0);
    { step = 5; continue; }
  case 8:
    s.tmp_0 = r0 = s.str___58178;
    r0 = pxsim_pxtrt_ldlocRef(s.str___58178);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 33);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 33:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.toHex(s.bufTiles___58179);
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 34);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 34:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat("let myTilemap = tiles.createTilemap(hex`", s.tmp_8);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 35);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 35:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, "`,");
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 36);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 36:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_4);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_0 = console_log__P23751_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.str___58178);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 38);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 38:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, " img`");
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 63; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    r0 = pxsim_pxtrt.mklocRef();
    s.strLast___58252 = (r0);
    s.tmp_0 = r0 = s.strLast___58252;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.y___58253 = (0);
  case 9:
    s.tmp_1 = r0 = s.y___58253;
    s.tmp_3 = tiles_TileMapData_height__P25827_mk(s);
    s.tmp_3.arg0 = s.data___58175;
    s.callLocIdx = 64; s.pc = 39; return s.tmp_3;
  case 39:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    r0 = pxsim_pxtrt_stlocRef(s.str___58178, "    ");
    s.x___58260 = (0);
  case 10:
    s.tmp_1 = r0 = s.x___58260;
    s.tmp_3 = tiles_TileMapData_width__P25826_mk(s);
    s.tmp_3.arg0 = s.data___58175;
    s.callLocIdx = 65; s.pc = 40; return s.tmp_3;
  case 40:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.tmp_5 = tiles_TileMapData_isWall__P25835_mk(s);
    s.tmp_5.arg0 = s.data___58175;
    s.tmp_5.arg1 = s.x___58260;
    s.tmp_5.arg2 = s.y___58253;
    s.callLocIdx = 66; s.pc = 41; return s.tmp_5;
  case 41:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 11; continue; }
    r0 = 2;
    { step = 12; continue; }
  case 11:
    r0 = ".";
  case 12:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    s.tmp_7 = r0 = s.str___58178;
    r0 = pxsim_pxtrt_ldlocRef(s.str___58178);
    s.tmp_10 = r0;
    if ((s.tmp_10) && (s.tmp_10).vtable) {
    setupResume(s, 42);
    pxsim_String__stringConv(s.tmp_10);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_10) + ""; }
  case 42:
    r0 = s.retval;
    s.tmp_9 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 43);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 43:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_11);
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_7, s.tmp_8);
    r0 = (s.x___58260 + 1);
    s.x___58260 = (r0);
    { step = 10; continue; }
  case 13:
    r0 = pxsim_pxtrt_ldlocRef(s.str___58178);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.strLast___58252);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_3 = r0 = s.str___58178;
    r0 = pxsim_pxtrt_ldlocRef(s.str___58178);
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 44);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 44:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(" ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_3, s.tmp_4);
  case 14:
  case 15:
    s.tmp_0 = console_log__P23751_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.str___58178);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 67; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    s.tmp_0 = r0 = s.strLast___58252;
    r0 = pxsim_pxtrt_ldlocRef(s.str___58178);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = (s.y___58253 + 1);
    s.y___58253 = (r0);
    { step = 9; continue; }
  case 16:
    r0 = pxsim_pxtrt_stlocRef(s.str___58178, "`");
    s.tmp_0 = r0 = s.str___58178;
    r0 = pxsim_pxtrt_ldlocRef(s.str___58178);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 46);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 46:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ", [");
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtcore_mkAction(2, console_takeTilemapSnapshot_inline__P58304);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.str___58178);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.strLast___58252);
    s.tmp_1 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_2 = tiles_TileMapData_getTileset__P25832_mk(s);
    s.tmp_2.arg0 = s.data___58175;
    s.callLocIdx = 68; s.pc = 48; return s.tmp_2;
  case 48:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 71; s.pc = 47; return s.tmp_1;
  case 47:
    r0 = s.retval;
    s.tmp_0 = console_log__P23751_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.str___58178);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 50);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 50:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, "],");
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 72; s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
    s.tmp_1 = tiles_TileMapData_scale__P25828_mk(s);
    s.tmp_1.arg0 = s.data___58175;
    s.callLocIdx = 73; s.pc = 51; return s.tmp_1;
  case 51:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 17; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 19; continue; }
    r0 = s.tmp_0;
    { step = 20; continue; }
  case 17:
    s.tmp_2 = console_log__P23751_mk(s);
    s.tmp_2.arg0 = "TileScale.Eight";
    s.callLocIdx = 74; s.pc = 52; return s.tmp_2;
  case 52:
    r0 = s.retval;
    { step = 20; continue; }
  case 18:
    s.tmp_0 = console_log__P23751_mk(s);
    s.tmp_0.arg0 = "TileScale.Sixteen";
    s.callLocIdx = 75; s.pc = 53; return s.tmp_0;
  case 53:
    r0 = s.retval;
    { step = 20; continue; }
  case 19:
    s.tmp_0 = console_log__P23751_mk(s);
    s.tmp_0.arg0 = "TileScale.ThirtyTwo";
    s.callLocIdx = 76; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
  case 20:
    s.tmp_0 = console_log__P23751_mk(s);
    s.tmp_0.arg0 = ");";
    s.callLocIdx = 77; s.pc = 55; return s.tmp_0;
  case 55:
    r0 = s.retval;
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_takeTilemapSnapshot__P58159.info = {"start":1992,"length":2561,"line":49,"column":4,"endLine":121,"endColumn":5,"fileName":"screenshot.ts","functionName":"takeTilemapSnapshot","argumentNames":[]}

function console_takeTilemapSnapshot__P58159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_takeTilemapSnapshot__P58159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tm___58164: undefined,
  data___58175: undefined,
  str___58178: undefined,
  bufTiles___58179: undefined,
  index___58203: undefined,
  y___58205: undefined,
  x___58211: undefined,
  strLast___58252: undefined,
  y___58253: undefined,
  x___58260: undefined,
} }





function console_takeTilemapSnapshot_inline__P58304(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.y___58322 = undefined;
    s.x___58329 = undefined;
    s.c___58335 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = r0 = s.caps[0];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "myTiles.transparency16,");
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    { step = 8; continue; }
  case 1:
    s.tmp_0 = console_log__P23751_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, " img`");
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 69; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.y___58322 = (0);
  case 2:
    s.tmp_1 = r0 = s.y___58322;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_pxtrt_stlocRef(s.caps[0], "    ");
    s.x___58329 = (0);
  case 3:
    s.tmp_1 = r0 = s.x___58329;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.x___58329, s.y___58322);
    s.c___58335 = (r0);
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String_.charAt(globals.hex___58111, s.c___58335);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_4);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = (s.x___58329 + 1);
    s.x___58329 = (r0);
    { step = 3; continue; }
  case 4:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_3 = r0 = s.caps[0];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 14);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 14:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(" ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_3, s.tmp_4);
  case 5:
  case 6:
    s.tmp_0 = console_log__P23751_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 70; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = (s.y___58322 + 1);
    s.y___58322 = (r0);
    { step = 2; continue; }
  case 7:
    r0 = pxsim_pxtrt_stlocRef(s.caps[0], "`,");
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_takeTilemapSnapshot_inline__P58304.info = {"start":3468,"length":737,"line":90,"column":34,"endLine":109,"endColumn":9,"fileName":"screenshot.ts","functionName":"inline","argumentNames":["tileImage","index"]}

function console_takeTilemapSnapshot_inline__P58304_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_takeTilemapSnapshot_inline__P58304, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  y___58322: undefined,
  x___58329: undefined,
  c___58335: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_scale__P25828(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C25824_VT)) failedCast(r0);
    s.lastBrkId = 1698;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1698]) return breakpoint(s, 1, 1698, r0);
  case 1:
    r0 = s.arg0.fields["_scale"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_scale__P25828.info = {"start":6528,"length":66,"line":222,"column":8,"endLine":224,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this"]}
tiles_TileMapData_scale__P25828.isGetter = true;

function tiles_TileMapData_scale__P25828_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_scale__P25828, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMapData_getTileset__P25832(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C25824_VT)) failedCast(r0);
    s.lastBrkId = 1704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1704]) return breakpoint(s, 1, 1704, r0);
  case 1:
    r0 = s.arg0.fields["tileset"];
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTileset__P25832.info = {"start":7251,"length":57,"line":247,"column":8,"endLine":249,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileset","argumentNames":["this"]}

function tiles_TileMapData_getTileset__P25832_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTileset__P25832, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function helpers_arrayForEach__P23480(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___31581 = undefined;
    s.i___31584 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 74;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[74]) return breakpoint(s, 3, 74, r0);
  case 3:
    r0 = pxsim_Array__length(s.arg0);
    s.len___31581 = (r0);
    s.lastBrkId = 75;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[75]) return breakpoint(s, 4, 75, r0);
  case 4:
    s.i___31584 = (0);
    s.lastBrkId = 76;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[76]) return breakpoint(s, 5, 76, r0);
  case 5:
  case 1:
    s.lastBrkId = 77;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[77]) return breakpoint(s, 6, 77, r0);
  case 6:
    r0 = (s.i___31584 < s.len___31581);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 78;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[78]) return breakpoint(s, 7, 78, r0);
  case 7:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___31584);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___31584;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 5; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 79;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[79]) return breakpoint(s, 9, 79, r0);
  case 9:
    r0 = (s.i___31584 + 1);
    s.i___31584 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayForEach__P23480.info = {"start":7439,"length":250,"line":254,"column":4,"endLine":259,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayForEach","argumentNames":["arr","callbackfn"]}

function helpers_arrayForEach__P23480_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayForEach__P23480, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___31581: undefined,
  i___31584: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_isWall__P25835(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C25824_VT)) failedCast(r0);
    s.lastBrkId = 1716;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1716]) return breakpoint(s, 1, 1716, r0);
  case 1:
    r0 = s.arg0.fields["layers"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_1, s.arg1, s.arg2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 === 2);
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_isWall__P25835.info = {"start":8182,"length":107,"line":274,"column":8,"endLine":276,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isWall","argumentNames":["this","col","row"]}

function tiles_TileMapData_isWall__P25835_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_isWall__P25835, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_getTile__P25830(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C25824_VT)) failedCast(r0);
    s.lastBrkId = 1701;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1701]) return breakpoint(s, 4, 1701, r0);
  case 4:
    s.tmp_1 = tiles_TileMapData_isOutsideMap__P25836_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.callLocIdx = 798; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1702]) return breakpoint(s, 6, 1702, r0);
  case 6:
    r0 = 0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1703]) return breakpoint(s, 7, 1703, r0);
  case 7:
    r0 = s.arg0.fields["data"];
    s.tmp_2 = r0;
    r0 = (s.arg1 | 0);
    s.tmp_5 = r0;
    r0 = (4 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.arg2 | 0);
    s.tmp_7 = r0;
    s.tmp_9 = tiles_TileMapData_width__P25826_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.callLocIdx = 799; s.pc = 8; return s.tmp_9;
  case 8:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 * s.tmp_8);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = pxsim.BufferMethods.getUint8(s.tmp_2, s.tmp_3);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTile__P25830.info = {"start":6716,"length":200,"line":231,"column":8,"endLine":235,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTile","argumentNames":["this","col","row"]}

function tiles_TileMapData_getTile__P25830_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTile__P25830, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_isOutsideMap__P25836(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C25824_VT)) failedCast(r0);
    s.lastBrkId = 1717;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1717]) return breakpoint(s, 7, 1717, r0);
  case 7:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = tiles_TileMapData_width__P25826_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 801; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_4;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 < 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_5;
    { step = 6; continue; }
  case 5:
    s.tmp_6 = r0 = s.arg2;
    s.tmp_8 = tiles_TileMapData_height__P25827_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 802; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 >= s.tmp_7);
  case 6:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_isOutsideMap__P25836.info = {"start":8299,"length":132,"line":278,"column":8,"endLine":280,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isOutsideMap","argumentNames":["this","col","row"]}

function tiles_TileMapData_isOutsideMap__P25836_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_isOutsideMap__P25836, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_height__P25827(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C25824_VT)) failedCast(r0);
    s.lastBrkId = 1697;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1697]) return breakpoint(s, 1, 1697, r0);
  case 1:
    r0 = s.arg0.fields["_height"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_height__P25827.info = {"start":6453,"length":65,"line":218,"column":8,"endLine":220,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"height","argumentNames":["this"]}
tiles_TileMapData_height__P25827.isGetter = true;

function tiles_TileMapData_height__P25827_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_height__P25827, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMapData_width__P25826(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C25824_VT)) failedCast(r0);
    s.lastBrkId = 1696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1696]) return breakpoint(s, 1, 1696, r0);
  case 1:
    r0 = s.arg0.fields["_width"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_width__P25826.info = {"start":6380,"length":63,"line":214,"column":8,"endLine":216,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"width","argumentNames":["this"]}
tiles_TileMapData_width__P25826.isGetter = true;

function tiles_TileMapData_width__P25826_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_width__P25826, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function console_log__P23751(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[346]) return breakpoint(s, 1, 346, r0);
  case 1:
    s.tmp_0 = console_add__P23747_mk(s);
    s.tmp_0.arg0 = 1;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 36; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_log__P23751.info = {"start":1450,"length":86,"line":58,"column":4,"endLine":60,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"log","argumentNames":["value"]}

function console_log__P23751_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_log__P23751, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function console_add__P23747(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.text___31662 = undefined;
    s.i___31671 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[337]) return breakpoint(s, 6, 337, r0);
  case 6:
    r0 = (s.arg0 < globals.minPriority___23746);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[338]) return breakpoint(s, 7, 338, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[339]) return breakpoint(s, 8, 339, r0);
  case 8:
    s.tmp_1 = console_inspect__P23753_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 20;
    s.callLocIdx = 34; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.text___31662 = (r0);
    s.lastBrkId = 340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[340]) return breakpoint(s, 10, 340, r0);
  case 10:
    if ((s.text___31662) && (s.text___31662).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.text___31662);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.text___31662) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "\n");
    s.text___31662 = (r0);
    s.lastBrkId = 341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[341]) return breakpoint(s, 12, 341, r0);
  case 12:
    s.i___31671 = (0);
    s.lastBrkId = 342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[342]) return breakpoint(s, 13, 342, r0);
  case 13:
  case 3:
    s.lastBrkId = 343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[343]) return breakpoint(s, 14, 343, r0);
  case 14:
    s.tmp_1 = r0 = s.i___31671;
    r0 = pxsim_Array__length(globals.listeners___27477);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[344]) return breakpoint(s, 15, 344, r0);
  case 15:
    s.tmp_3 = lambda_3_mk(s);
    r0 = pxsim_Array__getAt(globals.listeners___27477, s.i___31671);
    s.tmp_3.argL = r0;
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.text___31662;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 35; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[345]) return breakpoint(s, 17, 345, r0);
  case 17:
    r0 = (s.i___31671 + 1);
    s.i___31671 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_add__P23747.info = {"start":632,"length":317,"line":28,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"add","argumentNames":["priority","message"]}

function console_add__P23747_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_add__P23747, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  text___31662: undefined,
  i___31671: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function listeners_inline__P27476(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.__log(s.arg0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
listeners_inline__P27476.info = {"start":534,"length":85,"line":25,"column":8,"endLine":25,"endColumn":93,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["priority","text"]}

function listeners_inline__P27476_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: listeners_inline__P27476, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function console_inspect__P23753(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.asArr___31709 = undefined;
    s.asString___31727 = undefined;
    s.keys___31739 = undefined;
    s.snipped___31743 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[347]) return breakpoint(s, 18, 347, r0);
  case 18:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "string");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[348]) return breakpoint(s, 19, 348, r0);
  case 19:
    r0 = s.arg0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 1:
    s.lastBrkId = 349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[349]) return breakpoint(s, 20, 349, r0);
  case 20:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == "number");
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[350]) return breakpoint(s, 21, 350, r0);
  case 21:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    { step = 17; continue; }
    { step = 15; continue; }
  case 2:
    s.lastBrkId = 351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[351]) return breakpoint(s, 23, 351, r0);
  case 23:
    r0 = pxsim_Array_.isArray(s.arg0);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[352]) return breakpoint(s, 24, 352, r0);
  case 24:
    s.asArr___31709 = (s.arg0);
    s.lastBrkId = 353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[353]) return breakpoint(s, 25, 353, r0);
  case 25:
    r0 = pxsim_Array__length(s.asArr___31709);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[354]) return breakpoint(s, 26, 354, r0);
  case 26:
    s.tmp_2 = helpers_arrayJoin__P23474_mk(s);
    s.tmp_2.arg0 = s.asArr___31709;
    s.tmp_2.arg1 = ",";
    s.callLocIdx = 37; s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    { step = 17; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[355]) return breakpoint(s, 28, 355, r0);
  case 28:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    s.tmp_7 = helpers_arrayJoin__P23474_mk(s);
    s.tmp_8 = helpers_arraySlice__P23486_mk(s);
    s.tmp_8.arg0 = s.asArr___31709;
    s.tmp_8.arg1 = 0;
    s.tmp_8.arg2 = s.arg1;
    s.callLocIdx = 38; s.pc = 30; return s.tmp_8;
  case 30:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = ",";
    s.callLocIdx = 39; s.pc = 29; return s.tmp_7;
  case 29:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 31);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 31:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "...");
    { step = 17; continue; }
  case 4:
    { step = 14; continue; }
  case 5:
    s.lastBrkId = 356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[356]) return breakpoint(s, 32, 356, r0);
  case 32:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 33);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 33:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.asString___31727 = (r0);
    s.lastBrkId = 357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[357]) return breakpoint(s, 34, 357, r0);
  case 34:
    r0 = (s.asString___31727 != "[object Object]");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = (s.asString___31727 != "[Object]");
  case 7:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[358]) return breakpoint(s, 35, 358, r0);
  case 35:
    r0 = s.asString___31727;
    { step = 17; continue; }
  case 8:
  case 9:
    s.lastBrkId = 359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[359]) return breakpoint(s, 36, 359, r0);
  case 36:
    r0 = pxsim_pxtrt.keysOf(s.arg0);
    s.keys___31739 = (r0);
    s.lastBrkId = 360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[360]) return breakpoint(s, 37, 360, r0);
  case 37:
    r0 = pxsim_Array__length(s.keys___31739);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > s.arg1);
    s.snipped___31743 = (r0);
    s.lastBrkId = 361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[361]) return breakpoint(s, 38, 361, r0);
  case 38:
    r0 = pxsim_numops_toBoolDecr(s.snipped___31743);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[362]) return breakpoint(s, 39, 362, r0);
  case 39:
    s.tmp_0 = helpers_arraySlice__P23486_mk(s);
    s.tmp_0.arg0 = s.keys___31739;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 40; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
    s.keys___31739 = (r0);
  case 10:
  case 11:
    s.lastBrkId = 363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[363]) return breakpoint(s, 41, 363, r0);
  case 41:
    r0 = pxsim_pxtcore_mkAction(1, console_inspect_inline__P31760);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_numops_toBoolDecr(s.snipped___31743);
    if (!r0) { step = 12; continue; }
    r0 = "\n    ...";
    { step = 13; continue; }
  case 12:
    r0 = pxsim_String_.mkEmpty();
  case 13:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_7 = helpers_arrayReduce__P23483_mk(s);
    s.tmp_7.arg0 = s.keys___31739;
    s.tmp_7.arg1 = s.tmp_0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7.arg2 = r0;
    s.callLocIdx = 41; s.pc = 42; return s.tmp_7;
  case 42:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 43);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 43:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 44);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 44:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 45);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 45:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("{", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "\n}");
    { step = 17; continue; }
  case 14:
  case 15:
  case 16:
    r0 = undefined;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
console_inspect__P23753.info = {"start":2271,"length":1190,"line":81,"column":4,"endLine":114,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"inspect","argumentNames":["obj","maxElements"]}

function console_inspect__P23753_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect__P23753, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  asArr___31709: undefined,
  asString___31727: undefined,
  keys___31739: undefined,
  snipped___31743: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function console_inspect_inline__P31760(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("\n    ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ": ");
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.caps[0], s.arg1);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_6);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
console_inspect_inline__P31760.info = {"start":3293,"length":61,"line":108,"column":20,"endLine":108,"endColumn":81,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["prev","currKey"]}

function console_inspect_inline__P31760_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect_inline__P31760, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arraySlice__P23486(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___31808 = undefined;
    s.len___31810 = undefined;
    s.i___31844 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[105]) return breakpoint(s, 16, 105, r0);
  case 16:
    r0 = pxsim_Array__mk();
    s.res___31808 = (r0);
    s.lastBrkId = 106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[106]) return breakpoint(s, 17, 106, r0);
  case 17:
    r0 = pxsim_Array__length(s.arg0);
    s.len___31810 = (r0);
    s.lastBrkId = 107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[107]) return breakpoint(s, 18, 107, r0);
  case 18:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[108]) return breakpoint(s, 19, 108, r0);
  case 19:
    s.arg1 = (0);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[109]) return breakpoint(s, 20, 109, r0);
  case 20:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[110]) return breakpoint(s, 21, 110, r0);
  case 21:
    s.tmp_1 = Math_max__P23501_mk(s);
    r0 = (s.len___31810 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 8; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.arg1 = (r0);
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[111]) return breakpoint(s, 23, 111, r0);
  case 23:
    r0 = (s.arg1 > s.len___31810);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[112]) return breakpoint(s, 24, 112, r0);
  case 24:
    r0 = s.res___31808;
    { step = 15; continue; }
  case 5:
  case 6:
    s.lastBrkId = 113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[113]) return breakpoint(s, 25, 113, r0);
  case 25:
    r0 = (s.arg2 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[114]) return breakpoint(s, 26, 114, r0);
  case 26:
    s.arg2 = (s.len___31810);
    { step = 10; continue; }
  case 7:
    s.lastBrkId = 115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[115]) return breakpoint(s, 27, 115, r0);
  case 27:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[116]) return breakpoint(s, 28, 116, r0);
  case 28:
    r0 = (s.len___31810 + s.arg2);
    s.arg2 = (r0);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[117]) return breakpoint(s, 29, 117, r0);
  case 29:
    r0 = (s.arg2 > s.len___31810);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[118]) return breakpoint(s, 30, 118, r0);
  case 30:
    s.arg2 = (s.len___31810);
  case 11:
  case 12:
    s.lastBrkId = 119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[119]) return breakpoint(s, 31, 119, r0);
  case 31:
    s.i___31844 = (s.arg1);
    s.lastBrkId = 120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[120]) return breakpoint(s, 32, 120, r0);
  case 32:
  case 13:
    s.lastBrkId = 121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[121]) return breakpoint(s, 33, 121, r0);
  case 33:
    r0 = (s.i___31844 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[122]) return breakpoint(s, 34, 122, r0);
  case 34:
    s.tmp_1 = r0 = s.res___31808;
    r0 = pxsim_Array__getAt(s.arg0, s.i___31844);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[123]) return breakpoint(s, 35, 123, r0);
  case 35:
    r0 = (s.i___31844 + 1);
    s.i___31844 = (r0);
    { step = 13; continue; }
  case 14:
    s.lastBrkId = 124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[124]) return breakpoint(s, 36, 124, r0);
  case 36:
    r0 = s.res___31808;
  case 15:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySlice__P23486.info = {"start":9027,"length":690,"line":303,"column":4,"endLine":328,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySlice","argumentNames":["arr","start","end"]}

function helpers_arraySlice__P23486_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySlice__P23486, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  res___31808: undefined,
  len___31810: undefined,
  i___31844: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_max__P23501(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[203]) return breakpoint(s, 4, 203, r0);
  case 4:
    r0 = (s.arg0 >= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[204]) return breakpoint(s, 5, 204, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[205]) return breakpoint(s, 6, 205, r0);
  case 6:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_max__P23501.info = {"start":16564,"length":105,"line":556,"column":4,"endLine":559,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"max","argumentNames":["a","b"]}

function Math_max__P23501_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_max__P23501, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayReduce__P23483(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___31787 = undefined;
    s.i___31790 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 90;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[90]) return breakpoint(s, 3, 90, r0);
  case 3:
    r0 = pxsim_Array__length(s.arg0);
    s.len___31787 = (r0);
    s.lastBrkId = 91;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[91]) return breakpoint(s, 4, 91, r0);
  case 4:
    s.i___31790 = (0);
    s.lastBrkId = 92;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[92]) return breakpoint(s, 5, 92, r0);
  case 5:
  case 1:
    s.lastBrkId = 93;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[93]) return breakpoint(s, 6, 93, r0);
  case 6:
    r0 = (s.i___31790 < s.len___31787);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 94;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[94]) return breakpoint(s, 7, 94, r0);
  case 7:
    s.tmp_1 = lambda_4_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.arg2;
    r0 = pxsim_Array__getAt(s.arg0, s.i___31790);
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = s.i___31790;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 7; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.arg2 = (r0);
    s.lastBrkId = 95;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[95]) return breakpoint(s, 9, 95, r0);
  case 9:
    r0 = (s.i___31790 + 1);
    s.i___31790 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 96;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[96]) return breakpoint(s, 10, 96, r0);
  case 10:
    r0 = s.arg2;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayReduce__P23483.info = {"start":8316,"length":317,"line":280,"column":4,"endLine":286,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayReduce","argumentNames":["arr","callbackfn","initialValue"]}

function helpers_arrayReduce__P23483_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayReduce__P23483, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___31787: undefined,
  i___31790: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arrayJoin__P23474(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___31869 = undefined;
    s.len___31870 = undefined;
    s.i___31873 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 9;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[9]) return breakpoint(s, 15, 9, r0);
  case 15:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 === null);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 10;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[10]) return breakpoint(s, 16, 10, r0);
  case 16:
    s.arg1 = (",");
  case 3:
  case 4:
    s.lastBrkId = 11;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[11]) return breakpoint(s, 17, 11, r0);
  case 17:
    r0 = pxsim_String_.mkEmpty();
    s.r___31869 = (r0);
    s.lastBrkId = 12;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[12]) return breakpoint(s, 18, 12, r0);
  case 18:
    r0 = pxsim_Array__length(s.arg0);
    s.len___31870 = (r0);
    s.lastBrkId = 13;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[13]) return breakpoint(s, 19, 13, r0);
  case 19:
    s.i___31873 = (0);
    s.lastBrkId = 14;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[14]) return breakpoint(s, 20, 14, r0);
  case 20:
  case 5:
    s.lastBrkId = 15;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[15]) return breakpoint(s, 21, 15, r0);
  case 21:
    r0 = (s.i___31873 < s.len___31870);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 16;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[16]) return breakpoint(s, 22, 16, r0);
  case 22:
    r0 = (s.i___31873 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_1;
    { step = 7; continue; }
  case 6:
    r0 = s.arg1;
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 17;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[17]) return breakpoint(s, 23, 17, r0);
  case 23:
    if ((s.r___31869) && (s.r___31869).vtable) {
    setupResume(s, 24);
    pxsim_String__stringConv(s.r___31869);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___31869) + ""; }
  case 24:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 25);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 25:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.r___31869 = (r0);
  case 8:
  case 9:
    s.lastBrkId = 18;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[18]) return breakpoint(s, 26, 18, r0);
  case 26:
    r0 = pxsim_Array__getAt(s.arg0, s.i___31873);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___31873);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === null);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_String_.mkEmpty();
    { step = 13; continue; }
  case 12:
    r0 = pxsim_Array__getAt(s.arg0, s.i___31873);
  case 13:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    if ((s.r___31869) && (s.r___31869).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.r___31869);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___31869) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 28);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 28:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    s.r___31869 = (r0);
    s.lastBrkId = 19;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[19]) return breakpoint(s, 29, 19, r0);
  case 29:
    r0 = (s.i___31873 + 1);
    s.i___31873 = (r0);
    { step = 5; continue; }
  case 14:
    s.lastBrkId = 20;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[20]) return breakpoint(s, 30, 20, r0);
  case 30:
    r0 = s.r___31869;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayJoin__P23474.info = {"start":4133,"length":432,"line":157,"column":4,"endLine":170,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayJoin","argumentNames":["arr","sep"]}

function helpers_arrayJoin__P23474_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayJoin__P23474, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  r___31869: undefined,
  len___31870: undefined,
  i___31873: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_data__P25847(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1725]) return breakpoint(s, 1, 1725, r0);
  case 1:
    r0 = s.arg0.fields["_map"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_data__P25847.info = {"start":9388,"length":65,"line":321,"column":8,"endLine":323,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"data","argumentNames":["this"]}
tiles_TileMap_data__P25847.isGetter = true;

function tiles_TileMap_data__P25847_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_data__P25847, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function console_takeScreenshot__P58113(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.strLast___58115 = undefined;
    s.y___58116 = undefined;
    s.str___58122 = undefined;
    s.x___58123 = undefined;
    s.tmp_0 = console_log__P23751_mk(s);
    s.tmp_0.arg0 = "img`";
    s.callLocIdx = 49; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = pxsim_String_.mkEmpty();
    s.strLast___58115 = (r0);
    s.y___58116 = (0);
  case 1:
    s.tmp_1 = r0 = s.y___58116;
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.str___58122 = ("    ");
    s.x___58123 = (0);
  case 2:
    s.tmp_1 = r0 = s.x___58123;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    if ((s.str___58122) && (s.str___58122).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.str___58122);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.str___58122) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_6 = r0 = globals.hex___58111;
    r0 = pxsim_ImageMethods.getPixel(globals.screen___25204, s.x___58123, s.y___58116);
    s.tmp_7 = r0;
    r0 = pxsim_String_.charAt(s.tmp_6, s.tmp_7);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.str___58122 = (r0);
    r0 = (s.x___58123 + 1);
    s.x___58123 = (r0);
    { step = 2; continue; }
  case 3:
    r0 = (s.str___58122 == s.strLast___58115);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    if ((s.str___58122) && (s.str___58122).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.str___58122);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.str___58122) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(" ", s.tmp_1);
    s.str___58122 = (r0);
  case 4:
  case 5:
    s.tmp_0 = console_log__P23751_mk(s);
    s.tmp_0.arg0 = s.str___58122;
    s.callLocIdx = 50; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.strLast___58115 = (s.str___58122);
    r0 = (s.y___58116 + 1);
    s.y___58116 = (r0);
    { step = 1; continue; }
  case 6:
    s.tmp_0 = console_log__P23751_mk(s);
    s.tmp_0.arg0 = "`";
    s.callLocIdx = 51; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_takeScreenshot__P58113.info = {"start":796,"length":505,"line":21,"column":4,"endLine":36,"endColumn":5,"fileName":"screenshot.ts","functionName":"takeScreenshot","argumentNames":[]}

function console_takeScreenshot__P58113_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_takeScreenshot__P58113, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  strLast___58115: undefined,
  y___58116: undefined,
  str___58122: undefined,
  x___58123: undefined,
} }





function controller_Button_onEvent__P25362(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.eventHandler___30732 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[862]) return breakpoint(s, 1, 862, r0);
  case 1:
    s.tmp_0 = controller_Button_getOrCreateHandlerForEvent__P27654_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 196; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.eventHandler___30732 = (r0);
    s.lastBrkId = 863;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[863]) return breakpoint(s, 3, 863, r0);
  case 3:
    r0 = (s.eventHandler___30732).fields["callback"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_onEvent__P25362.info = {"start":3784,"length":188,"line":123,"column":8,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"onEvent","argumentNames":["this","event","handler"]}

function controller_Button_onEvent__P25362_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_onEvent__P25362, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  eventHandler___30732: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_Button_getOrCreateHandlerForEvent__P27654(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.handlerState___30753 = undefined;
    s.eventHandler___30762 = undefined;
    s.unnamed368___U2 = undefined;
    s.unnamed369___U3 = undefined;
    s.newHandler___30778 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 900;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[900]) return breakpoint(s, 10, 900, r0);
  case 10:
    s.tmp_3 = controller_Button_handlerState__P27649_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 206; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[901]) return breakpoint(s, 12, 901, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(controller_ButtonEventHandlerState__C25351_VT);
    s.tmp_4 = r0;
    s.tmp_5 = controller_ButtonEventHandlerState_constructor__P25352_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    r0 = s.arg0.fields["id"];
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 208; s.pc = 13; return s.tmp_5;
  case 13:
    r0 = s.retval;
    s.tmp_7 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 207; s.pc = 14; return s.tmp_7;
  case 14:
    r0 = s.retval;
    r0 = r0.fields["buttonEventHandlers"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[902]) return breakpoint(s, 15, 902, r0);
  case 15:
    s.tmp_0 = controller_Button_handlerState__P27649_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 209; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.handlerState___30753 = (r0);
    s.lastBrkId = 903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[903]) return breakpoint(s, 17, 903, r0);
  case 17:
    r0 = s.handlerState___30753.fields["user"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[904]) return breakpoint(s, 18, 904, r0);
  case 18:
    s.tmp_3 = r0 = s.handlerState___30753;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["user"] = (s.tmp_4);
  case 3:
  case 4:
    s.lastBrkId = 905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[905]) return breakpoint(s, 19, 905, r0);
  case 19:
    s.eventHandler___30762 = (undefined);
    r0 = s.handlerState___30753.fields["user"];
    s.unnamed368___U2 = (r0);
    s.unnamed369___U3 = (0);
    s.lastBrkId = 906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[906]) return breakpoint(s, 20, 906, r0);
  case 20:
  case 5:
    s.tmp_0 = r0 = s.unnamed369___U3;
    r0 = pxsim_Array__length(s.unnamed368___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = pxsim_Array__getAt(s.unnamed368___U2, s.unnamed369___U3);
    s.eventHandler___30762 = (r0);
    s.lastBrkId = 907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[907]) return breakpoint(s, 21, 907, r0);
  case 21:
    r0 = s.eventHandler___30762.fields["event"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[908]) return breakpoint(s, 22, 908, r0);
  case 22:
    r0 = s.eventHandler___30762;
    { step = 9; continue; }
  case 6:
  case 7:
    r0 = (s.unnamed369___U3 + 1);
    s.unnamed369___U3 = (r0);
    { step = 5; continue; }
  case 8:
    s.unnamed368___U2 = (undefined);
    s.lastBrkId = 909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[909]) return breakpoint(s, 23, 909, r0);
  case 23:
    r0 = pxsim_pxtcore_mkAction(2, controller_Button_getOrCreateHandlerForEvent_inline__P30775);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 1, s.arg1);
    s.tmp_5 = control_onEvent__P23762_mk(s);
    s.tmp_5.arg0 = s.arg1;
    r0 = s.arg0.fields["id"];
    s.tmp_5.arg1 = r0;
    s.tmp_5.arg2 = s.tmp_4;
    s.tmp_5.arg3 = 16;
    s.callLocIdx = 211; s.pc = 24; return s.tmp_5;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[910]) return breakpoint(s, 25, 910, r0);
  case 25:
    r0 = pxsim_pxtcore_mkClassInstance(controller_ButtonHandler__C25349_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_ButtonHandler_constructor__P25350_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 212; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.newHandler___30778 = (s.tmp_0);
    s.lastBrkId = 911;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[911]) return breakpoint(s, 27, 911, r0);
  case 27:
    r0 = s.handlerState___30753.fields["user"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.newHandler___30778);
    s.lastBrkId = 912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[912]) return breakpoint(s, 28, 912, r0);
  case 28:
    r0 = s.newHandler___30778;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
controller_Button_getOrCreateHandlerForEvent__P27654.info = {"start":8550,"length":829,"line":250,"column":8,"endLine":270,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"getOrCreateHandlerForEvent","argumentNames":["this","event"]}

function controller_Button_getOrCreateHandlerForEvent__P27654_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_getOrCreateHandlerForEvent__P27654, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  handlerState___30753: undefined,
  eventHandler___30762: undefined,
  unnamed368___U2: undefined,
  unnamed369___U3: undefined,
  newHandler___30778: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_getOrCreateHandlerForEvent_inline__P30775(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_runButtonEvents__P27653_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.caps[1];
    s.callLocIdx = 210; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_getOrCreateHandlerForEvent_inline__P30775.info = {"start":9186,"length":33,"line":265,"column":44,"endLine":265,"endColumn":77,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_getOrCreateHandlerForEvent_inline__P30775_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_getOrCreateHandlerForEvent_inline__P30775, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_runButtonEvents__P27653(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.handlerState___30792 = undefined;
    s.userHandler___30796 = undefined;
    s.eventHandler___30807 = undefined;
    s.unnamed366___U3 = undefined;
    s.unnamed367___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 889;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[889]) return breakpoint(s, 14, 889, r0);
  case 14:
    s.tmp_0 = controller_Button_handlerState__P27649_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 202; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.handlerState___30792 = (r0);
    s.lastBrkId = 890;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[890]) return breakpoint(s, 16, 890, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.handlerState___30792);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 891;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[891]) return breakpoint(s, 17, 891, r0);
  case 17:
    { step = 13; continue; }
  case 1:
  case 2:
    s.lastBrkId = 892;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[892]) return breakpoint(s, 18, 892, r0);
  case 18:
    s.tmp_2 = controller_Button_getOrCreateHandlerForEvent__P27654_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 203; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    s.userHandler___30796 = (r0);
    s.lastBrkId = 893;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[893]) return breakpoint(s, 20, 893, r0);
  case 20:
    r0 = s.userHandler___30796.fields["callback"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 894;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[894]) return breakpoint(s, 21, 894, r0);
  case 21:
    s.tmp_1 = if_callback_1_mk(s);
    s.tmp_1.arg0 = s.userHandler___30796;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "callback"), 1);
      s.callLocIdx = 204; s.pc = 22; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["callback"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["callback"], 1); s.callLocIdx = 204; s.pc = 22; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 204; s.pc = 22; return s.tmp_1;; }
     else { s.callLocIdx = 204; s.pc = 22; return s.tmp_1; }
    }
  case 22:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 895;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[895]) return breakpoint(s, 23, 895, r0);
  case 23:
    r0 = s.handlerState___30792.fields["system"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 896;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[896]) return breakpoint(s, 24, 896, r0);
  case 24:
    s.eventHandler___30807 = (undefined);
    r0 = s.handlerState___30792.fields["system"];
    s.unnamed366___U3 = (r0);
    s.unnamed367___U4 = (0);
    s.lastBrkId = 897;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[897]) return breakpoint(s, 25, 897, r0);
  case 25:
  case 5:
    s.tmp_0 = r0 = s.unnamed367___U4;
    r0 = pxsim_Array__length(s.unnamed366___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed366___U3, s.unnamed367___U4);
    s.eventHandler___30807 = (r0);
    s.lastBrkId = 898;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[898]) return breakpoint(s, 26, 898, r0);
  case 26:
    r0 = s.eventHandler___30807.fields["event"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_2;
    { step = 7; continue; }
  case 6:
    r0 = s.eventHandler___30807.fields["callback"];
  case 7:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 899;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[899]) return breakpoint(s, 27, 899, r0);
  case 27:
    s.tmp_5 = if_callback_1_mk(s);
    s.tmp_5.arg0 = s.eventHandler___30807;
    if (!s.tmp_5.arg0.vtable.iface) {
      setupLambda(s.tmp_5, pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "callback"), 1);
      s.callLocIdx = 205; s.pc = 28; return s.tmp_5;
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["callback"];
      if (s.tmp_5.fn == null) { setupLambda(s.tmp_5, s.tmp_5.arg0.fields["callback"], 1); s.callLocIdx = 205; s.pc = 28; return s.tmp_5; }
      else if (s.tmp_5.fn.isGetter) { s.tmp_5.stage2Call = true; s.callLocIdx = 205; s.pc = 28; return s.tmp_5;; }
     else { s.callLocIdx = 205; s.pc = 28; return s.tmp_5; }
    }
  case 28:
    r0 = s.retval;
  case 8:
  case 9:
    r0 = (s.unnamed367___U4 + 1);
    s.unnamed367___U4 = (r0);
    { step = 5; continue; }
  case 10:
    s.unnamed366___U3 = (undefined);
  case 11:
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_runButtonEvents__P27653.info = {"start":8005,"length":535,"line":236,"column":8,"endLine":248,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"runButtonEvents","argumentNames":["this","event"]}

function controller_Button_runButtonEvents__P27653_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_runButtonEvents__P27653, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  handlerState___30792: undefined,
  userHandler___30796: undefined,
  eventHandler___30807: undefined,
  unnamed366___U3: undefined,
  unnamed367___U4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_handlerState__P27649(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___30907 = undefined;
    s.unnamed364___U1 = undefined;
    s.unnamed365___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 837;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[837]) return breakpoint(s, 6, 837, r0);
  case 6:
    s.state___30907 = (undefined);
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 192; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = r0.fields["buttonEventHandlers"];
    s.unnamed364___U1 = (r0);
    s.unnamed365___U2 = (0);
    s.lastBrkId = 838;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[838]) return breakpoint(s, 8, 838, r0);
  case 8:
  case 1:
    s.tmp_0 = r0 = s.unnamed365___U2;
    r0 = pxsim_Array__length(s.unnamed364___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed364___U1, s.unnamed365___U2);
    s.state___30907 = (r0);
    s.lastBrkId = 839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[839]) return breakpoint(s, 9, 839, r0);
  case 9:
    r0 = s.state___30907.fields["id"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 === s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[840]) return breakpoint(s, 10, 840, r0);
  case 10:
    r0 = s.state___30907;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.unnamed365___U2 + 1);
    s.unnamed365___U2 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed364___U1 = (undefined);
    s.lastBrkId = 841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[841]) return breakpoint(s, 11, 841, r0);
  case 11:
    r0 = undefined;
  case 5:
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Button_handlerState__P27649.info = {"start":1644,"length":240,"line":66,"column":8,"endLine":71,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"handlerState","argumentNames":["this"]}
controller_Button_handlerState__P27649.isGetter = true;

function controller_Button_handlerState__P27649_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_handlerState__P27649, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  state___30907: undefined,
  unnamed364___U1: undefined,
  unnamed365___U2: undefined,
  arg0: undefined,
} }





function controller_ButtonEventHandlerState_constructor__P25352(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_ButtonEventHandlerState__C25351_VT)) failedCast(r0);
    r0 = (s.arg0).fields["id"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_ButtonEventHandlerState_constructor__P25352.info = {"start":1122,"length":33,"line":48,"column":8,"endLine":48,"endColumn":41,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","id"]}

function controller_ButtonEventHandlerState_constructor__P25352_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_ButtonEventHandlerState_constructor__P25352, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function controller_ButtonHandler_constructor__P25350(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_ButtonHandler__C25349_VT)) failedCast(r0);
    r0 = (s.arg0).fields["event"] = (s.arg1);
    r0 = (s.arg0).fields["callback"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_ButtonHandler_constructor__P25350.info = {"start":997,"length":66,"line":44,"column":8,"endLine":44,"endColumn":74,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","event","callback"]}

function controller_ButtonHandler_constructor__P25350_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_ButtonHandler_constructor__P25350, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_onEvent__P23762(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___30823 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[367]) return breakpoint(s, 3, 367, r0);
  case 3:
    s.tmp_0 = control_eventContext__P23779_mk(s);
    s.callLocIdx = 42; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.ctx___30823 = (r0);
    s.lastBrkId = 368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[368]) return breakpoint(s, 5, 368, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.ctx___30823);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[369]) return breakpoint(s, 6, 369, r0);
  case 6:
    r0 = pxsim.control.internalOnEvent(s.arg0, s.arg1, s.arg2, s.arg3);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[370]) return breakpoint(s, 7, 370, r0);
  case 7:
    s.tmp_0 = control_EventContext_registerHandler__P23776_mk(s);
    s.tmp_0.arg0 = s.ctx___30823;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.callLocIdx = 43; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_onEvent__P23762.info = {"start":336,"length":325,"line":9,"column":4,"endLine":15,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"onEvent","argumentNames":["src","value","handler","flags"]}

function control_onEvent__P23762_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_onEvent__P23762, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___30823: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function control_eventContext__P23779(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[455]) return breakpoint(s, 3, 455, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___27499);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = globals.eventContexts___27499;
    r0 = pxsim_Array__length(globals.eventContexts___27499);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
control_eventContext__P23779.info = {"start":6907,"length":136,"line":209,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"eventContext","argumentNames":[]}

function control_eventContext__P23779_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_eventContext__P23779, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function control_EventContext_registerHandler__P23776(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___30846 = undefined;
    s.unnamed360___U1 = undefined;
    s.unnamed361___U2 = undefined;
    s.hn___30869 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C23766_VT)) failedCast(r0);
    s.lastBrkId = 446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[446]) return breakpoint(s, 8, 446, r0);
  case 8:
    s.h___30846 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed360___U1 = (r0);
    s.unnamed361___U2 = (0);
    s.lastBrkId = 447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[447]) return breakpoint(s, 9, 447, r0);
  case 9:
  case 1:
    s.tmp_0 = r0 = s.unnamed361___U2;
    r0 = pxsim_Array__length(s.unnamed360___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed360___U1, s.unnamed361___U2);
    s.h___30846 = (r0);
    s.lastBrkId = 448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[448]) return breakpoint(s, 10, 448, r0);
  case 10:
    r0 = s.h___30846.fields["src"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = s.h___30846.fields["value"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == s.arg2);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[449]) return breakpoint(s, 11, 449, r0);
  case 11:
    r0 = (s.h___30846).fields["flags"] = (s.arg4);
    s.lastBrkId = 450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[450]) return breakpoint(s, 12, 450, r0);
  case 12:
    r0 = (s.h___30846).fields["handler"] = (s.arg3);
    s.lastBrkId = 451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[451]) return breakpoint(s, 13, 451, r0);
  case 13:
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.unnamed361___U2 + 1);
    s.unnamed361___U2 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed360___U1 = (undefined);
    s.lastBrkId = 452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[452]) return breakpoint(s, 14, 452, r0);
  case 14:
    r0 = pxsim_pxtcore_mkClassInstance(control_EventHandler__C27491_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventHandler_constructor__P27494_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg3;
    s.tmp_1.arg4 = s.arg4;
    s.callLocIdx = 55; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.hn___30869 = (s.tmp_0);
    s.lastBrkId = 453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[453]) return breakpoint(s, 16, 453, r0);
  case 16:
    r0 = s.arg0.fields["handlers"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.hn___30869);
    s.lastBrkId = 454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[454]) return breakpoint(s, 17, 454, r0);
  case 17:
    s.tmp_0 = control_EventHandler_register__P27492_mk(s);
    s.tmp_0.arg0 = s.hn___30869;
    s.callLocIdx = 56; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerHandler__P23776.info = {"start":5573,"length":525,"line":169,"column":8,"endLine":182,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerHandler","argumentNames":["this","src","value","handler","flags"]}

function control_EventContext_registerHandler__P23776_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerHandler__P23776, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  h___30846: undefined,
  unnamed360___U1: undefined,
  unnamed361___U2: undefined,
  hn___30869: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_constructor__P27494(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C27491_VT)) failedCast(r0);
    r0 = (s.arg0).fields["src"] = (s.arg1);
    r0 = (s.arg0).fields["value"] = (s.arg2);
    r0 = (s.arg0).fields["handler"] = (s.arg3);
    r0 = (s.arg0).fields["flags"] = (s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_constructor__P27494.info = {"start":786,"length":165,"line":23,"column":8,"endLine":28,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this","src","value","handler","flags"]}

function control_EventHandler_constructor__P27494_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_constructor__P27494, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_register__P27492(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C27491_VT)) failedCast(r0);
    s.lastBrkId = 371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[371]) return breakpoint(s, 1, 371, r0);
  case 1:
    r0 = pxsim_pxtcore_mkAction(1, control_EventHandler_register_inline__P30890);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["src"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_1, s.tmp_2, s.tmp_0, s.tmp_3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register__P27492.info = {"start":961,"length":165,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventHandler_register__P27492_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register__P27492, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function control_EventHandler_register_inline__P30890(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[372]) return breakpoint(s, 3, 372, r0);
  case 3:
    r0 = s.caps[0].fields["handler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[373]) return breakpoint(s, 4, 373, r0);
  case 4:
    s.tmp_1 = if_handler_1_mk(s);
    s.tmp_1.arg0 = s.caps[0];
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "handler"), 1);
      s.callLocIdx = 44; s.pc = 5; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["handler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["handler"], 1); s.callLocIdx = 44; s.pc = 5; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 44; s.pc = 5; return s.tmp_1;; }
     else { s.callLocIdx = 44; s.pc = 5; return s.tmp_1; }
    }
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register_inline__P30890.info = {"start":1032,"length":71,"line":31,"column":58,"endLine":33,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventHandler_register_inline__P30890_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register_inline__P30890, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_setBackgroundImage__P25988(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___30919 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1914]) return breakpoint(s, 1, 1914, r0);
  case 1:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 922; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___30919 = (r0);
    s.lastBrkId = 1915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1915]) return breakpoint(s, 3, 1915, r0);
  case 3:
    s.tmp_0 = scene_Background_image__P25783_mk(s);
    r0 = s.scene___30919.fields["background"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 923; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_setBackgroundImage__P25988.info = {"start":1962,"length":135,"line":78,"column":4,"endLine":81,"endColumn":5,"fileName":"pxt_modules/game/scenes.ts","functionName":"setBackgroundImage","argumentNames":["img"]}

function scene_setBackgroundImage__P25988_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_setBackgroundImage__P25988, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  scene___30919: undefined,
  arg0: undefined,
} }





function scene_Background_image__P25783(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C25776_VT)) failedCast(r0);
    s.lastBrkId = 1608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1608]) return breakpoint(s, 1, 1608, r0);
  case 1:
    r0 = (s.arg0).fields["_image"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_image__P25783.info = {"start":1003,"length":68,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"image","argumentNames":["this","image"]}

function scene_Background_image__P25783_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_image__P25783, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Background_image__P25782(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C25776_VT)) failedCast(r0);
    s.lastBrkId = 1605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1605]) return breakpoint(s, 3, 1605, r0);
  case 3:
    r0 = s.arg0.fields["_image"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1606]) return breakpoint(s, 4, 1606, r0);
  case 4:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_6 = r0;
    r0 = pxsim.image.create(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_image"] = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 1607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1607]) return breakpoint(s, 5, 1607, r0);
  case 5:
    r0 = s.arg0.fields["_image"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Background_image__P25782.info = {"start":811,"length":174,"line":33,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"image","argumentNames":["this"]}
scene_Background_image__P25782.isGetter = true;

function scene_Background_image__P25782_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_image__P25782, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function tiles_createTilemap__P25869(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1795;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1795]) return breakpoint(s, 1, 1795, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(tiles_TileMapData__C25824_VT);
    s.tmp_0 = r0;
    s.tmp_1 = tiles_TileMapData_constructor__P25825_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.tmp_1.arg4 = s.arg3;
    s.callLocIdx = 865; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_createTilemap__P25869.info = {"start":18644,"length":170,"line":586,"column":4,"endLine":588,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"createTilemap","argumentNames":["data","layer","tiles","scale"]}

function tiles_createTilemap__P25869_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_createTilemap__P25869, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function tiles_TileMapData_constructor__P25825(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C25824_VT)) failedCast(r0);
    s.lastBrkId = 1690;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1690]) return breakpoint(s, 1, 1690, r0);
  case 1:
    r0 = (s.arg0).fields["data"] = (s.arg1);
    s.lastBrkId = 1691;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1691]) return breakpoint(s, 2, 1691, r0);
  case 2:
    r0 = (s.arg0).fields["layers"] = (s.arg2);
    s.lastBrkId = 1692;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1692]) return breakpoint(s, 3, 1692, r0);
  case 3:
    r0 = (s.arg0).fields["tileset"] = (s.arg3);
    s.lastBrkId = 1693;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1693]) return breakpoint(s, 4, 1693, r0);
  case 4:
    s.tmp_0 = tiles_TileMapData_scale__P25829_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg4;
    s.callLocIdx = 797; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 1694;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1694]) return breakpoint(s, 6, 1694, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 4, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_width"] = (s.tmp_1);
    s.lastBrkId = 1695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1695]) return breakpoint(s, 7, 1695, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 4, 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_height"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_constructor__P25825.info = {"start":6012,"length":358,"line":204,"column":8,"endLine":212,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","data","layers","tileset","scale"]}

function tiles_TileMapData_constructor__P25825_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_constructor__P25825, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function tiles_TileMapData_scale__P25829(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C25824_VT)) failedCast(r0);
    s.lastBrkId = 1699;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1699]) return breakpoint(s, 1, 1699, r0);
  case 1:
    r0 = (s.arg0).fields["_scale"] = (s.arg1);
    s.lastBrkId = 1700;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1700]) return breakpoint(s, 2, 1700, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cachedTileView"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_scale__P25829.info = {"start":6604,"length":102,"line":226,"column":8,"endLine":229,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this","s"]}

function tiles_TileMapData_scale__P25829_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_scale__P25829, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_stringTrim__P23494(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.start___31487 = undefined;
    s.end___31488 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[184]) return breakpoint(s, 9, 184, r0);
  case 9:
    s.start___31487 = (0);
    s.lastBrkId = 185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[185]) return breakpoint(s, 10, 185, r0);
  case 10:
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.end___31488 = (r0);
    s.lastBrkId = 186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[186]) return breakpoint(s, 11, 186, r0);
  case 11:
  case 1:
    s.lastBrkId = 187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[187]) return breakpoint(s, 12, 187, r0);
  case 12:
    r0 = (s.start___31487 <= s.end___31488);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    s.tmp_1 = helpers_isWhitespace__P23495_mk(s);
    r0 = pxsim_String_.charCodeAt(s.arg0, s.start___31487);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 14; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[188]) return breakpoint(s, 14, 188, r0);
  case 14:
    r0 = (s.start___31487 + 1);
    s.start___31487 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[189]) return breakpoint(s, 15, 189, r0);
  case 15:
  case 5:
    s.lastBrkId = 190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[190]) return breakpoint(s, 16, 190, r0);
  case 16:
    r0 = (s.end___31488 > s.start___31487);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    s.tmp_1 = helpers_isWhitespace__P23495_mk(s);
    r0 = pxsim_String_.charCodeAt(s.arg0, s.end___31488);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 15; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[191]) return breakpoint(s, 18, 191, r0);
  case 18:
    r0 = (s.end___31488 - 1);
    s.end___31488 = (r0);
    { step = 5; continue; }
  case 8:
    s.lastBrkId = 192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[192]) return breakpoint(s, 19, 192, r0);
  case 19:
    s.tmp_0 = helpers_stringSlice__P23490_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.start___31487;
    r0 = (s.end___31488 + 1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 16; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
helpers_stringTrim__P23494.info = {"start":14539,"length":319,"line":491,"column":4,"endLine":501,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringTrim","argumentNames":["s"]}

function helpers_stringTrim__P23494_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringTrim__P23494, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  start___31487: undefined,
  end___31488: undefined,
  arg0: undefined,
} }





function helpers_isWhitespace__P23495(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[193]) return breakpoint(s, 13, 193, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(32, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(160, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(65279, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(8232, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(8233, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[194]) return breakpoint(s, 14, 194, r0);
  case 14:
    r0 = true;
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[195]) return breakpoint(s, 15, 195, r0);
  case 15:
    r0 = false;
    { step = 12; continue; }
    r0 = undefined;
  case 12:
    return leave(s, r0)
  default: oops()
} } }
helpers_isWhitespace__P23495.info = {"start":14864,"length":674,"line":503,"column":4,"endLine":520,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"isWhitespace","argumentNames":["c"]}

function helpers_isWhitespace__P23495_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_isWhitespace__P23495, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers_stringSlice__P23490(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___31527 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[125]) return breakpoint(s, 9, 125, r0);
  case 9:
    r0 = pxsim_String_.length(s.arg0);
    s.len___31527 = (r0);
    s.lastBrkId = 126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[126]) return breakpoint(s, 10, 126, r0);
  case 10:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[127]) return breakpoint(s, 11, 127, r0);
  case 11:
    s.tmp_1 = Math_max__P23501_mk(s);
    r0 = (s.len___31527 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 9; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[128]) return breakpoint(s, 13, 128, r0);
  case 13:
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[129]) return breakpoint(s, 14, 129, r0);
  case 14:
    s.arg2 = (s.len___31527);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[130]) return breakpoint(s, 15, 130, r0);
  case 15:
    r0 = (s.arg2 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[131]) return breakpoint(s, 16, 131, r0);
  case 16:
    s.arg2 = (0);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[132]) return breakpoint(s, 17, 132, r0);
  case 17:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[133]) return breakpoint(s, 18, 133, r0);
  case 18:
    r0 = (s.len___31527 + s.arg2);
    s.arg2 = (r0);
  case 7:
  case 8:
    s.lastBrkId = 134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[134]) return breakpoint(s, 19, 134, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = (s.arg2 - s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_String_.substr(s.tmp_0, s.tmp_1, s.tmp_2);
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSlice__P23490.info = {"start":11496,"length":440,"line":384,"column":4,"endLine":402,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSlice","argumentNames":["s","start","end"]}

function helpers_stringSlice__P23490_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSlice__P23490, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___31527: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers__registerFactory__P26387(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2490]) return breakpoint(s, 3, 2490, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.factories___28256);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2491]) return breakpoint(s, 4, 2491, r0);
  case 4:
    r0 = pxsim_Array__mk();
    globals.factories___28256 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2492]) return breakpoint(s, 5, 2492, r0);
  case 5:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "kind", s.arg0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "factory", s.arg1);
    r0 = pxsim_Array__push(globals.factories___28256, s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers__registerFactory__P26387.info = {"start":1776,"length":201,"line":52,"column":4,"endLine":58,"endColumn":5,"fileName":"pxt_modules/game/assetTemplates.ts","functionName":"_registerFactory","argumentNames":["kind","factory"]}

function helpers__registerFactory__P26387_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers__registerFactory__P26387, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_eventContext__P26064(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1925;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1925]) return breakpoint(s, 1, 1925, r0);
  case 1:
    s.tmp_0 = game_init__P27847_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 925; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1926;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1926]) return breakpoint(s, 3, 1926, r0);
  case 3:
    r0 = globals._scene___27839.fields["eventContext"];
    return leave(s, r0)
  default: oops()
} } }
game_eventContext__P26064.info = {"start":1084,"length":112,"line":40,"column":4,"endLine":43,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"eventContext","argumentNames":[]}

function game_eventContext__P26064_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_eventContext__P26064, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_init__P27847(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1927;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1927]) return breakpoint(s, 13, 1927, r0);
  case 13:
    r0 = pxsim_numops_toBoolDecr(globals._scene___27839);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1928;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1928]) return breakpoint(s, 14, 1928, r0);
  case 14:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Scene__C25947_VT);
    s.tmp_3 = r0;
    s.tmp_4 = scene_Scene_constructor__P25969_mk(s);
    s.tmp_4.arg0 = s.tmp_3;
    s.tmp_5 = control_pushEventContext__P23780_mk(s);
    s.callLocIdx = 926; s.pc = 16; return s.tmp_5;
  case 16:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.tmp_4.arg2 = globals._scene___27839;
    s.callLocIdx = 927; s.pc = 15; return s.tmp_4;
  case 15:
    r0 = s.retval;
    globals._scene___27839 = (s.tmp_3);
  case 3:
  case 4:
    s.lastBrkId = 1929;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1929]) return breakpoint(s, 17, 1929, r0);
  case 17:
    s.tmp_0 = scene_Scene_init__P25970_mk(s);
    s.tmp_0.arg0 = globals._scene___27839;
    s.callLocIdx = 928; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 1930;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1930]) return breakpoint(s, 19, 1930, r0);
  case 19:
    r0 = pxsim_numops_toBoolDecr(globals.winEffect___26059);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1931;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1931]) return breakpoint(s, 20, 1931, r0);
  case 20:
    globals.winEffect___26059 = (globals.confetti___26331);
  case 5:
  case 6:
    s.lastBrkId = 1932;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1932]) return breakpoint(s, 21, 1932, r0);
  case 21:
    r0 = pxsim_numops_toBoolDecr(globals.loseEffect___26060);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1933;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1933]) return breakpoint(s, 22, 1933, r0);
  case 22:
    globals.loseEffect___26060 = (globals.melt___26352);
  case 7:
  case 8:
    s.lastBrkId = 1934;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1934]) return breakpoint(s, 23, 1934, r0);
  case 23:
    r0 = pxsim_numops_toBoolDecr(globals.winSound___27838);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1935;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1935]) return breakpoint(s, 24, 1935, r0);
  case 24:
    globals.winSound___27838 = (globals.powerUp___25007);
  case 9:
  case 10:
    s.lastBrkId = 1936;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1936]) return breakpoint(s, 25, 1936, r0);
  case 25:
    r0 = pxsim_numops_toBoolDecr(globals.loseSound___27836);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1937;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1937]) return breakpoint(s, 26, 1937, r0);
  case 26:
    globals.loseSound___27836 = (globals.wawawawaa___25004);
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_init__P27847.info = {"start":1202,"length":452,"line":45,"column":4,"endLine":60,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"init","argumentNames":["forceNewScene"]}

function game_init__P27847_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_init__P27847, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function melt_inline__P31951(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.rounds___31954 = undefined;
    s.j___31962 = undefined;
    s.x___31967 = undefined;
    s.y___31973 = undefined;
    s.c___31979 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 5);
    s.rounds___31954 = (r0);
    s.j___31962 = (0);
  case 1:
    r0 = (s.j___31962 < s.rounds___31954);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_FastRandom_randomRange__P26120_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 44; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.x___31967 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P26120_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 3);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 45; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.y___31973 = (r0);
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.x___31967, s.y___31973);
    s.c___31979 = (r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.x___31967;
    r0 = (s.y___31973 + 1);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_2, s.c___31979);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.x___31967;
    r0 = (s.y___31973 + 2);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_2, s.c___31979);
    r0 = (s.j___31962 + 1);
    s.j___31962 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
melt_inline__P31951.info = {"start":2652,"length":386,"line":72,"column":45,"endLine":81,"endColumn":5,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["input","r"]}

function melt_inline__P31951_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: melt_inline__P31951, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  rounds___31954: undefined,
  j___31962: undefined,
  x___31967: undefined,
  y___31973: undefined,
  c___31979: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_FastRandom_randomRange__P26120(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C26116_VT)) failedCast(r0);
    s.lastBrkId = 1986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1986]) return breakpoint(s, 3, 1986, r0);
  case 3:
    r0 = (s.arg2 > s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = Math_FastRandom_next__P26119_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 950; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.arg2 - s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 % s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = (s.arg1 + s.tmp_5);
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_randomRange__P26120.info = {"start":2079,"length":131,"line":62,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"randomRange","argumentNames":["this","min","max"]}

function Math_FastRandom_randomRange__P26120_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_randomRange__P26120, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_FastRandom_next__P26119(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C26116_VT)) failedCast(r0);
    s.lastBrkId = 1985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1985]) return breakpoint(s, 1, 1985, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["lfsr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lfsr"];
    s.tmp_7 = r0;
    r0 = (s.tmp_7 & 1);
    s.tmp_6 = r0;
    r0 = (0 - s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 46080);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 ^ s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lfsr"] = (s.tmp_1);
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_next__P26119.info = {"start":1713,"length":107,"line":53,"column":8,"endLine":55,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"next","argumentNames":["this"]}

function Math_FastRandom_next__P26119_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_next__P26119, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function effects_ImageEffect_constructor__P26347(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C26346_VT)) failedCast(r0);
    s.lastBrkId = 2459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2459]) return breakpoint(s, 1, 2459, r0);
  case 1:
    r0 = (s.arg0).fields["effect"] = (s.arg2);
    s.lastBrkId = 2460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2460]) return breakpoint(s, 2, 2460, r0);
  case 2:
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C26116_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P26118_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1243; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.arg0).fields["fastRandom"] = (s.tmp_0);
    s.lastBrkId = 2461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2461]) return breakpoint(s, 4, 2461, r0);
  case 4:
    r0 = (s.arg0).fields["preferredDelay"] = (s.arg1);
    s.lastBrkId = 2462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2462]) return breakpoint(s, 5, 2462, r0);
  case 5:
    r0 = (s.arg0).fields["times"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_constructor__P26347.info = {"start":410,"length":290,"line":10,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["this","defaultRate","effectFactory"]}

function effects_ImageEffect_constructor__P26347_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_constructor__P26347, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function confetti_inline__P32059(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.factory___32062 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(particles_ConfettiFactory__C26275_VT);
    s.tmp_0 = r0;
    s.tmp_2 = if_width_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "width");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["width"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["width"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 32; s.pc = 3; return s.tmp_2; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_width_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "width");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["width"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["width"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 33; s.pc = 4; return s.tmp_3; }
    }
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = 16;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = particles_ConfettiFactory_constructor__P26276_mk(s);
    s.tmp_5.arg0 = s.tmp_0;
    s.tmp_5.arg1 = s.tmp_4;
    s.tmp_5.arg2 = 16;
    s.callLocIdx = 34; s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.factory___32062 = (s.tmp_0);
    s.tmp_0 = particles_SprayFactory_setSpeed__P26252_mk(s);
    s.tmp_0.arg0 = s.factory___32062;
    s.tmp_0.arg1 = 30;
    s.callLocIdx = 35; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(particles_ParticleSource__C26208_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_ParticleSource_constructor__P26213_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.factory___32062;
    s.callLocIdx = 36; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
confetti_inline__P32059.info = {"start":7534,"length":284,"line":191,"column":59,"endLine":195,"endColumn":5,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["anchor","particlesPerSecond"]}

function confetti_inline__P32059_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: confetti_inline__P32059, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  factory___32062: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_constructor__P26213(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___32083 = undefined;
    s.removedSource___32092 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2224]) return breakpoint(s, 5, 2224, r0);
  case 5:
    s.tmp_0 = sprites_BaseSprite_constructor__P25266_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 1119; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2225]) return breakpoint(s, 7, 2225, r0);
  case 7:
    s.tmp_0 = particles_init__P28182_mk(s);
    s.callLocIdx = 1120; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2226]) return breakpoint(s, 9, 2226, r0);
  case 9:
    s.tmp_0 = particles_particleSources__P28188_mk(s);
    s.callLocIdx = 1121; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.sources___32083 = (r0);
    s.lastBrkId = 2227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2227]) return breakpoint(s, 11, 2227, r0);
  case 11:
    r0 = pxsim_Array__length(s.sources___32083);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= globals.MAX_SOURCES___28174);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2228]) return breakpoint(s, 12, 2228, r0);
  case 12:
    s.tmp_2 = particles_sortSources__P28185_mk(s);
    s.tmp_2.arg0 = s.sources___32083;
    s.callLocIdx = 1122; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 2229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2229]) return breakpoint(s, 14, 2229, r0);
  case 14:
    s.tmp_0 = helpers_arrayShift__P23473_mk(s);
    s.tmp_0.arg0 = s.sources___32083;
    s.callLocIdx = 1123; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.removedSource___32092 = (r0);
    s.lastBrkId = 2230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2230]) return breakpoint(s, 16, 2230, r0);
  case 16:
    s.tmp_0 = particles_ParticleSource_clear__P26223_mk(s);
    s.tmp_0.arg0 = s.removedSource___32092;
    s.callLocIdx = 1124; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 2231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2231]) return breakpoint(s, 18, 2231, r0);
  case 18:
    s.tmp_0 = particles_ParticleSource_destroy__P26222_mk(s);
    s.tmp_0.arg0 = s.removedSource___32092;
    s.callLocIdx = 1125; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 2232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2232]) return breakpoint(s, 20, 2232, r0);
  case 20:
    r0 = (s.arg0).fields["pFlags"] = (0);
    s.lastBrkId = 2233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2233]) return breakpoint(s, 21, 2233, r0);
  case 21:
    s.tmp_0 = particles_ParticleSource_setRate__P26225_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 1126; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 2234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2234]) return breakpoint(s, 23, 2234, r0);
  case 23:
    s.tmp_0 = particles_ParticleSource_setAcceleration__P26217_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    s.callLocIdx = 1127; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 2235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2235]) return breakpoint(s, 25, 2235, r0);
  case 25:
    s.tmp_0 = particles_ParticleSource_setAnchor__P26224_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1128; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.lastBrkId = 2236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2236]) return breakpoint(s, 27, 2236, r0);
  case 27:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 2237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2237]) return breakpoint(s, 28, 2237, r0);
  case 28:
    r0 = (s.arg0).fields["_dt"] = (0);
    s.lastBrkId = 2238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2238]) return breakpoint(s, 29, 2238, r0);
  case 29:
    r0 = (s.arg0).fields["priority"] = (0);
    s.lastBrkId = 2239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2239]) return breakpoint(s, 30, 2239, r0);
  case 30:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = globals.defaultFactory___26228;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = particles_ParticleSource_setFactory__P26227_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 1129; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 2240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2240]) return breakpoint(s, 32, 2240, r0);
  case 32:
    r0 = pxsim_Array__push(s.sources___32083, s.arg0);
    s.lastBrkId = 2241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2241]) return breakpoint(s, 33, 2241, r0);
  case 33:
    s.tmp_0 = particles_ParticleSource_enabled__P26221_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1130; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_constructor__P26213.info = {"start":2307,"length":899,"line":87,"column":8,"endLine":110,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["this","anchor","particlesPerSecond","factory"]}

function particles_ParticleSource_constructor__P26213_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_constructor__P26213, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  sources___32083: undefined,
  removedSource___32092: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_particleSources__P28188(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___32551 = undefined;
    s.lastBrkId = 2358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2358]) return breakpoint(s, 1, 2358, r0);
  case 1:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 1181; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["particleSources"];
    s.sources___32551 = (r0);
    s.lastBrkId = 2359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2359]) return breakpoint(s, 3, 2359, r0);
  case 3:
    r0 = s.sources___32551;
    return leave(s, r0)
  default: oops()
} } }
particles_particleSources__P28188.info = {"start":12848,"length":119,"line":421,"column":4,"endLine":424,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"particleSources","argumentNames":[]}

function particles_particleSources__P28188_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_particleSources__P28188, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___32551: undefined,
} }





function particles_sortSources__P28185(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2345]) return breakpoint(s, 1, 2345, r0);
  case 1:
    s.tmp_0 = helpers_arraySort__P23476_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = particles_sortSources_inline__P32396;
    s.callLocIdx = 1168; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_sortSources__P28185.info = {"start":10026,"length":129,"line":332,"column":4,"endLine":334,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"sortSources","argumentNames":["sources"]}

function particles_sortSources__P28185_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_sortSources__P28185, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_sortSources_inline__P32396(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["priority"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["priority"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["id"];
    s.tmp_3 = r0;
    r0 = s.arg1.fields["id"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
particles_sortSources_inline__P32396.info = {"start":10097,"length":50,"line":333,"column":21,"endLine":333,"endColumn":71,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["a","b"]}

function particles_sortSources_inline__P32396_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_sortSources_inline__P32396, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arraySort__P23476(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 38;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[38]) return breakpoint(s, 5, 38, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 39;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[39]) return breakpoint(s, 6, 39, r0);
  case 6:
    s.arg1 = (helpers_arraySort_inline__P32419);
  case 3:
  case 4:
    s.lastBrkId = 57;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[57]) return breakpoint(s, 7, 57, r0);
  case 7:
    s.tmp_0 = helpers_sortHelper__P27420_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 2; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySort__P23476.info = {"start":5663,"length":859,"line":207,"column":4,"endLine":227,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySort","argumentNames":["arr","callbackfn"]}

function helpers_arraySort__P23476_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySort__P23476, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arraySort_inline__P32419(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.aIsUndef___32422 = undefined;
    s.bIsUndef___32426 = undefined;
    s.aIsNull___32437 = undefined;
    s.bIsNull___32441 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 40;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[40]) return breakpoint(s, 18, 40, r0);
  case 18:
    r0 = (s.arg0 === undefined);
    s.aIsUndef___32422 = (r0);
    s.lastBrkId = 41;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[41]) return breakpoint(s, 19, 41, r0);
  case 19:
    r0 = (s.arg1 === undefined);
    s.bIsUndef___32426 = (r0);
    s.lastBrkId = 42;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[42]) return breakpoint(s, 20, 42, r0);
  case 20:
    s.tmp_0 = r0 = s.aIsUndef___32422;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.bIsUndef___32426;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 43;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[43]) return breakpoint(s, 21, 43, r0);
  case 21:
    r0 = 0;
    { step = 17; continue; }
    { step = 8; continue; }
  case 3:
    s.lastBrkId = 44;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[44]) return breakpoint(s, 22, 44, r0);
  case 22:
    r0 = pxsim_numops_toBoolDecr(s.aIsUndef___32422);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 45;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[45]) return breakpoint(s, 23, 45, r0);
  case 23:
    r0 = 1;
    { step = 17; continue; }
    { step = 7; continue; }
  case 4:
    s.lastBrkId = 46;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[46]) return breakpoint(s, 24, 46, r0);
  case 24:
    r0 = pxsim_numops_toBoolDecr(s.bIsUndef___32426);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 47;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[47]) return breakpoint(s, 25, 47, r0);
  case 25:
    r0 = -1;
    { step = 17; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 48;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[48]) return breakpoint(s, 26, 48, r0);
  case 26:
    r0 = (s.arg0 === null);
    s.aIsNull___32437 = (r0);
    s.lastBrkId = 49;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[49]) return breakpoint(s, 27, 49, r0);
  case 27:
    r0 = (s.arg1 === null);
    s.bIsNull___32441 = (r0);
    s.lastBrkId = 50;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[50]) return breakpoint(s, 28, 50, r0);
  case 28:
    s.tmp_0 = r0 = s.aIsNull___32437;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = s.bIsNull___32441;
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 51;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[51]) return breakpoint(s, 29, 51, r0);
  case 29:
    r0 = 0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 11:
    s.lastBrkId = 52;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[52]) return breakpoint(s, 30, 52, r0);
  case 30:
    r0 = pxsim_numops_toBoolDecr(s.aIsNull___32437);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 53;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[53]) return breakpoint(s, 31, 53, r0);
  case 31:
    r0 = 1;
    { step = 17; continue; }
    { step = 15; continue; }
  case 12:
    s.lastBrkId = 54;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[54]) return breakpoint(s, 32, 54, r0);
  case 32:
    r0 = pxsim_numops_toBoolDecr(s.bIsNull___32441);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 55;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[55]) return breakpoint(s, 33, 55, r0);
  case 33:
    r0 = -1;
    { step = 17; continue; }
  case 13:
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 56;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[56]) return breakpoint(s, 34, 56, r0);
  case 34:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 35);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 35:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 36);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 36:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_7);
    s.tmp_5 = r0;
    r0 = pxsim_String_.compare(s.tmp_2, s.tmp_5);
  case 17:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySort_inline__P32419.info = {"start":5826,"length":636,"line":209,"column":25,"endLine":224,"endColumn":13,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"inline","argumentNames":["a","b"]}

function helpers_arraySort_inline__P32419_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySort_inline__P32419, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  aIsUndef___32422: undefined,
  bIsUndef___32426: undefined,
  aIsNull___32437: undefined,
  bIsNull___32441: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_sortHelper__P27420(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___32476 = undefined;
    s.i___32479 = undefined;
    s.j___32485 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 24;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[24]) return breakpoint(s, 12, 24, r0);
  case 12:
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 25;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[25]) return breakpoint(s, 13, 25, r0);
  case 13:
    r0 = s.arg0;
    { step = 11; continue; }
  case 3:
  case 4:
    s.lastBrkId = 26;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[26]) return breakpoint(s, 14, 26, r0);
  case 14:
    r0 = pxsim_Array__length(s.arg0);
    s.len___32476 = (r0);
    s.lastBrkId = 27;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[27]) return breakpoint(s, 15, 27, r0);
  case 15:
    s.i___32479 = (0);
    s.lastBrkId = 28;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[28]) return breakpoint(s, 16, 28, r0);
  case 16:
  case 5:
    s.lastBrkId = 29;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[29]) return breakpoint(s, 17, 29, r0);
  case 17:
    s.tmp_1 = r0 = s.i___32479;
    r0 = (s.len___32476 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 30;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[30]) return breakpoint(s, 18, 30, r0);
  case 18:
    r0 = (s.i___32479 + 1);
    s.j___32485 = (r0);
    s.lastBrkId = 31;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[31]) return breakpoint(s, 19, 31, r0);
  case 19:
  case 6:
    s.lastBrkId = 32;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[32]) return breakpoint(s, 20, 32, r0);
  case 20:
    r0 = (s.j___32485 < s.len___32476);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 33;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[33]) return breakpoint(s, 21, 33, r0);
  case 21:
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___32479);
    s.tmp_3.arg0 = r0;
    r0 = pxsim_Array__getAt(s.arg0, s.j___32485);
    s.tmp_3.arg1 = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 0; s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 34;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[34]) return breakpoint(s, 23, 34, r0);
  case 23:
    s.tmp_4 = helpers_swap__P27419_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.i___32479;
    s.tmp_4.arg2 = s.j___32485;
    s.callLocIdx = 1; s.pc = 24; return s.tmp_4;
  case 24:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 35;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[35]) return breakpoint(s, 25, 35, r0);
  case 25:
    r0 = (s.j___32485 + 1);
    s.j___32485 = (r0);
    { step = 6; continue; }
  case 9:
    s.lastBrkId = 36;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[36]) return breakpoint(s, 26, 36, r0);
  case 26:
    r0 = (s.i___32479 + 1);
    s.i___32479 = (r0);
    { step = 5; continue; }
  case 10:
    s.lastBrkId = 37;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[37]) return breakpoint(s, 27, 37, r0);
  case 27:
    r0 = s.arg0;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
helpers_sortHelper__P27420.info = {"start":5176,"length":481,"line":191,"column":4,"endLine":205,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"sortHelper","argumentNames":["arr","callbackfn"]}

function helpers_sortHelper__P27420_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_sortHelper__P27420, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  len___32476: undefined,
  i___32479: undefined,
  j___32485: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_swap__P27419(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.temp___32514 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 21;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[21]) return breakpoint(s, 1, 21, r0);
  case 1:
    r0 = pxsim_Array__getAt(s.arg0, s.arg1);
    s.temp___32514 = (r0);
    s.lastBrkId = 22;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[22]) return breakpoint(s, 2, 22, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.tmp_2);
    s.lastBrkId = 23;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[23]) return breakpoint(s, 3, 23, r0);
  case 3:
    r0 = pxsim_Array_.setAt(s.arg0, s.arg2, s.temp___32514);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_swap__P27419.info = {"start":5030,"length":140,"line":185,"column":4,"endLine":189,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"swap","argumentNames":["arr","i","j"]}

function helpers_swap__P27419_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_swap__P27419, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  temp___32514: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function particles_init__P28182(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___32556 = undefined;
    s.lastBrkId = 2323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2323]) return breakpoint(s, 4, 2323, r0);
  case 4:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 1158; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.scene___32556 = (r0);
    s.lastBrkId = 2324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2324]) return breakpoint(s, 6, 2324, r0);
  case 6:
    r0 = s.scene___32556.fields["particleSources"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2325]) return breakpoint(s, 7, 2325, r0);
  case 7:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2326]) return breakpoint(s, 8, 2326, r0);
  case 8:
    s.tmp_1 = r0 = s.scene___32556;
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["particleSources"] = (s.tmp_2);
    s.lastBrkId = 2327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2327]) return breakpoint(s, 9, 2327, r0);
  case 9:
    r0 = pxsim.control.millis();
    globals.lastUpdate___28177 = (r0);
    s.lastBrkId = 2328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2328]) return breakpoint(s, 10, 2328, r0);
  case 10:
    s.tmp_0 = game_onUpdate__P26080_mk(s);
    s.tmp_0.arg0 = particles_updateParticles__P28183;
    s.callLocIdx = 1159; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2329]) return breakpoint(s, 12, 2329, r0);
  case 12:
    s.tmp_0 = game_onUpdateInterval__P26081_mk(s);
    s.tmp_0.arg0 = 250;
    s.tmp_0.arg1 = particles_pruneParticles__P28184;
    s.callLocIdx = 1160; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_init__P28182.info = {"start":9236,"length":276,"line":304,"column":4,"endLine":311,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"init","argumentNames":[]}

function particles_init__P28182_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_init__P28182, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  scene___32556: undefined,
} }





function particles_pruneParticles__P28184(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___32571 = undefined;
    s.lastBrkId = 2342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2342]) return breakpoint(s, 3, 2342, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P28188_mk(s);
    s.callLocIdx = 1164; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___32571 = (r0);
    s.lastBrkId = 2343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2343]) return breakpoint(s, 5, 2343, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___32571);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2344]) return breakpoint(s, 6, 2344, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_1 = helpers_arraySlice__P23486_mk(s);
    s.tmp_1.arg0 = s.sources___32571;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_Array__length(s.sources___32571);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 1165; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = particles_pruneParticles_inline__P32580;
    s.callLocIdx = 1167; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_pruneParticles__P28184.info = {"start":9864,"length":156,"line":327,"column":4,"endLine":330,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"pruneParticles","argumentNames":[]}

function particles_pruneParticles__P28184_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_pruneParticles__P28184, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sources___32571: undefined,
} }





function particles_pruneParticles_inline__P32580(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource__prune__P26216_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1166; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_pruneParticles_inline__P32580.info = {"start":9997,"length":15,"line":329,"column":62,"endLine":329,"endColumn":77,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_pruneParticles_inline__P32580_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_pruneParticles_inline__P32580, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_ParticleSource__prune__P26216(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___32343 = undefined;
    s.sources___32351 = undefined;
    s.current___32365 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2281]) return breakpoint(s, 21, 2281, r0);
  case 21:
  case 1:
    s.lastBrkId = 2282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2282]) return breakpoint(s, 22, 2282, r0);
  case 22:
    r0 = s.arg0.fields["head"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = s.arg0.fields["head"];
    r0 = r0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2283]) return breakpoint(s, 23, 2283, r0);
  case 23:
    r0 = s.arg0.fields["head"];
    r0 = r0.fields["next"];
    s.tmp_3 = r0;
    r0 = (s.arg0).fields["head"] = (s.tmp_3);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 2284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2284]) return breakpoint(s, 24, 2284, r0);
  case 24:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["head"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 2285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2285]) return breakpoint(s, 25, 2285, r0);
  case 25:
    s.tmp_5 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 1139; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    s.scene___32343 = (r0);
    s.lastBrkId = 2286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2286]) return breakpoint(s, 27, 2286, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.scene___32343);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2287]) return breakpoint(s, 28, 2287, r0);
  case 28:
    r0 = s.scene___32343.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg0);
  case 7:
  case 8:
    s.lastBrkId = 2288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2288]) return breakpoint(s, 29, 2288, r0);
  case 29:
    s.tmp_0 = particles_particleSources__P28188_mk(s);
    s.callLocIdx = 1140; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.sources___32351 = (r0);
    s.lastBrkId = 2289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2289]) return breakpoint(s, 31, 2289, r0);
  case 31:
    s.tmp_0 = r0 = s.sources___32351;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_Array__length(s.sources___32351);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 2290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2290]) return breakpoint(s, 32, 2290, r0);
  case 32:
    r0 = pxsim_Array_.removeElement(s.sources___32351, s.arg0);
  case 11:
  case 12:
    s.lastBrkId = 2291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2291]) return breakpoint(s, 33, 2291, r0);
  case 33:
    r0 = s.arg0.fields["anchor"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == undefined);
  case 13:
  case 14:
    s.lastBrkId = 2292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2292]) return breakpoint(s, 34, 2292, r0);
  case 34:
    r0 = s.arg0.fields["head"];
    s.current___32365 = (r0);
    s.lastBrkId = 2293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2293]) return breakpoint(s, 35, 2293, r0);
  case 35:
  case 15:
    s.lastBrkId = 2294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2294]) return breakpoint(s, 36, 2294, r0);
  case 36:
    s.tmp_0 = r0 = s.current___32365;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 16:
    r0 = s.current___32365.fields["next"];
  case 17:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 2295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2295]) return breakpoint(s, 37, 2295, r0);
  case 37:
    r0 = s.current___32365.fields["next"];
    r0 = r0.fields["lifespan"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 <= 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 2296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2296]) return breakpoint(s, 38, 2296, r0);
  case 38:
    r0 = s.current___32365.fields["next"];
    r0 = r0.fields["next"];
    s.tmp_4 = r0;
    r0 = (s.current___32365).fields["next"] = (s.tmp_4);
    { step = 19; continue; }
  case 18:
    s.lastBrkId = 2297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2297]) return breakpoint(s, 39, 2297, r0);
  case 39:
    r0 = s.current___32365.fields["next"];
    s.current___32365 = (r0);
  case 19:
    { step = 15; continue; }
  case 20:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource__prune__P26216.info = {"start":5104,"length":830,"line":166,"column":8,"endLine":189,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"_prune","argumentNames":["this"]}

function particles_ParticleSource__prune__P26216_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource__prune__P26216, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  scene___32343: undefined,
  sources___32351: undefined,
  current___32365: undefined,
  arg0: undefined,
} }





function particles_updateParticles__P28183(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___32970 = undefined;
    s.time___32977 = undefined;
    s.dt___32980 = undefined;
    s.i___32986 = undefined;
    s.lastBrkId = 2330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2330]) return breakpoint(s, 6, 2330, r0);
  case 6:
    s.tmp_0 = particles_particleSources__P28188_mk(s);
    s.callLocIdx = 1161; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.sources___32970 = (r0);
    s.lastBrkId = 2331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2331]) return breakpoint(s, 8, 2331, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.sources___32970);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2332]) return breakpoint(s, 9, 2332, r0);
  case 9:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2333]) return breakpoint(s, 10, 2333, r0);
  case 10:
    s.tmp_2 = particles_sortSources__P28185_mk(s);
    s.tmp_2.arg0 = s.sources___32970;
    s.callLocIdx = 1162; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2334]) return breakpoint(s, 12, 2334, r0);
  case 12:
    r0 = pxsim.control.millis();
    s.time___32977 = (r0);
    s.lastBrkId = 2335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2335]) return breakpoint(s, 13, 2335, r0);
  case 13:
    r0 = (s.time___32977 - globals.lastUpdate___28177);
    s.dt___32980 = (r0);
    s.lastBrkId = 2336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2336]) return breakpoint(s, 14, 2336, r0);
  case 14:
    globals.lastUpdate___28177 = (s.time___32977);
    s.lastBrkId = 2337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2337]) return breakpoint(s, 15, 2337, r0);
  case 15:
    s.i___32986 = (0);
    s.lastBrkId = 2338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2338]) return breakpoint(s, 16, 2338, r0);
  case 16:
  case 3:
    s.lastBrkId = 2339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2339]) return breakpoint(s, 17, 2339, r0);
  case 17:
    s.tmp_1 = r0 = s.i___32986;
    r0 = pxsim_Array__length(s.sources___32970);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2340]) return breakpoint(s, 18, 2340, r0);
  case 18:
    s.tmp_3 = particles_ParticleSource__update__P26215_mk(s);
    r0 = pxsim_Array__getAt(s.sources___32970, s.i___32986);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.dt___32980;
    s.callLocIdx = 1163; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 2341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2341]) return breakpoint(s, 20, 2341, r0);
  case 20:
    r0 = (s.i___32986 + 1);
    s.i___32986 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_updateParticles__P28183.info = {"start":9518,"length":340,"line":313,"column":4,"endLine":325,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"updateParticles","argumentNames":[]}

function particles_updateParticles__P28183_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_updateParticles__P28183, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  sources___32970: undefined,
  time___32977: undefined,
  dt___32980: undefined,
  i___32986: undefined,
} }





function particles_ParticleSource__update__P26215(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___33049 = undefined;
    s.current___33068 = undefined;
    s.fixedDt___33076 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2250]) return breakpoint(s, 28, 2250, r0);
  case 28:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["timer"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["timer"] = (s.tmp_1);
    s.lastBrkId = 2251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2251]) return breakpoint(s, 29, 2251, r0);
  case 29:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2252]) return breakpoint(s, 30, 2252, r0);
  case 30:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 2253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2253]) return breakpoint(s, 31, 2253, r0);
  case 31:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2254]) return breakpoint(s, 32, 2254, r0);
  case 32:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 2255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2255]) return breakpoint(s, 33, 2255, r0);
  case 33:
    s.tmp_0 = particles_ParticleSource_destroy__P26222_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1134; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
  case 1:
  case 2:
    { step = 10; continue; }
  case 3:
    s.lastBrkId = 2256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2256]) return breakpoint(s, 35, 2256, r0);
  case 35:
    r0 = s.arg0.fields["anchor"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    s.tmp_2 = if_flags_1_mk(s);
    r0 = s.arg0.fields["anchor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "flags");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["flags"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["flags"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1135; s.pc = 36; return s.tmp_2; }
    }
  case 36:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_3;
    { step = 7; continue; }
  case 6:
    s.tmp_5 = if_flags_1_mk(s);
    r0 = s.arg0.fields["anchor"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "flags");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["flags"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["flags"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1136; s.pc = 37; return s.tmp_5; }
    }
  case 37:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 2);
  case 7:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2257]) return breakpoint(s, 38, 2257, r0);
  case 38:
    r0 = (s.arg0).fields["lifespan"] = (750);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 2258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2258]) return breakpoint(s, 39, 2258, r0);
  case 39:
  case 11:
    s.lastBrkId = 2259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2259]) return breakpoint(s, 40, 2259, r0);
  case 40:
    r0 = s.arg0.fields["timer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = s.tmp_0;
    { step = 13; continue; }
  case 12:
    s.tmp_2 = particles_ParticleSource_enabled__P26220_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1137; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
  case 13:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 2260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2260]) return breakpoint(s, 42, 2260, r0);
  case 42:
    s.tmp_4 = r0 = s.arg0;
    r0 = s.tmp_4.fields["timer"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["period"];
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["timer"] = (s.tmp_5);
    s.lastBrkId = 2261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2261]) return breakpoint(s, 43, 2261, r0);
  case 43:
    s.tmp_0 = particles_ParticleFactory__C26244_v0_2_mk(s);
    r0 = s.arg0.fields["_factory"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["anchor"];
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleFactory__C26244_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.createParticle;
    s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    s.p___33049 = (r0);
    s.lastBrkId = 2262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2262]) return breakpoint(s, 45, 2262, r0);
  case 45:
    r0 = pxsim_numops_toBoolDecr(s.p___33049);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 2263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2263]) return breakpoint(s, 46, 2263, r0);
  case 46:
    { step = 11; continue; }
  case 14:
  case 15:
    s.lastBrkId = 2264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2264]) return breakpoint(s, 47, 2264, r0);
  case 47:
    r0 = s.arg0.fields["head"];
    s.tmp_2 = r0;
    r0 = (s.p___33049).fields["next"] = (s.tmp_2);
    s.lastBrkId = 2265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2265]) return breakpoint(s, 48, 2265, r0);
  case 48:
    r0 = (s.arg0).fields["head"] = (s.p___33049);
    { step = 11; continue; }
  case 16:
    s.lastBrkId = 2266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2266]) return breakpoint(s, 49, 2266, r0);
  case 49:
    r0 = s.arg0.fields["head"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 2267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2267]) return breakpoint(s, 50, 2267, r0);
  case 50:
    { step = 27; continue; }
  case 17:
  case 18:
    s.lastBrkId = 2268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2268]) return breakpoint(s, 51, 2268, r0);
  case 51:
    r0 = s.arg0.fields["head"];
    s.current___33068 = (r0);
    s.lastBrkId = 2269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2269]) return breakpoint(s, 52, 2269, r0);
  case 52:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["_dt"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_dt"] = (s.tmp_1);
    s.lastBrkId = 2270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2270]) return breakpoint(s, 53, 2270, r0);
  case 53:
    s.tmp_0 = Fx8__P23520_mk(s);
    r0 = s.arg0.fields["_dt"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1138; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.fixedDt___33076 = (r0);
    s.lastBrkId = 2271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2271]) return breakpoint(s, 55, 2271, r0);
  case 55:
    r0 = pxsim_numops_toBoolDecr(s.fixedDt___33076);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 2272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2272]) return breakpoint(s, 56, 2272, r0);
  case 56:
  case 19:
    s.lastBrkId = 2273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2273]) return breakpoint(s, 57, 2273, r0);
  case 57:
    r0 = s.current___33068.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 2274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2274]) return breakpoint(s, 58, 2274, r0);
  case 58:
    s.tmp_2 = r0 = s.current___33068;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 2275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2275]) return breakpoint(s, 59, 2275, r0);
  case 59:
    s.tmp_0 = particles_ParticleSource__C26208_v4_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.current___33068;
    s.tmp_0.arg2 = s.fixedDt___33076;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleSource__C26208_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.updateParticle;
    s.pc = 60; return s.tmp_0;
  case 60:
    r0 = s.retval;
  case 20:
  case 21:
    s.lastBrkId = 2276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2276]) return breakpoint(s, 61, 2276, r0);
  case 61:
    r0 = s.current___33068.fields["next"];
    s.tmp_0 = r0;
    s.current___33068 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    { step = 19; continue; }
  case 22:
    s.lastBrkId = 2277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2277]) return breakpoint(s, 62, 2277, r0);
  case 62:
    r0 = (s.arg0).fields["_dt"] = (0);
    { step = 26; continue; }
  case 23:
    s.lastBrkId = 2278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2278]) return breakpoint(s, 63, 2278, r0);
  case 63:
  case 24:
    s.lastBrkId = 2279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2279]) return breakpoint(s, 64, 2279, r0);
  case 64:
    s.tmp_0 = r0 = s.current___33068;
    r0 = s.tmp_0.fields["lifespan"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 2280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2280]) return breakpoint(s, 65, 2280, r0);
  case 65:
    r0 = s.current___33068.fields["next"];
    s.tmp_0 = r0;
    s.current___33068 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 25; continue; }
    { step = 24; continue; }
  case 25:
  case 26:
  case 27:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource__update__P26215.info = {"start":3694,"length":1400,"line":124,"column":8,"endLine":164,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"_update","argumentNames":["this","dt"]}

function particles_ParticleSource__update__P26215_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource__update__P26215, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  p___33049: undefined,
  current___33068: undefined,
  fixedDt___33076: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_updateParticle__P28179(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2316]) return breakpoint(s, 1, 2316, r0);
  case 1:
    s.tmp_0 = Fx_rightShift__P23542_mk(s);
    s.tmp_0.arg0 = s.arg2;
    s.tmp_0.arg1 = 10;
    s.callLocIdx = 1146; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.arg2 = (r0);
    s.lastBrkId = 2317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2317]) return breakpoint(s, 3, 2317, r0);
  case 3:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["vx"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P23531_mk(s);
    r0 = s.arg0.fields["ax"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1147; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1148; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vx"] = (s.tmp_1);
    s.lastBrkId = 2318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2318]) return breakpoint(s, 6, 2318, r0);
  case 6:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["vy"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P23531_mk(s);
    r0 = s.arg0.fields["ay"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1149; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1150; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    s.lastBrkId = 2319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2319]) return breakpoint(s, 9, 2319, r0);
  case 9:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P23531_mk(s);
    r0 = s.arg1.fields["vx"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1151; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1152; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 2320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2320]) return breakpoint(s, 12, 2320, r0);
  case 12:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P23531_mk(s);
    r0 = s.arg1.fields["vy"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1153; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1154; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_updateParticle__P28179.info = {"start":8248,"length":357,"line":277,"column":8,"endLine":285,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"updateParticle","argumentNames":["this","p","fixedDt"]}

function particles_ParticleSource_updateParticle__P28179_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_updateParticle__P28179, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Fx_rightShift__P23542(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[230]) return breakpoint(s, 1, 230, r0);
  case 1:
    r0 = (s.arg0 >> s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_rightShift__P23542.info = {"start":2266,"length":108,"line":71,"column":4,"endLine":73,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"rightShift","argumentNames":["a","n"]}

function Fx_rightShift__P23542_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_rightShift__P23542, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_mul__P23531(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[215]) return breakpoint(s, 1, 215, r0);
  case 1:
    r0 = pxsim.Math_.imul(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Fx_mul__P23531.info = {"start":872,"length":133,"line":29,"column":4,"endLine":31,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"mul","argumentNames":["a","b"]}

function Fx_mul__P23531_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_mul__P23531, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_add__P23528(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[212]) return breakpoint(s, 1, 212, r0);
  case 1:
    r0 = (s.arg0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_add__P23528.info = {"start":511,"length":118,"line":20,"column":4,"endLine":22,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"add","argumentNames":["a","b"]}

function Fx_add__P23528_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_add__P23528, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleFactory_createParticle__P26246(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___33173 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C26244_VT)) failedCast(r0);
    s.lastBrkId = 2385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2385]) return breakpoint(s, 1, 2385, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(particles_Particle__C26189_VT);
    s.p___33173 = (r0);
    s.lastBrkId = 2386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2386]) return breakpoint(s, 2, 2386, r0);
  case 2:
    s.tmp_0 = r0 = s.p___33173;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_3 = if_x_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "x");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["x"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["x"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1188; s.pc = 4; return s.tmp_3; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1189; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 2387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2387]) return breakpoint(s, 5, 2387, r0);
  case 5:
    s.tmp_0 = r0 = s.p___33173;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_3 = if_y_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "y");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["y"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["y"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1190; s.pc = 7; return s.tmp_3; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1191; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 2388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2388]) return breakpoint(s, 8, 2388, r0);
  case 8:
    r0 = (s.p___33173).fields["vx"] = (0);
    s.lastBrkId = 2389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2389]) return breakpoint(s, 9, 2389, r0);
  case 9:
    r0 = (s.p___33173).fields["vy"] = (0);
    s.lastBrkId = 2390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2390]) return breakpoint(s, 10, 2390, r0);
  case 10:
    r0 = (s.p___33173).fields["lifespan"] = (500);
    s.lastBrkId = 2391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2391]) return breakpoint(s, 11, 2391, r0);
  case 11:
    r0 = s.p___33173;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_createParticle__P26246.info = {"start":1822,"length":282,"line":67,"column":8,"endLine":77,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_ParticleFactory_createParticle__P26246_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_createParticle__P26246, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  p___33173: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_onUpdateInterval__P26081(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.timer___32591 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1973;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1973]) return breakpoint(s, 6, 1973, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg0 < 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1974;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1974]) return breakpoint(s, 7, 1974, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = pxsim_pxtrt.mklocRef();
    s.timer___32591 = (r0);
    s.lastBrkId = 1975;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1975]) return breakpoint(s, 8, 1975, r0);
  case 8:
    r0 = pxsim_pxtrt_stlocRef(s.timer___32591, 0);
    s.lastBrkId = 1976;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1976]) return breakpoint(s, 9, 1976, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(3, game_onUpdateInterval_inline__P32595);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.timer___32591);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg1);
    s.tmp_1 = control_EventContext_registerFrameHandler__P23774_mk(s);
    s.tmp_2 = game_eventContext__P26064_mk(s);
    s.callLocIdx = 945; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 19;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 949; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdateInterval__P26081.info = {"start":891,"length":401,"line":28,"column":4,"endLine":38,"endColumn":5,"fileName":"pxt_modules/game/gameutil.ts","functionName":"onUpdateInterval","argumentNames":["period","a"]}

function game_onUpdateInterval__P26081_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdateInterval__P26081, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  timer___32591: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_onUpdateInterval_inline__P32595(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.time___32596 = undefined;
    s.lastBrkId = 1977;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1977]) return breakpoint(s, 3, 1977, r0);
  case 3:
    s.tmp_0 = scene_Scene_millis__P25972_mk(s);
    s.tmp_1 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 946; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 947; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.time___32596 = (r0);
    s.lastBrkId = 1978;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1978]) return breakpoint(s, 6, 1978, r0);
  case 6:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.time___32596);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1979;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1979]) return breakpoint(s, 7, 1979, r0);
  case 7:
    s.tmp_2 = r0 = s.caps[0];
    r0 = (s.time___32596 + s.caps[1]);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_2, s.tmp_3);
    s.lastBrkId = 1980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1980]) return breakpoint(s, 8, 1980, r0);
  case 8:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.caps[2];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 948; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdateInterval_inline__P32595.info = {"start":1105,"length":179,"line":31,"column":81,"endLine":37,"endColumn":9,"fileName":"pxt_modules/game/gameutil.ts","functionName":"inline","argumentNames":[]}

function game_onUpdateInterval_inline__P32595_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdateInterval_inline__P32595, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  time___32596: undefined,
} }





function scene_Scene_millis__P25972(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C25947_VT)) failedCast(r0);
    s.lastBrkId = 1894;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1894]) return breakpoint(s, 1, 1894, r0);
  case 1:
    r0 = s.arg0.fields["_millis"];
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_millis__P25972.info = {"start":6898,"length":61,"line":191,"column":8,"endLine":193,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"millis","argumentNames":["this"]}

function scene_Scene_millis__P25972_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_millis__P25972, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function control_EventContext_registerFrameHandler__P23774(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.fn___32623 = undefined;
    s.i___32632 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C23766_VT)) failedCast(r0);
    s.lastBrkId = 431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[431]) return breakpoint(s, 8, 431, r0);
  case 8:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[432]) return breakpoint(s, 9, 432, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["frameCallbacks"] = (s.tmp_4);
    s.lastBrkId = 433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[433]) return breakpoint(s, 10, 433, r0);
  case 10:
    s.tmp_0 = control_EventContext_registerFrameCallbacks__P27497_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 54; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[434]) return breakpoint(s, 12, 434, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(control_FrameCallback__C23763_VT);
    s.fn___32623 = (r0);
    s.lastBrkId = 435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[435]) return breakpoint(s, 13, 435, r0);
  case 13:
    r0 = (s.fn___32623).fields["order"] = (s.arg1);
    s.lastBrkId = 436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[436]) return breakpoint(s, 14, 436, r0);
  case 14:
    r0 = (s.fn___32623).fields["handler"] = (s.arg2);
    s.lastBrkId = 437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[437]) return breakpoint(s, 15, 437, r0);
  case 15:
    s.i___32632 = (0);
    s.lastBrkId = 438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[438]) return breakpoint(s, 16, 438, r0);
  case 16:
  case 3:
    s.lastBrkId = 439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[439]) return breakpoint(s, 17, 439, r0);
  case 17:
    s.tmp_1 = r0 = s.i___32632;
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[440]) return breakpoint(s, 18, 440, r0);
  case 18:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.i___32632);
    r0 = r0.fields["order"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > s.arg1);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[441]) return breakpoint(s, 19, 441, r0);
  case 19:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_7 = r0;
    r0 = pxsim_Array_.insertAt(s.tmp_7, s.i___32632, s.fn___32623);
    s.lastBrkId = 442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[442]) return breakpoint(s, 20, 442, r0);
  case 20:
    r0 = s.fn___32623;
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[443]) return breakpoint(s, 21, 443, r0);
  case 21:
    r0 = (s.i___32632 + 1);
    s.i___32632 = (r0);
    { step = 3; continue; }
  case 6:
    s.lastBrkId = 444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[444]) return breakpoint(s, 22, 444, r0);
  case 22:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.fn___32623);
    s.lastBrkId = 445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[445]) return breakpoint(s, 23, 445, r0);
  case 23:
    r0 = s.fn___32623;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameHandler__P23774.info = {"start":4675,"length":643,"line":143,"column":8,"endLine":160,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerFrameHandler","argumentNames":["this","order","handler"]}

function control_EventContext_registerFrameHandler__P23774_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameHandler__P23774, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  fn___32623: undefined,
  i___32632: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_EventContext_registerFrameCallbacks__P27497(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.worker___32666 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C23766_VT)) failedCast(r0);
    s.lastBrkId = 407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[407]) return breakpoint(s, 4, 407, r0);
  case 4:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[408]) return breakpoint(s, 5, 408, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[409]) return breakpoint(s, 6, 409, r0);
  case 6:
    r0 = s.arg0.fields["frameWorker"];
    s.worker___32666 = (r0);
    s.lastBrkId = 410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[410]) return breakpoint(s, 7, 410, r0);
  case 7:
    r0 = pxsim_pxtcore_mkAction(2, control_EventContext_registerFrameCallbacks_inline__P32672);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.worker___32666);
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks__P27497.info = {"start":3481,"length":895,"line":105,"column":8,"endLine":129,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerFrameCallbacks","argumentNames":["this"]}

function control_EventContext_registerFrameCallbacks__P27497_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks__P27497, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  worker___32666: undefined,
  arg0: undefined,
} }





function control_EventContext_registerFrameCallbacks_inline__P32672(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.delay___32702 = undefined;
    s.lastBrkId = 411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[411]) return breakpoint(s, 5, 411, r0);
  case 5:
    r0 = s.caps[0].fields["runningCallbacks"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[412]) return breakpoint(s, 6, 412, r0);
  case 6:
    r0 = pxsim_pxtcore_mkAction(1, control_EventContext_registerFrameCallbacks_inline__P32678);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.caps[0]);
    s.tmp_2 = pauseUntil__P23738_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 48; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[413]) return breakpoint(s, 8, 413, r0);
  case 8:
    r0 = (s.caps[0]).fields["runningCallbacks"] = (true);
    s.lastBrkId = 414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[414]) return breakpoint(s, 9, 414, r0);
  case 9:
    r0 = (s.caps[0]).fields["framesInSample"] = (0);
    s.lastBrkId = 415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[415]) return breakpoint(s, 10, 415, r0);
  case 10:
    r0 = (s.caps[0]).fields["timeInSample"] = (0);
    s.lastBrkId = 416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[416]) return breakpoint(s, 11, 416, r0);
  case 11:
    r0 = (s.caps[0]).fields["deltaTimeMillis"] = (0);
    s.lastBrkId = 417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[417]) return breakpoint(s, 12, 417, r0);
  case 12:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim.control.millis();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["prevTimeMillis"] = (s.tmp_1);
    s.lastBrkId = 418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[418]) return breakpoint(s, 13, 418, r0);
  case 13:
  case 3:
    s.lastBrkId = 419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[419]) return breakpoint(s, 14, 419, r0);
  case 14:
    r0 = s.caps[0].fields["frameWorker"];
    s.tmp_1 = r0;
    r0 = (s.caps[1] == s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[420]) return breakpoint(s, 15, 420, r0);
  case 15:
    s.tmp_2 = control_EventContext_runCallbacks__P27496_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 49; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.delay___32702 = (r0);
    s.lastBrkId = 421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[421]) return breakpoint(s, 17, 421, r0);
  case 17:
    s.tmp_0 = pause__P23784_mk(s);
    s.tmp_0.arg0 = s.delay___32702;
    s.callLocIdx = 50; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 3; continue; }
  case 4:
    s.lastBrkId = 422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[422]) return breakpoint(s, 19, 422, r0);
  case 19:
    r0 = (s.caps[0]).fields["runningCallbacks"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks_inline__P32672.info = {"start":3642,"length":723,"line":109,"column":34,"endLine":128,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventContext_registerFrameCallbacks_inline__P32672_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks_inline__P32672, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  delay___32702: undefined,
} }





function control_EventContext_registerFrameCallbacks_inline__P32678(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["runningCallbacks"];
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks_inline__P32678.info = {"start":3873,"length":28,"line":113,"column":31,"endLine":113,"endColumn":59,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventContext_registerFrameCallbacks_inline__P32678_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks_inline__P32678, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function control_EventContext_runCallbacks__P27496(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.loopStart___32711 = undefined;
    s.f___32724 = undefined;
    s.unnamed354___U2 = undefined;
    s.unnamed355___U3 = undefined;
    s.runtime___32729 = undefined;
    s.fps___32749 = undefined;
    s.delay___32811 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C23766_VT)) failedCast(r0);
    s.lastBrkId = 384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[384]) return breakpoint(s, 13, 384, r0);
  case 13:
    s.lastBrkId = 385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[385]) return breakpoint(s, 14, 385, r0);
  case 14:
    r0 = pxsim.control.millis();
    s.loopStart___32711 = (r0);
    s.lastBrkId = 386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[386]) return breakpoint(s, 15, 386, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["prevTimeMillis"];
    s.tmp_2 = r0;
    r0 = (s.loopStart___32711 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["deltaTimeMillis"] = (s.tmp_1);
    s.lastBrkId = 387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[387]) return breakpoint(s, 16, 387, r0);
  case 16:
    r0 = (s.arg0).fields["prevTimeMillis"] = (s.loopStart___32711);
    s.lastBrkId = 388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[388]) return breakpoint(s, 17, 388, r0);
  case 17:
    s.f___32724 = (undefined);
    r0 = s.arg0.fields["frameCallbacks"];
    s.unnamed354___U2 = (r0);
    s.unnamed355___U3 = (0);
    s.lastBrkId = 389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[389]) return breakpoint(s, 18, 389, r0);
  case 18:
  case 1:
    s.tmp_0 = r0 = s.unnamed355___U3;
    r0 = pxsim_Array__length(s.unnamed354___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed354___U2, s.unnamed355___U3);
    s.f___32724 = (r0);
    s.lastBrkId = 390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[390]) return breakpoint(s, 19, 390, r0);
  case 19:
    s.tmp_2 = if_handler_1_mk(s);
    s.tmp_2.arg0 = s.f___32724;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "handler"), 1);
      s.callLocIdx = 45; s.pc = 20; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["handler"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["handler"], 1); s.callLocIdx = 45; s.pc = 20; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 45; s.pc = 20; return s.tmp_2;; }
     else { s.callLocIdx = 45; s.pc = 20; return s.tmp_2; }
    }
  case 20:
    r0 = s.retval;
    r0 = (s.unnamed355___U3 + 1);
    s.unnamed355___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed354___U2 = (undefined);
    s.lastBrkId = 391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[391]) return breakpoint(s, 21, 391, r0);
  case 21:
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.loopStart___32711);
    s.runtime___32729 = (r0);
    s.lastBrkId = 392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[392]) return breakpoint(s, 22, 392, r0);
  case 22:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["timeInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.runtime___32729);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["timeInSample"] = (s.tmp_1);
    s.lastBrkId = 393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[393]) return breakpoint(s, 23, 393, r0);
  case 23:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["framesInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["framesInSample"] = (s.tmp_1);
    s.lastBrkId = 394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[394]) return breakpoint(s, 24, 394, r0);
  case 24:
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 30);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[395]) return breakpoint(s, 25, 395, r0);
  case 25:
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 / 1000);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 / s.tmp_5);
    s.fps___32749 = (r0);
    s.lastBrkId = 396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[396]) return breakpoint(s, 26, 396, r0);
  case 26:
    r0 = pxsim.Math_.round(s.fps___32749);
    s.tmp_1 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat("fps:", s.tmp_0);
    globals.control_EventContext_lastStats___23768 = (r0);
    s.lastBrkId = 397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[397]) return breakpoint(s, 28, 397, r0);
  case 28:
    r0 = (s.fps___32749 < 99);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[398]) return breakpoint(s, 29, 398, r0);
  case 29:
    if ((globals.control_EventContext_lastStats___23768) && (globals.control_EventContext_lastStats___23768).vtable) {
    setupResume(s, 30);
    pxsim_String__stringConv(globals.control_EventContext_lastStats___23768);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.control_EventContext_lastStats___23768) + ""; }
  case 30:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.fps___32749 * 10);
    s.tmp_7 = r0;
    r0 = pxsim.Math_.round(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 % 10);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 31);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 31:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(".", s.tmp_4);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 32);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 32:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    globals.control_EventContext_lastStats___23768 = (r0);
  case 5:
  case 6:
    s.lastBrkId = 399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[399]) return breakpoint(s, 33, 399, r0);
  case 33:
    s.tmp_2 = control_ramSize__P23717_mk(s);
    s.callLocIdx = 46; s.pc = 34; return s.tmp_2;
  case 34:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 2000000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = pxsim.control.profilingEnabled();
  case 8:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[400]) return breakpoint(s, 35, 400, r0);
  case 35:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_8 = r0;
    r0 = (s.fps___32749 * 100);
    s.tmp_11 = r0;
    r0 = (s.tmp_11 | 0);
    s.tmp_10 = r0;
    if ((s.tmp_10) && (s.tmp_10).vtable) {
    setupResume(s, 36);
    pxsim_String__stringConv(s.tmp_10);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_10) + ""; }
  case 36:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String__concat(s.tmp_8, s.tmp_9);
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_7, "/100 fps - ");
    s.tmp_6 = r0;
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_13 = r0;
    if ((s.tmp_13) && (s.tmp_13).vtable) {
    setupResume(s, 37);
    pxsim_String__stringConv(s.tmp_13);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_13) + ""; }
  case 37:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_12);
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_5, " frames");
    s.tmp_4 = r0;
    r0 = pxsim.control.dmesg(s.tmp_4);
    s.lastBrkId = 401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[401]) return breakpoint(s, 38, 401, r0);
  case 38:
    r0 = pxsim.control.gc();
    s.lastBrkId = 402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[402]) return breakpoint(s, 39, 402, r0);
  case 39:
    r0 = pxsim_pxtcore.dumpPerfCounters();
  case 9:
  case 10:
    s.lastBrkId = 403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[403]) return breakpoint(s, 40, 403, r0);
  case 40:
    r0 = (s.arg0).fields["timeInSample"] = (0);
    s.lastBrkId = 404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[404]) return breakpoint(s, 41, 404, r0);
  case 41:
    r0 = (s.arg0).fields["framesInSample"] = (0);
  case 11:
  case 12:
    s.lastBrkId = 405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[405]) return breakpoint(s, 42, 405, r0);
  case 42:
    s.tmp_0 = Math_max__P23501_mk(s);
    s.tmp_0.arg0 = 1;
    r0 = (20 - s.runtime___32729);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 47; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    s.delay___32811 = (r0);
    s.lastBrkId = 406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[406]) return breakpoint(s, 44, 406, r0);
  case 44:
    r0 = s.delay___32811;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_runCallbacks__P27496.info = {"start":2182,"length":1246,"line":74,"column":8,"endLine":102,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"runCallbacks","argumentNames":["this"]}

function control_EventContext_runCallbacks__P27496_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_runCallbacks__P27496, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  loopStart___32711: undefined,
  f___32724: undefined,
  unnamed354___U2: undefined,
  unnamed355___U3: undefined,
  runtime___32729: undefined,
  fps___32749: undefined,
  delay___32811: undefined,
  arg0: undefined,
} }





function control_ramSize__P23717(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[297]) return breakpoint(s, 3, 297, r0);
  case 3:
    r0 = pxsim_pxtcore.getConfig(205, 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = control__ramSize__P27462_mk(s);
    s.callLocIdx = 26; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
control_ramSize__P23717.info = {"start":4847,"length":100,"line":165,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"ramSize","argumentNames":[]}

function control_ramSize__P23717_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_ramSize__P23717, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function control__ramSize__P27462(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[296]) return breakpoint(s, 1, 296, r0);
  case 1:
    r0 = 33554432;
    return leave(s, r0)
  default: oops()
} } }
control__ramSize__P27462.info = {"start":4727,"length":60,"line":160,"column":4,"endLine":162,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"_ramSize","argumentNames":[]}

function control__ramSize__P27462_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control__ramSize__P27462, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function pauseUntil__P23738(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[329]) return breakpoint(s, 8, 329, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = lambda_1_mk(s);
    s.tmp_2.argL = s.arg0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 32; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[330]) return breakpoint(s, 10, 330, r0);
  case 10:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[331]) return breakpoint(s, 11, 331, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[332]) return breakpoint(s, 12, 332, r0);
  case 12:
    s.arg1 = (0);
  case 5:
  case 6:
    s.lastBrkId = 333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[333]) return breakpoint(s, 13, 333, r0);
  case 13:
    s.tmp_0 = control___queuePollEvent__P23737_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 33; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pauseUntil__P23738.info = {"start":2224,"length":227,"line":73,"column":0,"endLine":77,"endColumn":1,"fileName":"pxt_modules/base/poll.ts","functionName":"pauseUntil","argumentNames":["condition","timeOut"]}

function pauseUntil__P23738_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pauseUntil__P23738, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control___queuePollEvent__P23737(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ev___32833 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[321]) return breakpoint(s, 5, 321, r0);
  case 5:
    r0 = pxsim_pxtcore_mkClassInstance(control_PollEvent__C27470_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_PollEvent_constructor__P27471_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1023;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1.arg2 = r0;
    r0 = pxsim.control.millis();
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.arg0;
    s.tmp_1.arg5 = s.arg1;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1.arg6 = r0;
    s.callLocIdx = 30; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.ev___32833 = (s.tmp_0);
    s.lastBrkId = 322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[322]) return breakpoint(s, 7, 322, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(globals._pollEventQueue___27473);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[323]) return breakpoint(s, 8, 323, r0);
  case 8:
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.ev___32833);
    globals._pollEventQueue___27473 = (s.tmp_2);
    s.lastBrkId = 324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[324]) return breakpoint(s, 9, 324, r0);
  case 9:
    r0 = pxsim.control.runInParallel(control_pollEvents__P27474);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[325]) return breakpoint(s, 10, 325, r0);
  case 10:
    r0 = pxsim_Array__push(globals._pollEventQueue___27473, s.ev___32833);
  case 2:
    s.lastBrkId = 326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[326]) return breakpoint(s, 11, 326, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[327]) return breakpoint(s, 12, 327, r0);
  case 12:
    s.tmp_0 = control_onEvent__P23762_mk(s);
    r0 = s.ev___32833.fields["eid"];
    s.tmp_0.arg0 = r0;
    r0 = s.ev___32833.fields["vid"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 16;
    s.callLocIdx = 31; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[328]) return breakpoint(s, 14, 328, r0);
  case 14:
    r0 = s.ev___32833.fields["eid"];
    s.tmp_0 = r0;
    r0 = s.ev___32833.fields["vid"];
    s.tmp_1 = r0;
    setupResume(s, 15);
    pxsim.control.waitForEvent(s.tmp_0, s.tmp_1);
    checkResumeConsumed();
    return;
  case 15:
    r0 = s.retval;
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___queuePollEvent__P23737.info = {"start":1262,"length":758,"line":39,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"__queuePollEvent","argumentNames":["timeOut","condition","handler"]}

function control___queuePollEvent__P23737_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___queuePollEvent__P23737, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ev___32833: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_pollEvents__P27474(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.now___32876 = undefined;
    s.i___32879 = undefined;
    s.ev___32885 = undefined;
    s.lastBrkId = 306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[306]) return breakpoint(s, 13, 306, r0);
  case 13:
  case 1:
    s.lastBrkId = 307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[307]) return breakpoint(s, 14, 307, r0);
  case 14:
    r0 = pxsim_Array__length(globals._pollEventQueue___27473);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[308]) return breakpoint(s, 15, 308, r0);
  case 15:
    r0 = pxsim.control.millis();
    s.now___32876 = (r0);
    s.lastBrkId = 309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[309]) return breakpoint(s, 16, 309, r0);
  case 16:
    s.i___32879 = (0);
    s.lastBrkId = 310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[310]) return breakpoint(s, 17, 310, r0);
  case 17:
  case 2:
    s.lastBrkId = 311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[311]) return breakpoint(s, 18, 311, r0);
  case 18:
    s.tmp_1 = r0 = s.i___32879;
    r0 = pxsim_Array__length(globals._pollEventQueue___27473);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[312]) return breakpoint(s, 19, 312, r0);
  case 19:
    r0 = pxsim_Array__getAt(globals._pollEventQueue___27473, s.i___32879);
    s.ev___32885 = (r0);
    s.lastBrkId = 313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[313]) return breakpoint(s, 20, 313, r0);
  case 20:
    s.tmp_1 = if_condition_1_mk(s);
    s.tmp_1.arg0 = s.ev___32885;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "condition"), 1);
      s.callLocIdx = 27; s.pc = 21; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["condition"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["condition"], 1); s.callLocIdx = 27; s.pc = 21; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 27; s.pc = 21; return s.tmp_1;; }
     else { s.callLocIdx = 27; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 3:
    r0 = s.ev___32885.fields["timeOut"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_2;
    { step = 5; continue; }
  case 4:
    r0 = s.ev___32885.fields["start"];
    s.tmp_5 = r0;
    r0 = (s.now___32876 - s.tmp_5);
    s.tmp_4 = r0;
    r0 = s.ev___32885.fields["timeOut"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[314]) return breakpoint(s, 22, 314, r0);
  case 22:
    r0 = s.ev___32885.fields["eid"];
    s.tmp_9 = r0;
    r0 = s.ev___32885.fields["vid"];
    s.tmp_10 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_9, s.tmp_10);
    s.lastBrkId = 315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[315]) return breakpoint(s, 23, 315, r0);
  case 23:
    r0 = s.ev___32885.fields["once"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[316]) return breakpoint(s, 24, 316, r0);
  case 24:
    s.tmp_1 = helpers_arraySplice__P23471_mk(s);
    s.tmp_1.arg0 = globals._pollEventQueue___27473;
    s.tmp_1.arg1 = s.i___32879;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 28; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[317]) return breakpoint(s, 26, 317, r0);
  case 26:
    r0 = (s.i___32879 - 1);
    s.i___32879 = (r0);
  case 7:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[318]) return breakpoint(s, 27, 318, r0);
  case 27:
    r0 = (s.i___32879 + 1);
    s.i___32879 = (r0);
    { step = 2; continue; }
  case 11:
    s.lastBrkId = 319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[319]) return breakpoint(s, 28, 319, r0);
  case 28:
    s.tmp_0 = pause__P23784_mk(s);
    s.tmp_0.arg0 = 50;
    s.callLocIdx = 29; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    { step = 1; continue; }
  case 12:
    s.lastBrkId = 320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[320]) return breakpoint(s, 30, 320, r0);
  case 30:
    globals._pollEventQueue___27473 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_pollEvents__P27474.info = {"start":618,"length":638,"line":20,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"pollEvents","argumentNames":[]}

function control_pollEvents__P27474_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pollEvents__P27474, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  now___32876: undefined,
  i___32879: undefined,
  ev___32885: undefined,
} }





function helpers_arraySplice__P23471(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___32933 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1]) return breakpoint(s, 6, 1, r0);
  case 6:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2]) return breakpoint(s, 7, 2, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3]) return breakpoint(s, 8, 3, r0);
  case 8:
    s.i___32933 = (0);
    s.lastBrkId = 4;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4]) return breakpoint(s, 9, 4, r0);
  case 9:
  case 3:
    s.lastBrkId = 5;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[5]) return breakpoint(s, 10, 5, r0);
  case 10:
    r0 = (s.i___32933 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 6;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[6]) return breakpoint(s, 11, 6, r0);
  case 11:
    r0 = pxsim_Array_.removeAt(s.arg0, s.arg1);
    s.lastBrkId = 7;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[7]) return breakpoint(s, 12, 7, r0);
  case 12:
    r0 = (s.i___32933 + 1);
    s.i___32933 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySplice__P23471.info = {"start":3642,"length":213,"line":137,"column":4,"endLine":144,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySplice","argumentNames":["arr","start","len"]}

function helpers_arraySplice__P23471_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySplice__P23471, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  i___32933: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_PollEvent_constructor__P27471(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_PollEvent__C27470_VT)) failedCast(r0);
    s.lastBrkId = 299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[299]) return breakpoint(s, 1, 299, r0);
  case 1:
    r0 = (s.arg0).fields["eid"] = (s.arg1);
    s.lastBrkId = 300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[300]) return breakpoint(s, 2, 300, r0);
  case 2:
    r0 = (s.arg0).fields["vid"] = (s.arg2);
    s.lastBrkId = 301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[301]) return breakpoint(s, 3, 301, r0);
  case 3:
    r0 = (s.arg0).fields["start"] = (s.arg3);
    s.lastBrkId = 302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[302]) return breakpoint(s, 4, 302, r0);
  case 4:
    r0 = (s.arg0).fields["timeOut"] = (s.arg4);
    s.lastBrkId = 303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[303]) return breakpoint(s, 5, 303, r0);
  case 5:
    r0 = (s.arg0).fields["condition"] = (s.arg5);
    s.lastBrkId = 304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[304]) return breakpoint(s, 6, 304, r0);
  case 6:
    r0 = (s.arg0).fields["once"] = (s.arg6);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_PollEvent_constructor__P27471.info = {"start":239,"length":316,"line":8,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/base/poll.ts","functionName":"inline","argumentNames":["this","eid","vid","start","timeOut","condition","once"]}

function control_PollEvent_constructor__P27471_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_PollEvent_constructor__P27471, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function game_onUpdate__P26080(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1970;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1970]) return breakpoint(s, 4, 1970, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1971]) return breakpoint(s, 5, 1971, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1972]) return breakpoint(s, 6, 1972, r0);
  case 6:
    s.tmp_2 = control_EventContext_registerFrameHandler__P23774_mk(s);
    s.tmp_3 = game_eventContext__P26064_mk(s);
    s.callLocIdx = 943; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 20;
    s.tmp_2.arg2 = s.arg0;
    s.callLocIdx = 944; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdate__P26080.info = {"start":405,"length":153,"line":15,"column":4,"endLine":18,"endColumn":5,"fileName":"pxt_modules/game/gameutil.ts","functionName":"onUpdate","argumentNames":["a"]}

function game_onUpdate__P26080_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdate__P26080, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function MAX_SOURCES_inline__P32527(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sz___32528 = undefined;
    s.tmp_0 = control_ramSize__P23717_mk(s);
    s.callLocIdx = 28; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.sz___32528 = (r0);
    r0 = (s.sz___32528 <= 102400);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 8;
    { step = 5; continue; }
    { step = 4; continue; }
  case 1:
    r0 = (s.sz___32528 <= 204800);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = 16;
    { step = 5; continue; }
    { step = 3; continue; }
  case 2:
    r0 = 50;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
MAX_SOURCES_inline__P32527.info = {"start":240,"length":217,"line":9,"column":25,"endLine":18,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":[]}

function MAX_SOURCES_inline__P32527_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: MAX_SOURCES_inline__P32527, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sz___32528: undefined,
} }





function particles_SprayFactory_constructor__P26249(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C26248_VT)) failedCast(r0);
    s.lastBrkId = 2393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2393]) return breakpoint(s, 1, 2393, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory_constructor__P26245_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1194; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2394]) return breakpoint(s, 3, 2394, r0);
  case 3:
    s.tmp_0 = particles_initTrig__P28203_mk(s);
    s.callLocIdx = 1195; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2395]) return breakpoint(s, 5, 2395, r0);
  case 5:
    s.tmp_0 = particles_SprayFactory_setSpeed__P26252_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1196; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2396]) return breakpoint(s, 7, 2396, r0);
  case 7:
    s.tmp_0 = particles_SprayFactory_setDirection__P26253_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    s.callLocIdx = 1197; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_constructor__P26249.info = {"start":2623,"length":218,"line":98,"column":8,"endLine":103,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","speed","centerDegrees","arcDegrees"]}

function particles_SprayFactory_constructor__P26249_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_constructor__P26249, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_initTrig__P28203(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2362]) return breakpoint(s, 3, 2362, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.cachedSin___28189);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2363]) return breakpoint(s, 4, 2363, r0);
  case 4:
    s.tmp_2 = particles_cacheSin__P26242_mk(s);
    s.tmp_2.arg0 = 100;
    s.callLocIdx = 1183; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    globals.cachedSin___28189 = (r0);
    s.lastBrkId = 2364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2364]) return breakpoint(s, 6, 2364, r0);
  case 6:
    s.tmp_0 = particles_cacheCos__P26243_mk(s);
    s.tmp_0.arg0 = 100;
    s.callLocIdx = 1184; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    globals.cachedCos___28190 = (r0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_initTrig__P28203.info = {"start":291,"length":155,"line":11,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"initTrig","argumentNames":[]}

function particles_initTrig__P28203_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_initTrig__P28203, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function particles_cacheCos__P26243(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cos___32221 = undefined;
    s.anglePerSlice___32223 = undefined;
    s.i___32229 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2373]) return breakpoint(s, 3, 2373, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.cos___32221 = (r0);
    s.lastBrkId = 2374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2374]) return breakpoint(s, 4, 2374, r0);
  case 4:
    r0 = (6.283185307179586 / s.arg0);
    s.anglePerSlice___32223 = (r0);
    s.lastBrkId = 2375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2375]) return breakpoint(s, 5, 2375, r0);
  case 5:
    s.i___32229 = (0);
    s.lastBrkId = 2376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2376]) return breakpoint(s, 6, 2376, r0);
  case 6:
  case 1:
    s.lastBrkId = 2377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2377]) return breakpoint(s, 7, 2377, r0);
  case 7:
    r0 = (s.i___32229 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2378]) return breakpoint(s, 8, 2378, r0);
  case 8:
    s.tmp_1 = r0 = s.cos___32221;
    s.tmp_3 = Fx8__P23520_mk(s);
    r0 = (s.i___32229 * s.anglePerSlice___32223);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.cos(s.tmp_4);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1186; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 2379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2379]) return breakpoint(s, 10, 2379, r0);
  case 10:
    r0 = (s.i___32229 + 1);
    s.i___32229 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2380]) return breakpoint(s, 11, 2380, r0);
  case 11:
    r0 = s.cos___32221;
    return leave(s, r0)
  default: oops()
} } }
particles_cacheCos__P26243.info = {"start":1005,"length":263,"line":35,"column":4,"endLine":42,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"cacheCos","argumentNames":["slices"]}

function particles_cacheCos__P26243_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_cacheCos__P26243, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  cos___32221: undefined,
  anglePerSlice___32223: undefined,
  i___32229: undefined,
  arg0: undefined,
} }





function particles_cacheSin__P26242(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sin___32247 = undefined;
    s.anglePerSlice___32249 = undefined;
    s.i___32255 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2365]) return breakpoint(s, 3, 2365, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.sin___32247 = (r0);
    s.lastBrkId = 2366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2366]) return breakpoint(s, 4, 2366, r0);
  case 4:
    r0 = (6.283185307179586 / s.arg0);
    s.anglePerSlice___32249 = (r0);
    s.lastBrkId = 2367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2367]) return breakpoint(s, 5, 2367, r0);
  case 5:
    s.i___32255 = (0);
    s.lastBrkId = 2368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2368]) return breakpoint(s, 6, 2368, r0);
  case 6:
  case 1:
    s.lastBrkId = 2369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2369]) return breakpoint(s, 7, 2369, r0);
  case 7:
    r0 = (s.i___32255 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2370]) return breakpoint(s, 8, 2370, r0);
  case 8:
    s.tmp_1 = r0 = s.sin___32247;
    s.tmp_3 = Fx8__P23520_mk(s);
    r0 = (s.i___32255 * s.anglePerSlice___32249);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.sin(s.tmp_4);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1185; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 2371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2371]) return breakpoint(s, 10, 2371, r0);
  case 10:
    r0 = (s.i___32255 + 1);
    s.i___32255 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2372]) return breakpoint(s, 11, 2372, r0);
  case 11:
    r0 = s.sin___32247;
    return leave(s, r0)
  default: oops()
} } }
particles_cacheSin__P26242.info = {"start":594,"length":263,"line":22,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"cacheSin","argumentNames":["slices"]}

function particles_cacheSin__P26242_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_cacheSin__P26242, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  sin___32247: undefined,
  anglePerSlice___32249: undefined,
  i___32255: undefined,
  arg0: undefined,
} }





function particles_SprayFactory_setDirection__P26253(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C26248_VT)) failedCast(r0);
    s.lastBrkId = 2404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2404]) return breakpoint(s, 1, 2404, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_4 = particles_toRadians__P28208_mk(s);
    s.tmp_5 = r0 = s.arg1;
    r0 = (s.arg2 >> 1);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 1205; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / globals.angleSlice___28202);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["minAngle"] = (s.tmp_1);
    s.lastBrkId = 2405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2405]) return breakpoint(s, 3, 2405, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_4 = particles_toRadians__P28208_mk(s);
    s.tmp_4.arg0 = s.arg2;
    s.callLocIdx = 1206; s.pc = 4; return s.tmp_4;
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / globals.angleSlice___28202);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spread"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_setDirection__P26253.info = {"start":3424,"length":228,"line":123,"column":8,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"setDirection","argumentNames":["this","centerDegrees","arcDegrees"]}

function particles_SprayFactory_setDirection__P26253_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_setDirection__P26253, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function particles_toRadians__P28208(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2381]) return breakpoint(s, 3, 2381, r0);
  case 3:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2382]) return breakpoint(s, 4, 2382, r0);
  case 4:
    s.tmp_3 = Math_abs__P23499_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1187; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 360);
    s.tmp_1 = r0;
    r0 = (360 - s.tmp_1);
    s.arg0 = (r0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2383]) return breakpoint(s, 6, 2383, r0);
  case 6:
    r0 = (s.arg0 % 360);
    s.arg0 = (r0);
  case 2:
    s.lastBrkId = 2384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2384]) return breakpoint(s, 7, 2384, r0);
  case 7:
    r0 = (s.arg0 * 0.017453292519943295);
    return leave(s, r0)
  default: oops()
} } }
particles_toRadians__P28208.info = {"start":1307,"length":206,"line":45,"column":4,"endLine":52,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"toRadians","argumentNames":["degrees"]}

function particles_toRadians__P28208_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_toRadians__P28208, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Math_abs__P23499(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[197]) return breakpoint(s, 3, 197, r0);
  case 3:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (0 - s.arg0);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Math_abs__P23499.info = {"start":16095,"length":77,"line":538,"column":4,"endLine":540,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"abs","argumentNames":["x"]}

function Math_abs__P23499_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_abs__P23499, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function particles_ParticleFactory_constructor__P26245(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C26244_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_constructor__P26245.info = {"start":1617,"length":78,"line":59,"column":8,"endLine":61,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this"]}

function particles_ParticleFactory_constructor__P26245_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_constructor__P26245, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ParticleSource_setFactory__P26227(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2314]) return breakpoint(s, 3, 2314, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2315]) return breakpoint(s, 4, 2315, r0);
  case 4:
    r0 = (s.arg0).fields["_factory"] = (s.arg1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setFactory__P26227.info = {"start":8124,"length":114,"line":272,"column":8,"endLine":275,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setFactory","argumentNames":["this","factory"]}

function particles_ParticleSource_setFactory__P26227_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setFactory__P26227, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_setRate__P26225(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2312]) return breakpoint(s, 1, 2312, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = (1000 / s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["period"] = (s.tmp_1);
    s.lastBrkId = 2313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2313]) return breakpoint(s, 2, 2313, r0);
  case 2:
    r0 = (s.arg0).fields["timer"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setRate__P26225.info = {"start":7802,"length":139,"line":259,"column":8,"endLine":262,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setRate","argumentNames":["this","particlesPerSecond"]}

function particles_ParticleSource_setRate__P26225_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setRate__P26225, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_setAnchor__P26224(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2311]) return breakpoint(s, 1, 2311, r0);
  case 1:
    r0 = (s.arg0).fields["anchor"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setAnchor__P26224.info = {"start":7594,"length":79,"line":251,"column":8,"endLine":253,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setAnchor","argumentNames":["this","anchor"]}

function particles_ParticleSource_setAnchor__P26224_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setAnchor__P26224, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_clear__P26223(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2310]) return breakpoint(s, 1, 2310, r0);
  case 1:
    r0 = (s.arg0).fields["head"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_clear__P26223.info = {"start":7424,"length":54,"line":243,"column":8,"endLine":245,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"clear","argumentNames":["this"]}

function particles_ParticleSource_clear__P26223_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_clear__P26223, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ParticleSource_destroy__P26222(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2307]) return breakpoint(s, 1, 2307, r0);
  case 1:
    s.tmp_0 = particles_ParticleSource_enabled__P26221_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1144; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2308]) return breakpoint(s, 3, 2308, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["pFlags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
    s.lastBrkId = 2309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2309]) return breakpoint(s, 4, 2309, r0);
  case 4:
    s.tmp_0 = particles_ParticleSource__prune__P26216_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1145; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_destroy__P26222.info = {"start":7094,"length":240,"line":233,"column":8,"endLine":238,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"destroy","argumentNames":["this"]}

function particles_ParticleSource_destroy__P26222_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_destroy__P26222, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_enabled__P26221(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2304]) return breakpoint(s, 5, 2304, r0);
  case 5:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = particles_ParticleSource_enabled__P26220_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1143; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2305;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2305]) return breakpoint(s, 7, 2305, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 1);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 ^ 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = (s.arg0).fields["pFlags"] = (s.tmp_6);
    s.lastBrkId = 2306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2306]) return breakpoint(s, 8, 2306, r0);
  case 8:
    r0 = (s.arg0).fields["timer"] = (0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_enabled__P26221.info = {"start":6816,"length":214,"line":223,"column":8,"endLine":228,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"enabled","argumentNames":["this","v"]}

function particles_ParticleSource_enabled__P26221_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_enabled__P26221, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_enabled__P26220(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2303]) return breakpoint(s, 1, 2303, r0);
  case 1:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
particles_ParticleSource_enabled__P26220.info = {"start":6622,"length":76,"line":216,"column":8,"endLine":218,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"enabled","argumentNames":["this"]}
particles_ParticleSource_enabled__P26220.isGetter = true;

function particles_ParticleSource_enabled__P26220_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_enabled__P26220, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_setAcceleration__P26217(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2298]) return breakpoint(s, 1, 2298, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 1141; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ax"] = (s.tmp_1);
    s.lastBrkId = 2299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2299]) return breakpoint(s, 3, 2299, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1142; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ay"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setAcceleration__P26217.info = {"start":6026,"length":113,"line":194,"column":8,"endLine":197,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setAcceleration","argumentNames":["this","ax","ay"]}

function particles_ParticleSource_setAcceleration__P26217_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setAcceleration__P26217, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function sprites_BaseSprite_constructor__P25266(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C25264_VT)) failedCast(r0);
    s.lastBrkId = 724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[724]) return breakpoint(s, 1, 724, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_z__P25269_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 134; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[725]) return breakpoint(s, 3, 725, r0);
  case 3:
    s.tmp_0 = scene_Scene_addSprite__P25973_mk(s);
    s.tmp_1 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 135; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 136; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite_constructor__P25266.info = {"start":344,"length":170,"line":15,"column":8,"endLine":20,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"inline","argumentNames":["this","z"]}

function sprites_BaseSprite_constructor__P25266_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_constructor__P25266, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Scene_addSprite__P25973(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C25947_VT)) failedCast(r0);
    s.lastBrkId = 1895;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1895]) return breakpoint(s, 1, 1895, r0);
  case 1:
    r0 = s.arg0.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.lastBrkId = 1896;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1896]) return breakpoint(s, 2, 1896, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["spriteNextId"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spriteNextId"] = (s.tmp_1);
    s.tmp_3 = if_id_2_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.tmp_3.arg1 = s.tmp_2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "id", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/id"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["id"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 913; s.pc = 3; return s.tmp_3; }
    }
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_addSprite__P25973.info = {"start":6969,"length":128,"line":195,"column":8,"endLine":198,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function scene_Scene_addSprite__P25973_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_addSprite__P25973, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite_z__P25269(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C25264_VT)) failedCast(r0);
    s.lastBrkId = 728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[728]) return breakpoint(s, 3, 728, r0);
  case 3:
    r0 = s.arg0.fields["_z"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[729]) return breakpoint(s, 4, 729, r0);
  case 4:
    r0 = (s.arg0).fields["_z"] = (s.arg1);
    s.lastBrkId = 730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[730]) return breakpoint(s, 5, 730, r0);
  case 5:
    s.tmp_1 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 137; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_2);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite_z__P25269.info = {"start":656,"length":174,"line":30,"column":8,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"z","argumentNames":["this","v"]}

function sprites_BaseSprite_z__P25269_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_z__P25269, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite_z__P25268(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C25264_VT)) failedCast(r0);
    s.lastBrkId = 727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[727]) return breakpoint(s, 1, 727, r0);
  case 1:
    r0 = s.arg0.fields["_z"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_BaseSprite_z__P25268.info = {"start":591,"length":55,"line":26,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"z","argumentNames":["this"]}
sprites_BaseSprite_z__P25268.isGetter = true;

function sprites_BaseSprite_z__P25268_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_z__P25268, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function helpers_arrayShift__P23473(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 8;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[8]) return breakpoint(s, 1, 8, r0);
  case 1:
    r0 = pxsim_Array_.removeAt(s.arg0, 0);
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayShift__P23473.info = {"start":4045,"length":82,"line":153,"column":4,"endLine":155,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayShift","argumentNames":["arr"]}

function helpers_arrayShift__P23473_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayShift__P23473, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_SprayFactory_setSpeed__P26252(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C26248_VT)) failedCast(r0);
    s.lastBrkId = 2403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2403]) return breakpoint(s, 1, 2403, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 1204; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["speed"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_setSpeed__P26252.info = {"start":3322,"length":92,"line":119,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"setSpeed","argumentNames":["this","pixelsPerSecond"]}

function particles_SprayFactory_setSpeed__P26252_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_setSpeed__P26252, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ConfettiFactory_constructor__P26276(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.confetti___33212 = undefined;
    s.i___33228 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ConfettiFactory__C26275_VT)) failedCast(r0);
    s.lastBrkId = 2431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2431]) return breakpoint(s, 3, 2431, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim.image.ofBuffer(_hex33215);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim.image.ofBuffer(_hex33217);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_2);
    r0 = pxsim.image.ofBuffer(_hex33219);
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_3);
    r0 = pxsim.image.ofBuffer(_hex33221);
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_4);
    r0 = pxsim.image.ofBuffer(_hex33223);
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_5);
    s.confetti___33212 = (s.tmp_0);
    s.lastBrkId = 2432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2432]) return breakpoint(s, 4, 2432, r0);
  case 4:
    s.tmp_0 = particles_ShapeFactory_constructor__P26271_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    r0 = pxsim_Array__getAt(s.confetti___33212, 0);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1229; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2433]) return breakpoint(s, 6, 2433, r0);
  case 6:
    s.i___33228 = (1);
    s.lastBrkId = 2434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2434]) return breakpoint(s, 7, 2434, r0);
  case 7:
  case 1:
    s.lastBrkId = 2435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2435]) return breakpoint(s, 8, 2435, r0);
  case 8:
    s.tmp_1 = r0 = s.i___33228;
    r0 = pxsim_Array__length(s.confetti___33212);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2436]) return breakpoint(s, 9, 2436, r0);
  case 9:
    s.tmp_3 = particles_ShapeFactory_addShape__P26272_mk(s);
    s.tmp_3.arg0 = s.arg0;
    r0 = pxsim_Array__getAt(s.confetti___33212, s.i___33228);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 1230; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2437]) return breakpoint(s, 11, 2437, r0);
  case 11:
    r0 = (s.i___33228 + 1);
    s.i___33228 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2438]) return breakpoint(s, 12, 2438, r0);
  case 12:
    r0 = (s.arg0).fields["minLifespan"] = (1000);
    s.lastBrkId = 2439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2439]) return breakpoint(s, 13, 2439, r0);
  case 13:
    r0 = (s.arg0).fields["maxLifespan"] = (4500);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ConfettiFactory_constructor__P26276.info = {"start":7755,"length":706,"line":247,"column":8,"endLine":274,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange"]}

function particles_ConfettiFactory_constructor__P26276_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ConfettiFactory_constructor__P26276, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  confetti___33212: undefined,
  i___33228: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }

const _hex33215 = pxsim.BufferMethods.createBufferFromHex("87040100010000000f000000")
const _hex33217 = pxsim.BufferMethods.createBufferFromHex("8704010002000000ff000000")
const _hex33219 = pxsim.BufferMethods.createBufferFromHex("87040200010000000f0000000f000000")
const _hex33221 = pxsim.BufferMethods.createBufferFromHex("8704020002000000ff0000000f000000")
const _hex33223 = pxsim.BufferMethods.createBufferFromHex("87040200020000000f000000ff000000")




function particles_ShapeFactory_addShape__P26272(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C26270_VT)) failedCast(r0);
    s.lastBrkId = 2423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2423]) return breakpoint(s, 3, 2423, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2424]) return breakpoint(s, 4, 2424, r0);
  case 4:
    r0 = s.arg0.fields["sources"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_addShape__P26272.info = {"start":7079,"length":83,"line":225,"column":8,"endLine":227,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"addShape","argumentNames":["this","shape"]}

function particles_ShapeFactory_addShape__P26272_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_addShape__P26272, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ShapeFactory_constructor__P26271(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C26270_VT)) failedCast(r0);
    s.lastBrkId = 2419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2419]) return breakpoint(s, 1, 2419, r0);
  case 1:
    s.tmp_0 = particles_AreaFactory_constructor__P26259_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = undefined;
    s.tmp_0.arg4 = undefined;
    s.callLocIdx = 1219; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2420]) return breakpoint(s, 3, 2420, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg3);
    r0 = (s.arg0).fields["sources"] = (s.tmp_0);
    s.lastBrkId = 2421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2421]) return breakpoint(s, 4, 2421, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = pxsim_ImageMethods.width(s.arg3);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1220; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ox"] = (s.tmp_1);
    s.lastBrkId = 2422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2422]) return breakpoint(s, 6, 2422, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = pxsim_ImageMethods.height(s.arg3);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1221; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["oy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_constructor__P26271.info = {"start":6668,"length":285,"line":212,"column":8,"endLine":219,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange","source"]}

function particles_ShapeFactory_constructor__P26271_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_constructor__P26271, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_AreaFactory_constructor__P26259(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C26254_VT)) failedCast(r0);
    s.lastBrkId = 2406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2406]) return breakpoint(s, 5, 2406, r0);
  case 5:
    s.tmp_0 = particles_SprayFactory_constructor__P26249_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 40;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 90;
    s.callLocIdx = 1207; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2407]) return breakpoint(s, 7, 2407, r0);
  case 7:
    r0 = (s.arg0).fields["xRange"] = (s.arg1);
    s.lastBrkId = 2408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2408]) return breakpoint(s, 8, 2408, r0);
  case 8:
    r0 = (s.arg0).fields["yRange"] = (s.arg2);
    s.lastBrkId = 2409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2409]) return breakpoint(s, 9, 2409, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 1; continue; }
    r0 = s.arg3;
    { step = 2; continue; }
  case 1:
    r0 = 150;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["minLifespan"] = (s.tmp_0);
    s.lastBrkId = 2410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2410]) return breakpoint(s, 10, 2410, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    if (!r0) { step = 3; continue; }
    r0 = s.arg4;
    { step = 4; continue; }
  case 3:
    r0 = 850;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["maxLifespan"] = (s.tmp_0);
    s.lastBrkId = 2411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2411]) return breakpoint(s, 11, 2411, r0);
  case 11:
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C26116_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P26118_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1208; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    r0 = (s.arg0).fields["galois"] = (s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_constructor__P26259.info = {"start":3950,"length":374,"line":139,"column":8,"endLine":146,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange","minLifespan","maxLifespan"]}

function particles_AreaFactory_constructor__P26259_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_constructor__P26259, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function effects_ScreenEffect_constructor__P26324(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ScreenEffect__C26323_VT)) failedCast(r0);
    s.lastBrkId = 2453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2453]) return breakpoint(s, 1, 2453, r0);
  case 1:
    s.tmp_0 = effects_ParticleEffect_constructor__P26320_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = s.arg4;
    s.callLocIdx = 1236; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2454]) return breakpoint(s, 3, 2454, r0);
  case 3:
    r0 = (s.arg0).fields["sceneDefaultRate"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ScreenEffect_constructor__P26324.info = {"start":2911,"length":332,"line":81,"column":8,"endLine":85,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this","anchorDefault","sceneDefault","defaultLifespan","sourceFactory"]}

function effects_ScreenEffect_constructor__P26324_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ScreenEffect_constructor__P26324, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function effects_ParticleEffect_constructor__P26320(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C26319_VT)) failedCast(r0);
    s.lastBrkId = 2440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2440]) return breakpoint(s, 1, 2440, r0);
  case 1:
    r0 = (s.arg0).fields["sourceFactory"] = (s.arg3);
    s.lastBrkId = 2441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2441]) return breakpoint(s, 2, 2441, r0);
  case 2:
    r0 = (s.arg0).fields["defaultRate"] = (s.arg1);
    s.lastBrkId = 2442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2442]) return breakpoint(s, 3, 2442, r0);
  case 3:
    r0 = (s.arg0).fields["defaultLifespan"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_constructor__P26320.info = {"start":384,"length":364,"line":13,"column":8,"endLine":18,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this","defaultParticlesPerSecond","defaultLifespan","sourceFactory"]}

function effects_ParticleEffect_constructor__P26320_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_constructor__P26320, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Scene_init__P25970(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C25947_VT)) failedCast(r0);
    s.lastBrkId = 1862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1862]) return breakpoint(s, 4, 1862, r0);
  case 4:
    r0 = s.arg0.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1863;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1863]) return breakpoint(s, 5, 1863, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1864;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1864]) return breakpoint(s, 6, 1864, r0);
  case 6:
    s.tmp_1 = power_poke__P25105_mk(s);
    s.callLocIdx = 893; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1865;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1865]) return breakpoint(s, 8, 1865, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["allSprites"] = (s.tmp_1);
    s.lastBrkId = 1866;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1866]) return breakpoint(s, 9, 1866, r0);
  case 9:
    r0 = (s.arg0).fields["spriteNextId"] = (0);
    s.lastBrkId = 1867;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1867]) return breakpoint(s, 10, 1867, r0);
  case 10:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P33347);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P23774_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 8;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 896; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 1871;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1871]) return breakpoint(s, 12, 1871, r0);
  case 12:
    s.tmp_0 = control_EventContext_registerFrameHandler__P23774_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 13;
    s.tmp_0.arg2 = controller__moveSprites__P25303;
    s.callLocIdx = 897; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 1872;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1872]) return breakpoint(s, 14, 1872, r0);
  case 14:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P33370);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P23774_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 15;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 899; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 1875;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1875]) return breakpoint(s, 16, 1875, r0);
  case 16:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P33383);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P23774_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 55;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 903; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 1881;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1881]) return breakpoint(s, 18, 1881, r0);
  case 18:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P33404);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P23774_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 90;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 905; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 1884;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1884]) return breakpoint(s, 20, 1884, r0);
  case 20:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P33412);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P23774_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 150;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 909; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 1891;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1891]) return breakpoint(s, 22, 1891, r0);
  case 22:
    s.tmp_0 = control_EventContext_registerFrameHandler__P23774_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 200;
    s.tmp_0.arg2 = control___screen_update__P25165;
    s.callLocIdx = 910; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.lastBrkId = 1892;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1892]) return breakpoint(s, 24, 1892, r0);
  case 24:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P33441);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_1.arg0 = globals.scene_Scene_initializers___25968;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 912; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init__P25970.info = {"start":4278,"length":2477,"line":124,"column":8,"endLine":182,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"init","argumentNames":["this"]}

function scene_Scene_init__P25970_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init__P25970, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function scene_Scene_init_inline__P33347(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1868;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1868]) return breakpoint(s, 1, 1868, r0);
  case 1:
    s.tmp_0 = r0 = s.caps[0];
    r0 = s.tmp_0.fields["_millis"];
    s.tmp_2 = r0;
    r0 = s.caps[0].fields["eventContext"];
    r0 = r0.fields["deltaTimeMillis"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_millis"] = (s.tmp_1);
    s.lastBrkId = 1869;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1869]) return breakpoint(s, 2, 1869, r0);
  case 2:
    s.lastBrkId = 1870;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1870]) return breakpoint(s, 3, 1870, r0);
  case 3:
    s.tmp_0 = controller___update__P25331_mk(s);
    s.tmp_1 = control_EventContext_deltaTime__P23771_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 894; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 895; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P33347.info = {"start":4568,"length":217,"line":131,"column":72,"endLine":135,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P33347_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P33347, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_Scene_init_inline__P33370(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1873;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1873]) return breakpoint(s, 1, 1873, r0);
  case 1:
    s.lastBrkId = 1874;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1874]) return breakpoint(s, 2, 1874, r0);
  case 2:
    s.tmp_0 = PhysicsEngine__C25666_v4_2_mk(s);
    r0 = s.caps[0].fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = control_EventContext_deltaTime__P23771_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 898; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C25666_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.move;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P33370.info = {"start":5080,"length":159,"line":140,"column":69,"endLine":143,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P33370_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P33370, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_Scene_init_inline__P33383(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dt___33384 = undefined;
    s.s___33392 = undefined;
    s.unnamed386___U2 = undefined;
    s.unnamed387___U3 = undefined;
    s.lastBrkId = 1876;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1876]) return breakpoint(s, 3, 1876, r0);
  case 3:
    s.tmp_0 = control_EventContext_deltaTime__P23771_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 900; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.dt___33384 = (r0);
    s.lastBrkId = 1877;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1877]) return breakpoint(s, 5, 1877, r0);
  case 5:
    s.tmp_0 = scene_Camera_update__P25904_mk(s);
    r0 = s.caps[0].fields["camera"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 901; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 1878;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1878]) return breakpoint(s, 7, 1878, r0);
  case 7:
    s.s___33392 = (undefined);
    r0 = s.caps[0].fields["allSprites"];
    s.unnamed386___U2 = (r0);
    s.unnamed387___U3 = (0);
    s.lastBrkId = 1879;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1879]) return breakpoint(s, 8, 1879, r0);
  case 8:
  case 1:
    s.tmp_0 = r0 = s.unnamed387___U3;
    r0 = pxsim_Array__length(s.unnamed386___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed386___U2, s.unnamed387___U3);
    s.s___33392 = (r0);
    s.lastBrkId = 1880;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1880]) return breakpoint(s, 9, 1880, r0);
  case 9:
    s.tmp_2 = if___update_3_mk(s);
    s.tmp_2.arg0 = s.s___33392;
    r0 = s.caps[0].fields["camera"];
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = s.dt___33384;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "__update"), 3);
      s.callLocIdx = 902; s.pc = 10; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["__update"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["__update"], 3); s.callLocIdx = 902; s.pc = 10; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 902; s.pc = 10; return s.tmp_2;; }
     else { s.callLocIdx = 902; s.pc = 10; return s.tmp_2; }
    }
  case 10:
    r0 = s.retval;
    r0 = (s.unnamed387___U3 + 1);
    s.unnamed387___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed386___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P33383.info = {"start":5428,"length":214,"line":149,"column":79,"endLine":155,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P33383_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P33383, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  dt___33384: undefined,
  s___33392: undefined,
  unnamed386___U2: undefined,
  unnamed387___U3: undefined,
} }





function scene_Scene_init_inline__P33404(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1882;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1882]) return breakpoint(s, 1, 1882, r0);
  case 1:
    s.lastBrkId = 1883;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1883]) return breakpoint(s, 2, 1883, r0);
  case 2:
    s.tmp_0 = scene_Scene_render__P25975_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 904; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P33404.info = {"start":5783,"length":109,"line":160,"column":76,"endLine":163,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P33404_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P33404, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_Scene_init_inline__P33412(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1885;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1885]) return breakpoint(s, 7, 1885, r0);
  case 7:
    s.tmp_0 = r0 = globals.stats___26058;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.control_EventContext_onStats___23769;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1886;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1886]) return breakpoint(s, 8, 1886, r0);
  case 8:
    s.tmp_2 = lambda_2_mk(s);
    s.tmp_2.argL = globals.control_EventContext_onStats___23769;
    if ((globals.control_EventContext_lastStats___23768) && (globals.control_EventContext_lastStats___23768).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(globals.control_EventContext_lastStats___23768);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.control_EventContext_lastStats___23768) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.caps[0].fields["allSprites"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__length(s.tmp_8);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(" sprites:", s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2.arg0 = r0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 906; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1887;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1887]) return breakpoint(s, 13, 1887, r0);
  case 13:
    r0 = pxsim_numops_toBoolDecr(globals.debug___26057);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1888;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1888]) return breakpoint(s, 14, 1888, r0);
  case 14:
    s.tmp_0 = PhysicsEngine__C25666_v3_1_mk(s);
    r0 = s.caps[0].fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C25666_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.draw;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1889;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1889]) return breakpoint(s, 16, 1889, r0);
  case 16:
    s.tmp_0 = game_consoleOverlay_draw__P26184_mk(s);
    s.callLocIdx = 907; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 1890;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1890]) return breakpoint(s, 18, 1890, r0);
  case 18:
    s.tmp_0 = power_checkDeepSleep__P25106_mk(s);
    s.callLocIdx = 908; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P33412.info = {"start":6009,"length":504,"line":165,"column":80,"endLine":177,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P33412_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P33412, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
} }





function scene_Scene_init_inline__P33441(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 911; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P33441.info = {"start":6731,"length":12,"line":181,"column":39,"endLine":181,"endColumn":51,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["f"]}

function scene_Scene_init_inline__P33441_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P33441, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_consoleOverlay_draw__P26184(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.height___33490 = undefined;
    s.top___33495 = undefined;
    s.i___33501 = undefined;
    s.t___33514 = undefined;
    s.tOff___33521 = undefined;
    s.tab___33523 = undefined;
    s.unnamed390___U6 = undefined;
    s.unnamed391___U7 = undefined;
    s.padding___33525 = undefined;
    s.lastBrkId = 2200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2200]) return breakpoint(s, 14, 2200, r0);
  case 14:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___28137);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = scene_systemMenu_isVisible__P26165_mk(s);
    s.callLocIdx = 1111; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2201]) return breakpoint(s, 16, 2201, r0);
  case 16:
    { step = 13; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2202]) return breakpoint(s, 17, 2202, r0);
  case 17:
    s.tmp_5 = if_charHeight_1_mk(s);
    s.tmp_5.arg0 = globals.consoleFont___28145;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "charHeight");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["charHeight"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["charHeight"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1112; s.pc = 18; return s.tmp_5; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.height___33490 = (r0);
    s.lastBrkId = 2203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2203]) return breakpoint(s, 19, 2203, r0);
  case 19:
    r0 = pxsim_numops_toBoolDecr(globals.stats___26058);
    if (!r0) { step = 5; continue; }
    r0 = s.height___33490;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (2 + s.tmp_0);
    s.top___33495 = (r0);
    s.lastBrkId = 2204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2204]) return breakpoint(s, 20, 2204, r0);
  case 20:
    s.i___33501 = (0);
    s.lastBrkId = 2205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2205]) return breakpoint(s, 21, 2205, r0);
  case 21:
  case 7:
    s.lastBrkId = 2206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2206]) return breakpoint(s, 22, 2206, r0);
  case 22:
    s.tmp_1 = r0 = s.i___33501;
    r0 = pxsim_Array__length(globals.consoleStrings___28137);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 2207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2207]) return breakpoint(s, 23, 2207, r0);
  case 23:
    r0 = pxsim_Array__getAt(globals.consoleStrings___28137, s.i___33501);
    s.tmp_5 = r0;
    r0 = pxsim_String_.indexOf(s.tmp_5, "\t", undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >= 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 2208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2208]) return breakpoint(s, 24, 2208, r0);
  case 24:
    s.tmp_6 = helpers_stringSplit__P23493_mk(s);
    r0 = pxsim_Array__getAt(globals.consoleStrings___28137, s.i___33501);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = "\t";
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1113; s.pc = 25; return s.tmp_6;
  case 25:
    r0 = s.retval;
    s.t___33514 = (r0);
    s.lastBrkId = 2209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2209]) return breakpoint(s, 26, 2209, r0);
  case 26:
    s.tOff___33521 = (0);
    s.lastBrkId = 2210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2210]) return breakpoint(s, 27, 2210, r0);
  case 27:
    s.tab___33523 = (undefined);
    s.unnamed390___U6 = (s.t___33514);
    s.unnamed391___U7 = (0);
    s.lastBrkId = 2211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2211]) return breakpoint(s, 28, 2211, r0);
  case 28:
  case 8:
    s.tmp_0 = r0 = s.unnamed391___U7;
    r0 = pxsim_Array__length(s.unnamed390___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_Array__getAt(s.unnamed390___U6, s.unnamed391___U7);
    s.tab___33523 = (r0);
    s.lastBrkId = 2212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2212]) return breakpoint(s, 29, 2212, r0);
  case 29:
    s.tmp_2 = r0 = globals.tabSize___28139;
    s.tmp_5 = r0 = s.tOff___33521;
    r0 = pxsim_String_.length(s.tab___33523);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 % globals.tabSize___28139);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.padding___33525 = (r0);
    s.lastBrkId = 2213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2213]) return breakpoint(s, 30, 2213, r0);
  case 30:
    s.tmp_0 = helpers_imagePrint__P25162_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    s.tmp_0.arg1 = s.tab___33523;
    s.tmp_2 = r0 = s.tOff___33521;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.consoleFont___28145;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1114; s.pc = 32; return s.tmp_4; }
    }
  case 32:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (4 + s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.tmp_5 = r0 = s.top___33495;
    r0 = (s.i___33501 * s.height___33490);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = globals.consoleColor___28136;
    s.tmp_0.arg5 = globals.consoleFont___28145;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1115; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 2214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2214]) return breakpoint(s, 33, 2214, r0);
  case 33:
    s.tmp_0 = r0 = s.tOff___33521;
    r0 = pxsim_String_.length(s.tab___33523);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.padding___33525);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.tOff___33521 = (r0);
    r0 = (s.unnamed391___U7 + 1);
    s.unnamed391___U7 = (r0);
    { step = 8; continue; }
  case 9:
    s.unnamed390___U6 = (undefined);
    { step = 11; continue; }
  case 10:
    s.lastBrkId = 2215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2215]) return breakpoint(s, 34, 2215, r0);
  case 34:
    s.tmp_0 = helpers_imagePrint__P25162_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    r0 = pxsim_Array__getAt(globals.consoleStrings___28137, s.i___33501);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 4;
    s.tmp_1 = r0 = s.top___33495;
    r0 = (s.i___33501 * s.height___33490);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = globals.consoleColor___28136;
    s.tmp_0.arg5 = globals.consoleFont___28145;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1116; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
  case 11:
    s.lastBrkId = 2216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2216]) return breakpoint(s, 36, 2216, r0);
  case 36:
    r0 = (s.i___33501 + 1);
    s.i___33501 = (r0);
    { step = 7; continue; }
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_draw__P26184.info = {"start":1364,"length":859,"line":44,"column":4,"endLine":61,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"draw","argumentNames":[]}

function game_consoleOverlay_draw__P26184_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_draw__P26184, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  height___33490: undefined,
  top___33495: undefined,
  i___33501: undefined,
  t___33514: undefined,
  tOff___33521: undefined,
  tab___33523: undefined,
  unnamed390___U6: undefined,
  unnamed391___U7: undefined,
  padding___33525: undefined,
} }





function scene_systemMenu_isVisible__P26165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2158]) return breakpoint(s, 1, 2158, r0);
  case 1:
    r0 = pxsim_numops_toBoolDecr(globals.instance___28091);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_isVisible__P26165.info = {"start":13170,"length":62,"line":395,"column":4,"endLine":397,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"isVisible","argumentNames":[]}

function scene_systemMenu_isVisible__P26165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_isVisible__P26165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function helpers_imagePrint__P25162(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x0___33597 = undefined;
    s.cp___33599 = undefined;
    s.mult___33600 = undefined;
    s.dataW___33605 = undefined;
    s.dataH___33611 = undefined;
    s.byteHeight___33617 = undefined;
    s.charSize___33623 = undefined;
    s.dataSize___33627 = undefined;
    s.fontdata___33631 = undefined;
    s.lastchar___33634 = undefined;
    s.imgBuf___33641 = undefined;
    s.xOffset___33665 = undefined;
    s.yOffset___33666 = undefined;
    s.ch___33681 = undefined;
    s.l___33700 = undefined;
    s.r___33701 = undefined;
    s.off___33703 = undefined;
    s.guess___33704 = undefined;
    s.m___33723 = undefined;
    s.v___33732 = undefined;
    s.i___33788 = undefined;
    s.j___33793 = undefined;
    s.mask___33794 = undefined;
    s.c___33795 = undefined;
    s.n___33812 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[583]) return breakpoint(s, 39, 583, r0);
  case 39:
    r0 = (s.arg2 | 0);
    s.arg2 = (r0);
    s.lastBrkId = 584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[584]) return breakpoint(s, 40, 584, r0);
  case 40:
    r0 = (s.arg3 | 0);
    s.arg3 = (r0);
    s.lastBrkId = 585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[585]) return breakpoint(s, 41, 585, r0);
  case 41:
    r0 = pxsim_numops_toBoolDecr(s.arg5);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[586]) return breakpoint(s, 42, 586, r0);
  case 42:
    s.tmp_2 = image_getFontForText__P25149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 99; s.pc = 43; return s.tmp_2;
  case 43:
    r0 = s.retval;
    s.arg5 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[587]) return breakpoint(s, 44, 587, r0);
  case 44:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[588]) return breakpoint(s, 45, 588, r0);
  case 45:
    s.arg4 = (1);
  case 3:
  case 4:
    s.lastBrkId = 589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[589]) return breakpoint(s, 46, 589, r0);
  case 46:
    s.x0___33597 = (s.arg2);
    s.lastBrkId = 590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[590]) return breakpoint(s, 47, 590, r0);
  case 47:
    s.cp___33599 = (0);
    s.lastBrkId = 591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[591]) return breakpoint(s, 48, 591, r0);
  case 48:
    s.tmp_1 = if_multiplier_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "multiplier");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["multiplier"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["multiplier"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 100; s.pc = 49; return s.tmp_1; }
    }
  case 49:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = if_multiplier_1_mk(s);
    s.tmp_2.arg0 = s.arg5;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "multiplier");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["multiplier"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["multiplier"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 101; s.pc = 50; return s.tmp_2; }
    }
  case 50:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    r0 = 1;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.mult___33600 = (s.tmp_3);
    s.lastBrkId = 592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[592]) return breakpoint(s, 51, 592, r0);
  case 51:
    s.tmp_1 = if_charWidth_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charWidth");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charWidth"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charWidth"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 102; s.pc = 52; return s.tmp_1; }
    }
  case 52:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___33600);
    s.dataW___33605 = (r0);
    s.lastBrkId = 593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[593]) return breakpoint(s, 53, 593, r0);
  case 53:
    s.tmp_1 = if_charHeight_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 103; s.pc = 54; return s.tmp_1; }
    }
  case 54:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___33600);
    s.dataH___33611 = (r0);
    s.lastBrkId = 594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[594]) return breakpoint(s, 55, 594, r0);
  case 55:
    r0 = (s.dataH___33611 + 7);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 3);
    s.byteHeight___33617 = (r0);
    s.lastBrkId = 595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[595]) return breakpoint(s, 56, 595, r0);
  case 56:
    r0 = (s.byteHeight___33617 * s.dataW___33605);
    s.charSize___33623 = (r0);
    s.lastBrkId = 596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[596]) return breakpoint(s, 57, 596, r0);
  case 57:
    r0 = (2 + s.charSize___33623);
    s.dataSize___33627 = (r0);
    s.lastBrkId = 597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[597]) return breakpoint(s, 58, 597, r0);
  case 58:
    s.tmp_0 = if_data_1_mk(s);
    s.tmp_0.arg0 = s.arg5;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "data");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["data"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["data"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 104; s.pc = 59; return s.tmp_0; }
    }
  case 59:
    r0 = s.retval;
    s.fontdata___33631 = (r0);
    s.lastBrkId = 598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[598]) return breakpoint(s, 60, 598, r0);
  case 60:
    r0 = pxsim.BufferMethods.length(s.fontdata___33631);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, s.dataSize___33627);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.lastchar___33634 = (r0);
    s.lastBrkId = 599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[599]) return breakpoint(s, 61, 599, r0);
  case 61:
    r0 = (s.mult___33600 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 600;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[600]) return breakpoint(s, 62, 600, r0);
  case 62:
    r0 = (8 + s.charSize___33623);
    s.tmp_1 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_1);
    s.imgBuf___33641 = (r0);
    s.lastBrkId = 601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[601]) return breakpoint(s, 63, 601, r0);
  case 63:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___33641, 0, 135);
    s.lastBrkId = 602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[602]) return breakpoint(s, 64, 602, r0);
  case 64:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___33641, 1, 1);
    s.lastBrkId = 603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[603]) return breakpoint(s, 65, 603, r0);
  case 65:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___33641, 2, s.dataW___33605);
    s.lastBrkId = 604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[604]) return breakpoint(s, 66, 604, r0);
  case 66:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___33641, 4, s.dataH___33611);
  case 7:
  case 8:
    s.lastBrkId = 605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[605]) return breakpoint(s, 67, 605, r0);
  case 67:
  case 9:
    s.lastBrkId = 606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[606]) return breakpoint(s, 68, 606, r0);
  case 68:
    s.tmp_1 = r0 = s.cp___33599;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 38; continue; }
    s.lastBrkId = 607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[607]) return breakpoint(s, 69, 607, r0);
  case 69:
    s.xOffset___33665 = (0);
    s.lastBrkId = 608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[608]) return breakpoint(s, 70, 608, r0);
  case 70:
    s.yOffset___33666 = (0);
    s.lastBrkId = 609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[609]) return breakpoint(s, 71, 609, r0);
  case 71:
    s.tmp_0 = r0 = s.arg6;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_1 = r0 = s.cp___33599;
    r0 = pxsim_Array__length(s.arg6);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[610]) return breakpoint(s, 72, 610, r0);
  case 72:
    s.tmp_4 = if_xOffset_1_mk(s);
    r0 = pxsim_Array__getAt(s.arg6, s.cp___33599);
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "xOffset");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["xOffset"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["xOffset"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 105; s.pc = 73; return s.tmp_4; }
    }
  case 73:
    r0 = s.retval;
    s.xOffset___33665 = (r0);
    s.lastBrkId = 611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[611]) return breakpoint(s, 74, 611, r0);
  case 74:
    s.tmp_0 = if_yOffset_1_mk(s);
    r0 = pxsim_Array__getAt(s.arg6, s.cp___33599);
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "yOffset");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["yOffset"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["yOffset"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 106; s.pc = 75; return s.tmp_0; }
    }
  case 75:
    r0 = s.retval;
    s.yOffset___33666 = (r0);
  case 12:
  case 13:
    s.lastBrkId = 612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[612]) return breakpoint(s, 76, 612, r0);
  case 76:
    s.tmp_0 = r0 = s.cp___33599;
    r0 = (s.tmp_0 + 1);
    s.cp___33599 = (r0);
    r0 = pxsim_String_.charCodeAt(s.arg1, s.tmp_0);
    s.ch___33681 = (r0);
    s.lastBrkId = 613;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[613]) return breakpoint(s, 77, 613, r0);
  case 77:
    r0 = (s.ch___33681 == 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[614]) return breakpoint(s, 78, 614, r0);
  case 78:
    s.tmp_1 = r0 = s.arg3;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = s.arg5;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 107; s.pc = 79; return s.tmp_4; }
    }
  case 79:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.arg3 = (r0);
    s.lastBrkId = 615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[615]) return breakpoint(s, 80, 615, r0);
  case 80:
    s.arg2 = (s.x0___33597);
  case 14:
  case 15:
    s.lastBrkId = 616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[616]) return breakpoint(s, 81, 616, r0);
  case 81:
    r0 = (s.ch___33681 < 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[617]) return breakpoint(s, 82, 617, r0);
  case 82:
    { step = 9; continue; }
  case 16:
  case 17:
    s.lastBrkId = 618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[618]) return breakpoint(s, 83, 618, r0);
  case 83:
    s.l___33700 = (0);
    s.lastBrkId = 619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[619]) return breakpoint(s, 84, 619, r0);
  case 84:
    s.r___33701 = (s.lastchar___33634);
    s.lastBrkId = 620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[620]) return breakpoint(s, 85, 620, r0);
  case 85:
    s.off___33703 = (0);
    s.lastBrkId = 621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[621]) return breakpoint(s, 86, 621, r0);
  case 86:
    r0 = (s.ch___33681 - 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.dataSize___33627);
    s.guess___33704 = (r0);
    s.lastBrkId = 622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[622]) return breakpoint(s, 87, 622, r0);
  case 87:
    r0 = pxsim.BufferMethods.getNumber(s.fontdata___33631, 4, s.guess___33704);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.ch___33681);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[623]) return breakpoint(s, 88, 623, r0);
  case 88:
    s.off___33703 = (s.guess___33704);
    { step = 25; continue; }
  case 18:
    s.lastBrkId = 624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[624]) return breakpoint(s, 89, 624, r0);
  case 89:
  case 19:
    s.lastBrkId = 625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[625]) return breakpoint(s, 90, 625, r0);
  case 90:
    r0 = (s.l___33700 <= s.r___33701);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[626]) return breakpoint(s, 91, 626, r0);
  case 91:
    s.tmp_1 = r0 = s.l___33700;
    r0 = (s.r___33701 - s.l___33700);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.m___33723 = (r0);
    s.lastBrkId = 627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[627]) return breakpoint(s, 92, 627, r0);
  case 92:
    s.tmp_0 = r0 = s.fontdata___33631;
    r0 = (s.m___33723 * s.dataSize___33627);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_0, 4, s.tmp_1);
    s.v___33732 = (r0);
    s.lastBrkId = 628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[628]) return breakpoint(s, 93, 628, r0);
  case 93:
    r0 = (s.v___33732 == s.ch___33681);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[629]) return breakpoint(s, 94, 629, r0);
  case 94:
    r0 = (s.m___33723 * s.dataSize___33627);
    s.off___33703 = (r0);
    s.lastBrkId = 630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[630]) return breakpoint(s, 95, 630, r0);
  case 95:
    { step = 24; continue; }
  case 20:
  case 21:
    s.lastBrkId = 631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[631]) return breakpoint(s, 96, 631, r0);
  case 96:
    r0 = (s.v___33732 < s.ch___33681);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[632]) return breakpoint(s, 97, 632, r0);
  case 97:
    r0 = (s.m___33723 + 1);
    s.l___33700 = (r0);
    { step = 23; continue; }
  case 22:
    s.lastBrkId = 633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[633]) return breakpoint(s, 98, 633, r0);
  case 98:
    r0 = (s.m___33723 - 1);
    s.r___33701 = (r0);
  case 23:
    { step = 19; continue; }
  case 24:
  case 25:
    s.lastBrkId = 634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[634]) return breakpoint(s, 99, 634, r0);
  case 99:
    r0 = (s.mult___33600 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 26; continue; }
    s.lastBrkId = 635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[635]) return breakpoint(s, 100, 635, r0);
  case 100:
    s.tmp_1 = r0 = s.imgBuf___33641;
    s.tmp_3 = r0 = s.fontdata___33631;
    r0 = (s.off___33703 + 2);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_3, s.tmp_4, s.charSize___33623);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.write(s.tmp_1, 8, s.tmp_2);
    s.lastBrkId = 636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[636]) return breakpoint(s, 101, 636, r0);
  case 101:
    s.tmp_0 = helpers_imageDrawIcon__P25129_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.imgBuf___33641;
    r0 = (s.arg2 + s.xOffset___33665);
    s.tmp_0.arg2 = r0;
    r0 = (s.arg3 + s.yOffset___33666);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg4;
    s.callLocIdx = 108; s.pc = 102; return s.tmp_0;
  case 102:
    r0 = s.retval;
    s.lastBrkId = 637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[637]) return breakpoint(s, 103, 637, r0);
  case 103:
    s.tmp_0 = r0 = s.arg2;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg5;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 109; s.pc = 104; return s.tmp_2; }
    }
  case 104:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg2 = (r0);
    { step = 37; continue; }
  case 26:
    s.lastBrkId = 638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[638]) return breakpoint(s, 105, 638, r0);
  case 105:
    r0 = (s.off___33703 + 2);
    s.off___33703 = (r0);
    s.lastBrkId = 639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[639]) return breakpoint(s, 106, 639, r0);
  case 106:
    s.i___33788 = (0);
    s.lastBrkId = 640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[640]) return breakpoint(s, 107, 640, r0);
  case 107:
  case 27:
    s.lastBrkId = 641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[641]) return breakpoint(s, 108, 641, r0);
  case 108:
    r0 = (s.i___33788 < s.dataW___33605);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 36; continue; }
    s.lastBrkId = 642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[642]) return breakpoint(s, 109, 642, r0);
  case 109:
    s.j___33793 = (0);
    s.lastBrkId = 643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[643]) return breakpoint(s, 110, 643, r0);
  case 110:
    s.mask___33794 = (1);
    s.lastBrkId = 644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[644]) return breakpoint(s, 111, 644, r0);
  case 111:
    s.tmp_0 = r0 = s.off___33703;
    r0 = (s.tmp_0 + 1);
    s.off___33703 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___33631, s.tmp_0);
    s.c___33795 = (r0);
    s.lastBrkId = 645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[645]) return breakpoint(s, 112, 645, r0);
  case 112:
  case 28:
    s.lastBrkId = 646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[646]) return breakpoint(s, 113, 646, r0);
  case 113:
    r0 = (s.j___33793 < s.dataH___33611);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 35; continue; }
    s.lastBrkId = 647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[647]) return breakpoint(s, 114, 647, r0);
  case 114:
    r0 = (s.mask___33794 == 256);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 29; continue; }
    s.lastBrkId = 648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[648]) return breakpoint(s, 115, 648, r0);
  case 115:
    s.tmp_2 = r0 = s.off___33703;
    r0 = (s.tmp_2 + 1);
    s.off___33703 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___33631, s.tmp_2);
    s.c___33795 = (r0);
    s.lastBrkId = 649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[649]) return breakpoint(s, 116, 649, r0);
  case 116:
    s.mask___33794 = (1);
  case 29:
  case 30:
    s.lastBrkId = 650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[650]) return breakpoint(s, 117, 650, r0);
  case 117:
    s.n___33812 = (0);
    s.lastBrkId = 651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[651]) return breakpoint(s, 118, 651, r0);
  case 118:
  case 31:
    s.lastBrkId = 652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[652]) return breakpoint(s, 119, 652, r0);
  case 119:
    r0 = (s.c___33795 & s.mask___33794);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 32; continue; }
    s.lastBrkId = 653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[653]) return breakpoint(s, 120, 653, r0);
  case 120:
    r0 = (s.n___33812 + 1);
    s.n___33812 = (r0);
    s.lastBrkId = 654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[654]) return breakpoint(s, 121, 654, r0);
  case 121:
    r0 = (s.mask___33794 << 1);
    s.mask___33794 = (r0);
    { step = 31; continue; }
  case 32:
    s.lastBrkId = 655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[655]) return breakpoint(s, 122, 655, r0);
  case 122:
    r0 = pxsim_numops_toBoolDecr(s.n___33812);
    if (!r0) { step = 33; continue; }
    s.lastBrkId = 656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[656]) return breakpoint(s, 123, 656, r0);
  case 123:
    s.tmp_0 = helpers_imageFillRect__P25130_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.xOffset___33665 * s.mult___33600);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.tmp_3 = r0 = s.arg3;
    r0 = (s.j___33793 + s.yOffset___33666);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 * s.mult___33600);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.mult___33600;
    r0 = (s.mult___33600 * s.n___33812);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg4;
    s.callLocIdx = 110; s.pc = 124; return s.tmp_0;
  case 124:
    r0 = s.retval;
    s.lastBrkId = 657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[657]) return breakpoint(s, 125, 657, r0);
  case 125:
    r0 = (s.j___33793 + s.n___33812);
    s.j___33793 = (r0);
    { step = 34; continue; }
  case 33:
    s.lastBrkId = 658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[658]) return breakpoint(s, 126, 658, r0);
  case 126:
    r0 = (s.mask___33794 << 1);
    s.mask___33794 = (r0);
    s.lastBrkId = 659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[659]) return breakpoint(s, 127, 659, r0);
  case 127:
    r0 = (s.j___33793 + 1);
    s.j___33793 = (r0);
  case 34:
    { step = 28; continue; }
  case 35:
    s.lastBrkId = 660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[660]) return breakpoint(s, 128, 660, r0);
  case 128:
    r0 = (s.arg2 + s.mult___33600);
    s.arg2 = (r0);
    s.lastBrkId = 661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[661]) return breakpoint(s, 129, 661, r0);
  case 129:
    r0 = (s.i___33788 + 1);
    s.i___33788 = (r0);
    { step = 27; continue; }
  case 36:
  case 37:
    { step = 9; continue; }
  case 38:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imagePrint__P25162.info = {"start":15326,"length":3300,"line":213,"column":4,"endLine":306,"endColumn":5,"fileName":"pxt_modules/screen---st7735/text.ts","functionName":"imagePrint","argumentNames":["img","text","x","y","color","font","offsets"]}

function helpers_imagePrint__P25162_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imagePrint__P25162, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  x0___33597: undefined,
  cp___33599: undefined,
  mult___33600: undefined,
  dataW___33605: undefined,
  dataH___33611: undefined,
  byteHeight___33617: undefined,
  charSize___33623: undefined,
  dataSize___33627: undefined,
  fontdata___33631: undefined,
  lastchar___33634: undefined,
  imgBuf___33641: undefined,
  xOffset___33665: undefined,
  yOffset___33666: undefined,
  ch___33681: undefined,
  l___33700: undefined,
  r___33701: undefined,
  off___33703: undefined,
  guess___33704: undefined,
  m___33723: undefined,
  v___33732: undefined,
  i___33788: undefined,
  j___33793: undefined,
  mask___33794: undefined,
  c___33795: undefined,
  n___33812: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function image_getFontForText__P25149(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___33889 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[565]) return breakpoint(s, 6, 565, r0);
  case 6:
    s.i___33889 = (0);
    s.lastBrkId = 566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[566]) return breakpoint(s, 7, 566, r0);
  case 7:
  case 1:
    s.lastBrkId = 567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[567]) return breakpoint(s, 8, 567, r0);
  case 8:
    s.tmp_1 = r0 = s.i___33889;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[568]) return breakpoint(s, 9, 568, r0);
  case 9:
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___33889);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 > 8192);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[569]) return breakpoint(s, 10, 569, r0);
  case 10:
    r0 = globals.font12___25148;
    { step = 5; continue; }
  case 2:
  case 3:
    s.lastBrkId = 570;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[570]) return breakpoint(s, 11, 570, r0);
  case 11:
    r0 = (s.i___33889 + 1);
    s.i___33889 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 571;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[571]) return breakpoint(s, 12, 571, r0);
  case 12:
    r0 = globals.font8___25147;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
image_getFontForText__P25149.info = {"start":11713,"length":259,"line":136,"column":4,"endLine":143,"endColumn":5,"fileName":"pxt_modules/screen---st7735/text.ts","functionName":"getFontForText","argumentNames":["text"]}

function image_getFontForText__P25149_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_getFontForText__P25149, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___33889: undefined,
  arg0: undefined,
} }





function helpers_imageFillRect__P25130(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[549]) return breakpoint(s, 1, 549, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_pack__P27578_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 81; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = helpers_pack__P27578_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.tmp_4.arg1 = s.arg4;
    s.callLocIdx = 82; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods._fillRect(s.tmp_0, s.tmp_1, s.tmp_3, s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageFillRect__P25130.info = {"start":4834,"length":159,"line":158,"column":4,"endLine":160,"endColumn":5,"fileName":"pxt_modules/screen---st7735/image.ts","functionName":"imageFillRect","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageFillRect__P25130_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageFillRect__P25130, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function helpers_pack__P27578(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[535]) return breakpoint(s, 1, 535, r0);
  case 1:
    s.tmp_2 = Math_clamp__P23498_mk(s);
    s.tmp_2.arg0 = -30000;
    s.tmp_2.arg1 = 30000;
    r0 = (s.arg0 | 0);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 78; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 65535);
    s.tmp_0 = r0;
    s.tmp_5 = Math_clamp__P23498_mk(s);
    s.tmp_5.arg0 = -30000;
    s.tmp_5.arg1 = 30000;
    r0 = (s.arg1 | 0);
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 79; s.pc = 3; return s.tmp_5;
  case 3:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 16);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 | s.tmp_3);
    return leave(s, r0)
  default: oops()
} } }
helpers_pack__P27578.info = {"start":3658,"length":145,"line":130,"column":4,"endLine":132,"endColumn":5,"fileName":"pxt_modules/screen---st7735/image.ts","functionName":"pack","argumentNames":["x","y"]}

function helpers_pack__P27578_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_pack__P27578, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_clamp__P23498(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[196]) return breakpoint(s, 1, 196, r0);
  case 1:
    s.tmp_0 = Math_min__P23502_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_1 = Math_max__P23501_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 17; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 18; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
Math_clamp__P23498.info = {"start":15643,"length":130,"line":528,"column":4,"endLine":530,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"clamp","argumentNames":["min","max","value"]}

function Math_clamp__P23498_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_clamp__P23498, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_min__P23502(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[206]) return breakpoint(s, 4, 206, r0);
  case 4:
    r0 = (s.arg0 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[207]) return breakpoint(s, 5, 207, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[208]) return breakpoint(s, 6, 208, r0);
  case 6:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_min__P23502.info = {"start":16779,"length":105,"line":565,"column":4,"endLine":568,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"min","argumentNames":["a","b"]}

function Math_min__P23502_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_min__P23502, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_imageDrawIcon__P25129(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[548]) return breakpoint(s, 1, 548, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = helpers_pack__P27578_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg3;
    s.callLocIdx = 80; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods._drawIcon(s.tmp_0, s.tmp_1, s.tmp_2, s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawIcon__P25129.info = {"start":4684,"length":145,"line":155,"column":4,"endLine":157,"endColumn":5,"fileName":"pxt_modules/screen---st7735/image.ts","functionName":"imageDrawIcon","argumentNames":["img","icon","x","y","c"]}

function helpers_imageDrawIcon__P25129_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawIcon__P25129, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function helpers_stringSplit__P23493(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.A___33912 = undefined;
    s.lim___33914 = undefined;
    s.s___33930 = undefined;
    s.p___33933 = undefined;
    s.R___33934 = undefined;
    s.z___33948 = undefined;
    s.T___33961 = undefined;
    s.q___33962 = undefined;
    s.e___33968 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[135]) return breakpoint(s, 22, 135, r0);
  case 22:
    r0 = pxsim_Array__mk();
    s.A___33912 = (r0);
    s.lastBrkId = 136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[136]) return breakpoint(s, 23, 136, r0);
  case 23:
    s.lim___33914 = (0);
    s.lastBrkId = 137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[137]) return breakpoint(s, 24, 137, r0);
  case 24:
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[138]) return breakpoint(s, 25, 138, r0);
  case 25:
    r0 = (536870912 - 1);
    s.lim___33914 = (r0);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[139]) return breakpoint(s, 26, 139, r0);
  case 26:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[140]) return breakpoint(s, 27, 140, r0);
  case 27:
    s.lim___33914 = (0);
    { step = 3; continue; }
  case 2:
    s.lastBrkId = 141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[141]) return breakpoint(s, 28, 141, r0);
  case 28:
    r0 = (s.arg2 | 0);
    s.lim___33914 = (r0);
  case 3:
  case 4:
    s.lastBrkId = 142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[142]) return breakpoint(s, 29, 142, r0);
  case 29:
    r0 = pxsim_String_.length(s.arg0);
    s.s___33930 = (r0);
    s.lastBrkId = 143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[143]) return breakpoint(s, 30, 143, r0);
  case 30:
    s.p___33933 = (0);
    s.lastBrkId = 144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[144]) return breakpoint(s, 31, 144, r0);
  case 31:
    s.R___33934 = (s.arg1);
    s.lastBrkId = 145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[145]) return breakpoint(s, 32, 145, r0);
  case 32:
    r0 = (s.lim___33914 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[146]) return breakpoint(s, 33, 146, r0);
  case 33:
    r0 = s.A___33912;
    { step = 21; continue; }
  case 5:
  case 6:
    s.lastBrkId = 147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[147]) return breakpoint(s, 34, 147, r0);
  case 34:
    r0 = (s.arg1 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[148]) return breakpoint(s, 35, 148, r0);
  case 35:
    r0 = pxsim_Array_.setAt(s.A___33912, 0, s.arg0);
    s.lastBrkId = 149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[149]) return breakpoint(s, 36, 149, r0);
  case 36:
    r0 = s.A___33912;
    { step = 21; continue; }
  case 7:
  case 8:
    s.lastBrkId = 150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[150]) return breakpoint(s, 37, 150, r0);
  case 37:
    r0 = (s.s___33930 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[151]) return breakpoint(s, 38, 151, r0);
  case 38:
    s.tmp_1 = helpers_splitMatch__P27422_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = s.R___33934;
    s.callLocIdx = 10; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    s.z___33948 = (r0);
    s.lastBrkId = 152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[152]) return breakpoint(s, 40, 152, r0);
  case 40:
    r0 = (s.z___33948 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[153]) return breakpoint(s, 41, 153, r0);
  case 41:
    r0 = s.A___33912;
    { step = 21; continue; }
  case 9:
  case 10:
    s.lastBrkId = 154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[154]) return breakpoint(s, 42, 154, r0);
  case 42:
    r0 = pxsim_Array_.setAt(s.A___33912, 0, s.arg0);
    s.lastBrkId = 155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[155]) return breakpoint(s, 43, 155, r0);
  case 43:
    r0 = s.A___33912;
    { step = 21; continue; }
  case 11:
  case 12:
    s.lastBrkId = 156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[156]) return breakpoint(s, 44, 156, r0);
  case 44:
    s.q___33962 = (s.p___33933);
    s.lastBrkId = 157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[157]) return breakpoint(s, 45, 157, r0);
  case 45:
  case 13:
    s.lastBrkId = 158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[158]) return breakpoint(s, 46, 158, r0);
  case 46:
    r0 = (s.q___33962 != s.s___33930);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[159]) return breakpoint(s, 47, 159, r0);
  case 47:
    s.tmp_1 = helpers_splitMatch__P27422_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.q___33962;
    s.tmp_1.arg2 = s.R___33934;
    s.callLocIdx = 11; s.pc = 48; return s.tmp_1;
  case 48:
    r0 = s.retval;
    s.e___33968 = (r0);
    s.lastBrkId = 160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[160]) return breakpoint(s, 49, 160, r0);
  case 49:
    r0 = (s.e___33968 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[161]) return breakpoint(s, 50, 161, r0);
  case 50:
    r0 = (s.q___33962 + 1);
    s.q___33962 = (r0);
    { step = 19; continue; }
  case 14:
    s.lastBrkId = 162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[162]) return breakpoint(s, 51, 162, r0);
  case 51:
    r0 = (s.e___33968 == s.p___33933);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[163]) return breakpoint(s, 52, 163, r0);
  case 52:
    r0 = (s.q___33962 + 1);
    s.q___33962 = (r0);
    { step = 18; continue; }
  case 15:
    s.lastBrkId = 164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[164]) return breakpoint(s, 53, 164, r0);
  case 53:
    s.tmp_0 = helpers_stringSlice__P23490_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___33933;
    s.tmp_0.arg2 = s.q___33962;
    s.callLocIdx = 12; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.T___33961 = (r0);
    s.lastBrkId = 165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[165]) return breakpoint(s, 55, 165, r0);
  case 55:
    r0 = pxsim_Array__push(s.A___33912, s.T___33961);
    s.lastBrkId = 166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[166]) return breakpoint(s, 56, 166, r0);
  case 56:
    r0 = pxsim_Array__length(s.A___33912);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.lim___33914);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[167]) return breakpoint(s, 57, 167, r0);
  case 57:
    r0 = s.A___33912;
    { step = 21; continue; }
  case 16:
  case 17:
    s.lastBrkId = 168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[168]) return breakpoint(s, 58, 168, r0);
  case 58:
    s.p___33933 = (s.e___33968);
    s.lastBrkId = 169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[169]) return breakpoint(s, 59, 169, r0);
  case 59:
    s.q___33962 = (s.p___33933);
  case 18:
  case 19:
    { step = 13; continue; }
  case 20:
    s.lastBrkId = 170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[170]) return breakpoint(s, 60, 170, r0);
  case 60:
    s.tmp_0 = helpers_stringSlice__P23490_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___33933;
    s.tmp_0.arg2 = s.q___33962;
    s.callLocIdx = 13; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.T___33961 = (r0);
    s.lastBrkId = 171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[171]) return breakpoint(s, 62, 171, r0);
  case 62:
    r0 = pxsim_Array__push(s.A___33912, s.T___33961);
    s.lastBrkId = 172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[172]) return breakpoint(s, 63, 172, r0);
  case 63:
    r0 = s.A___33912;
  case 21:
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSplit__P23493.info = {"start":12919,"length":1319,"line":434,"column":4,"endLine":478,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSplit","argumentNames":["S","separator","limit"]}

function helpers_stringSplit__P23493_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSplit__P23493, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  A___33912: undefined,
  lim___33914: undefined,
  s___33930: undefined,
  p___33933: undefined,
  R___33934: undefined,
  z___33948: undefined,
  T___33961: undefined,
  q___33962: undefined,
  e___33968: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_splitMatch__P27422(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___34013 = undefined;
    s.s___34016 = undefined;
    s.i___34026 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[173]) return breakpoint(s, 8, 173, r0);
  case 8:
    r0 = pxsim_String_.length(s.arg2);
    s.r___34013 = (r0);
    s.lastBrkId = 174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[174]) return breakpoint(s, 9, 174, r0);
  case 9:
    r0 = pxsim_String_.length(s.arg0);
    s.s___34016 = (r0);
    s.lastBrkId = 175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[175]) return breakpoint(s, 10, 175, r0);
  case 10:
    r0 = (s.arg1 + s.r___34013);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.s___34016);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[176]) return breakpoint(s, 11, 176, r0);
  case 11:
    r0 = -1;
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[177]) return breakpoint(s, 12, 177, r0);
  case 12:
    s.i___34026 = (0);
    s.lastBrkId = 178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[178]) return breakpoint(s, 13, 178, r0);
  case 13:
  case 3:
    s.lastBrkId = 179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[179]) return breakpoint(s, 14, 179, r0);
  case 14:
    r0 = (s.i___34026 < s.r___34013);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[180]) return breakpoint(s, 15, 180, r0);
  case 15:
    s.tmp_3 = r0 = s.arg0;
    r0 = (s.arg1 + s.i___34026);
    s.tmp_4 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String_.charAt(s.arg2, s.i___34026);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 != s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[181]) return breakpoint(s, 16, 181, r0);
  case 16:
    r0 = -1;
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[182]) return breakpoint(s, 17, 182, r0);
  case 17:
    r0 = (s.i___34026 + 1);
    s.i___34026 = (r0);
    { step = 3; continue; }
  case 6:
    s.lastBrkId = 183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[183]) return breakpoint(s, 18, 183, r0);
  case 18:
    r0 = (s.arg1 + s.r___34013);
  case 7:
    return leave(s, r0)
  default: oops()
} } }
helpers_splitMatch__P27422.info = {"start":14244,"length":289,"line":480,"column":4,"endLine":489,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"splitMatch","argumentNames":["S","q","R"]}

function helpers_splitMatch__P27422_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_splitMatch__P27422, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  r___34013: undefined,
  s___34016: undefined,
  i___34026: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Scene_render__P25975(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___34110 = undefined;
    s.unnamed388___U1 = undefined;
    s.unnamed389___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C25947_VT)) failedCast(r0);
    s.lastBrkId = 1897;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1897]) return breakpoint(s, 12, 1897, r0);
  case 12:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1898;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1898]) return breakpoint(s, 13, 1898, r0);
  case 13:
    { step = 11; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1899;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1899]) return breakpoint(s, 14, 1899, r0);
  case 14:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 4);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["flags"] = (s.tmp_3);
    s.lastBrkId = 1900;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1900]) return breakpoint(s, 15, 1900, r0);
  case 15:
    s.lastBrkId = 1901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1901]) return breakpoint(s, 16, 1901, r0);
  case 16:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["previousScene"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1902]) return breakpoint(s, 17, 1902, r0);
  case 17:
    s.tmp_3 = scene_Scene_render__P25975_mk(s);
    r0 = s.arg0.fields["previousScene"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 914; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 1903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1903]) return breakpoint(s, 19, 1903, r0);
  case 19:
    s.tmp_0 = scene_Background_draw__P25785_mk(s);
    r0 = s.arg0.fields["background"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 915; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
  case 6:
    s.lastBrkId = 1904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1904]) return breakpoint(s, 21, 1904, r0);
  case 21:
    s.lastBrkId = 1905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1905]) return breakpoint(s, 22, 1905, r0);
  case 22:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1906]) return breakpoint(s, 23, 1906, r0);
  case 23:
    s.tmp_2 = helpers_arraySort__P23476_mk(s);
    r0 = s.arg0.fields["allSprites"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = scene_Scene_render_inline__P34087;
    s.callLocIdx = 920; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 1908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1908]) return breakpoint(s, 25, 1908, r0);
  case 25:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 7:
  case 8:
    s.lastBrkId = 1909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1909]) return breakpoint(s, 26, 1909, r0);
  case 26:
    s.lastBrkId = 1910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1910]) return breakpoint(s, 27, 1910, r0);
  case 27:
    s.s___34110 = (undefined);
    r0 = s.arg0.fields["allSprites"];
    s.unnamed388___U1 = (r0);
    s.unnamed389___U2 = (0);
    s.lastBrkId = 1911;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1911]) return breakpoint(s, 28, 1911, r0);
  case 28:
  case 9:
    s.tmp_0 = r0 = s.unnamed389___U2;
    r0 = pxsim_Array__length(s.unnamed388___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed388___U1, s.unnamed389___U2);
    s.s___34110 = (r0);
    s.lastBrkId = 1912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1912]) return breakpoint(s, 29, 1912, r0);
  case 29:
    s.tmp_2 = if___draw_2_mk(s);
    s.tmp_2.arg0 = s.s___34110;
    r0 = s.arg0.fields["camera"];
    s.tmp_2.arg1 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "__draw"), 2);
      s.callLocIdx = 921; s.pc = 30; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["__draw"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["__draw"], 2); s.callLocIdx = 921; s.pc = 30; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 921; s.pc = 30; return s.tmp_2;; }
     else { s.callLocIdx = 921; s.pc = 30; return s.tmp_2; }
    }
  case 30:
    r0 = s.retval;
    r0 = (s.unnamed389___U2 + 1);
    s.unnamed389___U2 = (r0);
    { step = 9; continue; }
  case 10:
    s.unnamed388___U1 = (undefined);
    s.lastBrkId = 1913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1913]) return breakpoint(s, 31, 1913, r0);
  case 31:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_render__P25975.info = {"start":7954,"length":917,"line":223,"column":8,"endLine":247,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"render","argumentNames":["this"]}

function scene_Scene_render__P25975_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_render__P25975, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  s___34110: undefined,
  unnamed388___U1: undefined,
  unnamed389___U2: undefined,
  arg0: undefined,
} }





function scene_Scene_render_inline__P34087(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1907]) return breakpoint(s, 3, 1907, r0);
  case 3:
    s.tmp_2 = if_z_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "z");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["z"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["z"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 916; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = if_z_1_mk(s);
    s.tmp_4.arg0 = s.arg1;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "z");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["z"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["z"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 917; s.pc = 5; return s.tmp_4; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_6 = if_id_1_mk(s);
    s.tmp_6.arg0 = s.arg0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "id");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["id"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["id"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 918; s.pc = 6; return s.tmp_6; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = if_id_1_mk(s);
    s.tmp_8.arg0 = s.arg1;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "id");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["id"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["id"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 919; s.pc = 7; return s.tmp_8; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_5 - s.tmp_7);
  case 2:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_render_inline__P34087.info = {"start":8532,"length":52,"line":237,"column":37,"endLine":237,"endColumn":89,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["a","b"]}

function scene_Scene_render_inline__P34087_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_render_inline__P34087, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Background_draw__P25785(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C25776_VT)) failedCast(r0);
    s.lastBrkId = 1609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1609]) return breakpoint(s, 5, 1609, r0);
  case 5:
    r0 = s.arg0.fields["color"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.fill(globals.screen___25204, s.tmp_0);
    s.lastBrkId = 1610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1610]) return breakpoint(s, 6, 1610, r0);
  case 6:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1611]) return breakpoint(s, 7, 1611, r0);
  case 7:
    r0 = s.arg0.fields["_image"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___25204, s.tmp_1, 0, 0);
  case 1:
  case 2:
    s.lastBrkId = 1612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1612]) return breakpoint(s, 8, 1612, r0);
  case 8:
    r0 = s.arg0.fields["_layers"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1613;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1613]) return breakpoint(s, 9, 1613, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, scene_Background_draw_inline__P34142);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P23480_mk(s);
    r0 = s.arg0.fields["_layers"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 782; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_draw__P25785.info = {"start":1166,"length":545,"line":48,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"draw","argumentNames":["this"]}

function scene_Background_draw__P25785_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_draw__P25785, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_Background_draw_inline__P34142(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___34144 = undefined;
    s.oy___34155 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1614]) return breakpoint(s, 1, 1614, r0);
  case 1:
    r0 = s.caps[0].fields["camera"];
    r0 = r0.fields["drawOffsetX"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["distance"];
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.ox___34144 = (r0);
    s.lastBrkId = 1615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1615]) return breakpoint(s, 2, 1615, r0);
  case 2:
    r0 = s.caps[0].fields["camera"];
    r0 = r0.fields["drawOffsetY"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["distance"];
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.oy___34155 = (r0);
    s.lastBrkId = 1616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1616]) return breakpoint(s, 3, 1616, r0);
  case 3:
    s.tmp_0 = scene_BackgroundLayer_draw__P25794_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.ox___34144;
    s.tmp_0.arg2 = s.oy___34155;
    s.callLocIdx = 781; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_draw_inline__P34142.info = {"start":1373,"length":312,"line":53,"column":37,"endLine":58,"endColumn":17,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["layer"]}

function scene_Background_draw_inline__P34142_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_draw_inline__P34142, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ox___34144: undefined,
  oy___34155: undefined,
  arg0: undefined,
} }





function scene_BackgroundLayer_draw__P25794(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.w___34173 = undefined;
    s.h___34176 = undefined;
    s.pw___34179 = undefined;
    s.ph___34183 = undefined;
    s.rx___34192 = undefined;
    s.ry___34195 = undefined;
    s.y___34264 = undefined;
    s.py___34265 = undefined;
    s.dh___34274 = undefined;
    s.x___34282 = undefined;
    s.rxl___34283 = undefined;
    s.px___34289 = undefined;
    s.dw___34293 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_BackgroundLayer__C25786_VT)) failedCast(r0);
    s.lastBrkId = 1635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1635]) return breakpoint(s, 24, 1635, r0);
  case 24:
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.w___34173 = (r0);
    s.lastBrkId = 1636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1636]) return breakpoint(s, 25, 1636, r0);
  case 25:
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.h___34176 = (r0);
    s.lastBrkId = 1637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1637]) return breakpoint(s, 26, 1637, r0);
  case 26:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    s.pw___34179 = (r0);
    s.lastBrkId = 1638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1638]) return breakpoint(s, 27, 1638, r0);
  case 27:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    s.ph___34183 = (r0);
    s.lastBrkId = 1639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1639]) return breakpoint(s, 28, 1639, r0);
  case 28:
    r0 = pxsim_numops_toBoolDecr(s.pw___34179);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.ph___34183);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1640]) return breakpoint(s, 29, 1640, r0);
  case 29:
    { step = 23; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1641]) return breakpoint(s, 30, 1641, r0);
  case 30:
    r0 = (0 - s.arg1);
    s.rx___34192 = (r0);
    s.lastBrkId = 1642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1642]) return breakpoint(s, 31, 1642, r0);
  case 31:
    r0 = (0 - s.arg2);
    s.ry___34195 = (r0);
    s.lastBrkId = 1643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1643]) return breakpoint(s, 32, 1643, r0);
  case 32:
    r0 = s.arg0.fields["alignX"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 5:
    s.lastBrkId = 1644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1644]) return breakpoint(s, 33, 1644, r0);
  case 33:
    s.tmp_1 = r0 = s.rx___34192;
    r0 = (s.w___34173 + s.pw___34179);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.rx___34192 = (r0);
    s.lastBrkId = 1645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1645]) return breakpoint(s, 34, 1645, r0);
  case 34:
    { step = 7; continue; }
  case 6:
    s.lastBrkId = 1646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1646]) return breakpoint(s, 35, 1646, r0);
  case 35:
    s.tmp_0 = r0 = s.rx___34192;
    r0 = (s.w___34173 + s.pw___34179);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.rx___34192 = (r0);
    s.lastBrkId = 1647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1647]) return breakpoint(s, 36, 1647, r0);
  case 36:
  case 7:
    s.lastBrkId = 1648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1648]) return breakpoint(s, 37, 1648, r0);
  case 37:
    r0 = s.arg0.fields["alignY"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 8:
    s.lastBrkId = 1649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1649]) return breakpoint(s, 38, 1649, r0);
  case 38:
    s.tmp_1 = r0 = s.ry___34195;
    r0 = (s.h___34176 + s.ph___34183);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.ry___34195 = (r0);
    s.lastBrkId = 1650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1650]) return breakpoint(s, 39, 1650, r0);
  case 39:
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 1651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1651]) return breakpoint(s, 40, 1651, r0);
  case 40:
    s.tmp_0 = r0 = s.ry___34195;
    r0 = (s.h___34176 + s.ph___34183);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.ry___34195 = (r0);
    s.lastBrkId = 1652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1652]) return breakpoint(s, 41, 1652, r0);
  case 41:
  case 10:
    s.lastBrkId = 1653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1653]) return breakpoint(s, 42, 1653, r0);
  case 42:
    r0 = (s.rx___34192 % s.w___34173);
    s.rx___34192 = (r0);
    s.lastBrkId = 1654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1654]) return breakpoint(s, 43, 1654, r0);
  case 43:
    r0 = (s.rx___34192 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1655]) return breakpoint(s, 44, 1655, r0);
  case 44:
    r0 = (s.rx___34192 + s.w___34173);
    s.rx___34192 = (r0);
  case 11:
  case 12:
    s.lastBrkId = 1656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1656]) return breakpoint(s, 45, 1656, r0);
  case 45:
    r0 = (s.ry___34195 % s.h___34176);
    s.ry___34195 = (r0);
    s.lastBrkId = 1657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1657]) return breakpoint(s, 46, 1657, r0);
  case 46:
    r0 = (s.ry___34195 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1658]) return breakpoint(s, 47, 1658, r0);
  case 47:
    r0 = (s.ry___34195 + s.h___34176);
    s.ry___34195 = (r0);
  case 13:
  case 14:
    s.lastBrkId = 1659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1659]) return breakpoint(s, 48, 1659, r0);
  case 48:
    r0 = pxsim.Math_.floor(s.rx___34192);
    s.rx___34192 = (r0);
    s.lastBrkId = 1660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1660]) return breakpoint(s, 49, 1660, r0);
  case 49:
    r0 = pxsim.Math_.floor(s.ry___34195);
    s.ry___34195 = (r0);
    s.lastBrkId = 1661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1661]) return breakpoint(s, 50, 1661, r0);
  case 50:
    s.y___34264 = (0);
    s.lastBrkId = 1662;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1662]) return breakpoint(s, 51, 1662, r0);
  case 51:
    s.py___34265 = (0);
    s.lastBrkId = 1663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1663]) return breakpoint(s, 52, 1663, r0);
  case 52:
  case 15:
    s.lastBrkId = 1664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1664]) return breakpoint(s, 53, 1664, r0);
  case 53:
    r0 = (s.y___34264 < s.h___34176);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 1665;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1665]) return breakpoint(s, 54, 1665, r0);
  case 54:
    r0 = (s.y___34264 % s.ph___34183);
    s.py___34265 = (r0);
    s.lastBrkId = 1666;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1666]) return breakpoint(s, 55, 1666, r0);
  case 55:
    s.tmp_0 = Math_min__P23502_mk(s);
    r0 = (s.ph___34183 - s.py___34265);
    s.tmp_0.arg0 = r0;
    r0 = (s.h___34176 - s.ry___34195);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 784; s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    s.dh___34274 = (r0);
    s.lastBrkId = 1667;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1667]) return breakpoint(s, 57, 1667, r0);
  case 57:
    s.x___34282 = (0);
    s.lastBrkId = 1668;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1668]) return breakpoint(s, 58, 1668, r0);
  case 58:
    s.rxl___34283 = (s.rx___34192);
    s.lastBrkId = 1669;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1669]) return breakpoint(s, 59, 1669, r0);
  case 59:
  case 16:
    s.lastBrkId = 1670;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1670]) return breakpoint(s, 60, 1670, r0);
  case 60:
    r0 = (s.x___34282 < s.w___34173);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 1671;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1671]) return breakpoint(s, 61, 1671, r0);
  case 61:
    r0 = (s.x___34282 % s.pw___34179);
    s.px___34289 = (r0);
    s.lastBrkId = 1672;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1672]) return breakpoint(s, 62, 1672, r0);
  case 62:
    s.tmp_0 = Math_min__P23502_mk(s);
    r0 = (s.pw___34179 - s.px___34289);
    s.tmp_0.arg0 = r0;
    r0 = (s.w___34173 - s.rxl___34283);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 785; s.pc = 63; return s.tmp_0;
  case 63:
    r0 = s.retval;
    s.dw___34293 = (r0);
    s.lastBrkId = 1673;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1673]) return breakpoint(s, 64, 1673, r0);
  case 64:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.drawImage(globals.screen___25204, s.tmp_0, s.rxl___34283, s.ry___34195);
    s.lastBrkId = 1674;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1674]) return breakpoint(s, 65, 1674, r0);
  case 65:
    r0 = (s.rxl___34283 + s.dw___34293);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.w___34173);
    s.rxl___34283 = (r0);
    s.lastBrkId = 1675;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1675]) return breakpoint(s, 66, 1675, r0);
  case 66:
    r0 = s.arg0.fields["repeatX"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    r0 = s.dw___34293;
    { step = 18; continue; }
  case 17:
    r0 = s.w___34173;
  case 18:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.x___34282 + s.tmp_1);
    s.x___34282 = (r0);
    { step = 16; continue; }
  case 19:
    s.lastBrkId = 1676;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1676]) return breakpoint(s, 67, 1676, r0);
  case 67:
    r0 = (s.ry___34195 + s.dh___34274);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.h___34176);
    s.ry___34195 = (r0);
    s.lastBrkId = 1677;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1677]) return breakpoint(s, 68, 1677, r0);
  case 68:
    r0 = s.arg0.fields["repeatY"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    r0 = s.dh___34274;
    { step = 21; continue; }
  case 20:
    r0 = s.h___34176;
  case 21:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.y___34264 + s.tmp_1);
    s.y___34264 = (r0);
    { step = 15; continue; }
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_BackgroundLayer_draw__P25794.info = {"start":3063,"length":1537,"line":99,"column":8,"endLine":144,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"draw","argumentNames":["this","offsetX","offsetY"]}

function scene_BackgroundLayer_draw__P25794_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_BackgroundLayer_draw__P25794, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  w___34173: undefined,
  h___34176: undefined,
  pw___34179: undefined,
  ph___34183: undefined,
  rx___34192: undefined,
  ry___34195: undefined,
  y___34264: undefined,
  py___34265: undefined,
  dh___34274: undefined,
  x___34282: undefined,
  rxl___34283: undefined,
  px___34289: undefined,
  dw___34293: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Camera_update__P25904(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.elapsed___34374 = undefined;
    s.percentComplete___34388 = undefined;
    s.damp___34395 = undefined;
    s.f___34404 = undefined;
    s.x___34410 = undefined;
    s.y___34417 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C25888_VT)) failedCast(r0);
    s.lastBrkId = 1818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1818]) return breakpoint(s, 9, 1818, r0);
  case 9:
    r0 = s.arg0.fields["sprite"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1819]) return breakpoint(s, 10, 1819, r0);
  case 10:
    s.tmp_1 = scene_Camera_offsetX__P25894_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_3 = Sprite_x__P25517_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 875; s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 876; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 1820;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1820]) return breakpoint(s, 13, 1820, r0);
  case 13:
    s.tmp_0 = scene_Camera_offsetY__P25896_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_y__P25519_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 877; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 878; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1821]) return breakpoint(s, 16, 1821, r0);
  case 16:
    s.tmp_0 = scene_Camera_offsetX__P25894_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = scene_Camera_offsetX__P25893_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    s.callLocIdx = 879; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 880; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 1822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1822]) return breakpoint(s, 19, 1822, r0);
  case 19:
    s.tmp_0 = scene_Camera_offsetY__P25896_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = scene_Camera_offsetY__P25895_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    s.callLocIdx = 881; s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 882; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1823]) return breakpoint(s, 22, 1823, r0);
  case 22:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = scene_Camera_offsetX__P25893_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 883; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetX"] = (s.tmp_1);
    s.lastBrkId = 1824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1824]) return breakpoint(s, 24, 1824, r0);
  case 24:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = scene_Camera_offsetY__P25895_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 884; s.pc = 25; return s.tmp_2;
  case 25:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetY"] = (s.tmp_1);
    s.lastBrkId = 1825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1825]) return breakpoint(s, 26, 1825, r0);
  case 26:
    r0 = s.arg0.fields["shakeStartTime"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1826]) return breakpoint(s, 27, 1826, r0);
  case 27:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = s.arg0.fields["shakeStartTime"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.elapsed___34374 = (r0);
    s.lastBrkId = 1827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1827]) return breakpoint(s, 28, 1827, r0);
  case 28:
    r0 = s.arg0.fields["shakeDuration"];
    s.tmp_1 = r0;
    r0 = (s.elapsed___34374 >= s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1828]) return breakpoint(s, 29, 1828, r0);
  case 29:
    r0 = (s.arg0).fields["shakeStartTime"] = (undefined);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 1829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1829]) return breakpoint(s, 30, 1829, r0);
  case 30:
    r0 = s.arg0.fields["shakeDuration"];
    s.tmp_0 = r0;
    r0 = (s.elapsed___34374 / s.tmp_0);
    s.percentComplete___34388 = (r0);
    s.lastBrkId = 1830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1830]) return breakpoint(s, 31, 1830, r0);
  case 31:
    s.damp___34395 = (1);
    s.lastBrkId = 1831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1831]) return breakpoint(s, 32, 1831, r0);
  case 32:
    r0 = (s.percentComplete___34388 >= 0.75);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1832;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1832]) return breakpoint(s, 33, 1832, r0);
  case 33:
    s.tmp_1 = Math_max__P23501_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = (1 - s.percentComplete___34388);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 885; s.pc = 34; return s.tmp_1;
  case 34:
    r0 = s.retval;
    s.damp___34395 = (r0);
  case 4:
  case 5:
    s.lastBrkId = 1833;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1833]) return breakpoint(s, 35, 1833, r0);
  case 35:
    r0 = s.arg0.fields["shakeAmplitude"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.damp___34395);
    s.f___34404 = (r0);
    s.lastBrkId = 1834;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1834]) return breakpoint(s, 36, 1834, r0);
  case 36:
    r0 = pxsim.Math_.random();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.f___34404);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 0);
    s.x___34410 = (r0);
    s.lastBrkId = 1835;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1835]) return breakpoint(s, 37, 1835, r0);
  case 37:
    r0 = pxsim.Math_.random();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.f___34404);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 0);
    s.y___34417 = (r0);
    s.lastBrkId = 1836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1836]) return breakpoint(s, 38, 1836, r0);
  case 38:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["drawOffsetX"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.x___34410);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetX"] = (s.tmp_1);
    s.lastBrkId = 1837;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1837]) return breakpoint(s, 39, 1837, r0);
  case 39:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["drawOffsetY"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.y___34417);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetY"] = (s.tmp_1);
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_update__P25904.info = {"start":2297,"length":1397,"line":77,"column":8,"endLine":112,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"update","argumentNames":["this"]}

function scene_Camera_update__P25904_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_update__P25904, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  elapsed___34374: undefined,
  percentComplete___34388: undefined,
  damp___34395: undefined,
  f___34404: undefined,
  x___34410: undefined,
  y___34417: undefined,
  arg0: undefined,
} }





function scene_Camera_offsetY__P25896(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___34457 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C25888_VT)) failedCast(r0);
    s.lastBrkId = 1810;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1810]) return breakpoint(s, 5, 1810, r0);
  case 5:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 872; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.scene___34457 = (r0);
    s.lastBrkId = 1811;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1811]) return breakpoint(s, 7, 1811, r0);
  case 7:
    r0 = s.scene___34457.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P25854_mk(s);
    r0 = s.scene___34457.fields["tileMap"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 873; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1812;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1812]) return breakpoint(s, 9, 1812, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = tiles_TileMap_offsetY__P25849_mk(s);
    r0 = s.scene___34457.fields["tileMap"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg1;
    s.callLocIdx = 874; s.pc = 10; return s.tmp_5;
  case 10:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_offsetY"] = (s.tmp_4);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1813;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1813]) return breakpoint(s, 11, 1813, r0);
  case 11:
    r0 = (s.arg0).fields["_offsetY"] = (s.arg1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_offsetY__P25896.info = {"start":1034,"length":267,"line":37,"column":8,"endLine":44,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetY","argumentNames":["this","v"]}

function scene_Camera_offsetY__P25896_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetY__P25896, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  scene___34457: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_enabled__P25854(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1731]) return breakpoint(s, 1, 1731, r0);
  case 1:
    r0 = s.arg0.fields["_map"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_enabled__P25854.info = {"start":10141,"length":66,"line":351,"column":8,"endLine":353,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"enabled","argumentNames":["this"]}
tiles_TileMap_enabled__P25854.isGetter = true;

function tiles_TileMap_enabled__P25854_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_enabled__P25854, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_TileMap_offsetY__P25849(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1727]) return breakpoint(s, 1, 1727, r0);
  case 1:
    s.tmp_0 = Math_clamp__P23498_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_max__P23501_mk(s);
    s.tmp_3 = tiles_TileMap_areaHeight__P25851_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 810; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 811; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 812; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_offsetY__P25849.info = {"start":9594,"length":123,"line":329,"column":8,"endLine":331,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"offsetY","argumentNames":["this","value"]}

function tiles_TileMap_offsetY__P25849_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_offsetY__P25849, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_areaHeight__P25851(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1729]) return breakpoint(s, 3, 1729, r0);
  case 3:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = tiles_TileMapData_height__P25827_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 815; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 816; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 << s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_areaHeight__P25851.info = {"start":9828,"length":93,"line":337,"column":8,"endLine":339,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"areaHeight","argumentNames":["this"]}

function tiles_TileMap_areaHeight__P25851_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_areaHeight__P25851, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function tiles_TileMap_scale__P25845(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1721;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1721]) return breakpoint(s, 1, 1721, r0);
  case 1:
    r0 = s.arg0.fields["_scale"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_scale__P25845.info = {"start":9169,"length":55,"line":310,"column":8,"endLine":312,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this"]}
tiles_TileMap_scale__P25845.isGetter = true;

function tiles_TileMap_scale__P25845_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_scale__P25845, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetY__P25895(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C25888_VT)) failedCast(r0);
    s.lastBrkId = 1809;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1809]) return breakpoint(s, 1, 1809, r0);
  case 1:
    r0 = s.arg0.fields["_offsetY"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_offsetY__P25895.info = {"start":966,"length":59,"line":34,"column":8,"endLine":36,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetY","argumentNames":["this"]}
scene_Camera_offsetY__P25895.isGetter = true;

function scene_Camera_offsetY__P25895_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetY__P25895, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetX__P25894(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___34508 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C25888_VT)) failedCast(r0);
    s.lastBrkId = 1805;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1805]) return breakpoint(s, 5, 1805, r0);
  case 5:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 869; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.scene___34508 = (r0);
    s.lastBrkId = 1806;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1806]) return breakpoint(s, 7, 1806, r0);
  case 7:
    r0 = s.scene___34508.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P25854_mk(s);
    r0 = s.scene___34508.fields["tileMap"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 870; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1807;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1807]) return breakpoint(s, 9, 1807, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = tiles_TileMap_offsetX__P25848_mk(s);
    r0 = s.scene___34508.fields["tileMap"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg1;
    s.callLocIdx = 871; s.pc = 10; return s.tmp_5;
  case 10:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_offsetX"] = (s.tmp_4);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1808;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1808]) return breakpoint(s, 11, 1808, r0);
  case 11:
    r0 = (s.arg0).fields["_offsetX"] = (s.arg1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_offsetX__P25894.info = {"start":690,"length":267,"line":26,"column":8,"endLine":33,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetX","argumentNames":["this","v"]}

function scene_Camera_offsetX__P25894_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetX__P25894, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  scene___34508: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_offsetX__P25848(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1726]) return breakpoint(s, 1, 1726, r0);
  case 1:
    s.tmp_0 = Math_clamp__P23498_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_max__P23501_mk(s);
    s.tmp_3 = tiles_TileMap_areaWidth__P25850_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 807; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 808; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 809; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_offsetX__P25848.info = {"start":9463,"length":121,"line":325,"column":8,"endLine":327,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"offsetX","argumentNames":["this","value"]}

function tiles_TileMap_offsetX__P25848_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_offsetX__P25848, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_areaWidth__P25850(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1728]) return breakpoint(s, 3, 1728, r0);
  case 3:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = tiles_TileMapData_width__P25826_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 813; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 814; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 << s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_areaWidth__P25850.info = {"start":9727,"length":91,"line":333,"column":8,"endLine":335,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"areaWidth","argumentNames":["this"]}

function tiles_TileMap_areaWidth__P25850_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_areaWidth__P25850, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function scene_Camera_offsetX__P25893(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C25888_VT)) failedCast(r0);
    s.lastBrkId = 1804;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1804]) return breakpoint(s, 1, 1804, r0);
  case 1:
    r0 = s.arg0.fields["_offsetX"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_offsetX__P25893.info = {"start":622,"length":59,"line":23,"column":8,"endLine":25,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetX","argumentNames":["this"]}
scene_Camera_offsetX__P25893.isGetter = true;

function scene_Camera_offsetX__P25893_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetX__P25893, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Sprite_y__P25519(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[981]) return breakpoint(s, 1, 981, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    s.tmp_1 = Fx_add__P23528_mk(s);
    r0 = s.arg0.fields["_y"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = Fx_div__P23533_mk(s);
    r0 = s.arg0.fields["_height"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 512;
    s.callLocIdx = 285; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 286; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 287; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_y__P25519.info = {"start":2893,"length":100,"line":121,"column":4,"endLine":123,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"y","argumentNames":["this"]}
Sprite_y__P25519.isGetter = true;

function Sprite_y__P25519_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_y__P25519, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Fx_toFloat__P23544(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[232]) return breakpoint(s, 1, 232, r0);
  case 1:
    r0 = (s.arg0 / 256);
    return leave(s, r0)
  default: oops()
} } }
Fx_toFloat__P23544.info = {"start":2470,"length":81,"line":77,"column":4,"endLine":79,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toFloat","argumentNames":["v"]}

function Fx_toFloat__P23544_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toFloat__P23544, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Fx_div__P23533(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[217]) return breakpoint(s, 1, 217, r0);
  case 1:
    r0 = (s.arg0 << 8);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_div__P23533.info = {"start":1145,"length":129,"line":35,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"div","argumentNames":["a","b"]}

function Fx_div__P23533_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_div__P23533, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_x__P25517(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 979;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[979]) return breakpoint(s, 1, 979, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    s.tmp_1 = Fx_add__P23528_mk(s);
    r0 = s.arg0.fields["_x"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = Fx_div__P23533_mk(s);
    r0 = s.arg0.fields["_width"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 512;
    s.callLocIdx = 280; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 281; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 282; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_x__P25517.info = {"start":2537,"length":99,"line":110,"column":4,"endLine":112,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"x","argumentNames":["this"]}
Sprite_x__P25517.isGetter = true;

function Sprite_x__P25517_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_x__P25517, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function PhysicsEngine_move__P25672(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C25666_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_move__P25672.info = {"start":351,"length":20,"line":18,"column":4,"endLine":18,"endColumn":24,"fileName":"pxt_modules/game/physics.ts","functionName":"move","argumentNames":["this","dt"]}

function PhysicsEngine_move__P25672_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_move__P25672, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function PhysicsEngine_draw__P25671(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C25666_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_draw__P25671.info = {"start":279,"length":10,"line":15,"column":4,"endLine":15,"endColumn":14,"fileName":"pxt_modules/game/physics.ts","functionName":"draw","argumentNames":["this"]}

function PhysicsEngine_draw__P25671_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_draw__P25671, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller___update__P25331(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dtms___34902 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[824]) return breakpoint(s, 1, 824, r0);
  case 1:
    r0 = (s.arg0 * 1000);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    s.dtms___34902 = (r0);
    s.lastBrkId = 825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[825]) return breakpoint(s, 2, 825, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(1, controller___update_inline__P34909);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.dtms___34902);
    s.tmp_1 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_2 = controller_players__P25299_mk(s);
    s.callLocIdx = 187; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 189; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller___update__P25331.info = {"start":11751,"length":137,"line":361,"column":4,"endLine":364,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["dt"]}

function controller___update__P25331_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller___update__P25331, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  dtms___34902: undefined,
  arg0: undefined,
} }





function controller___update_inline__P34909(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Controller___update__P25329_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.callLocIdx = 188; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller___update_inline__P34909.info = {"start":11853,"length":27,"line":363,"column":26,"endLine":363,"endColumn":53,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller___update_inline__P34909_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller___update_inline__P34909, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller___update__P25329(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    s.lastBrkId = 822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[822]) return breakpoint(s, 1, 822, r0);
  case 1:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 0);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    s.lastBrkId = 823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[823]) return breakpoint(s, 2, 823, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(1, controller_Controller___update_inline__P34922);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayForEach__P23480_mk(s);
    r0 = s.arg0.fields["buttons"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 186; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___update__P25329.info = {"start":11229,"length":124,"line":343,"column":8,"endLine":346,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["this","dtms"]}

function controller_Controller___update__P25329_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___update__P25329, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller___update_inline__P34922(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Button___update__P25369_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 185; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___update_inline__P34922.info = {"start":11316,"length":25,"line":345,"column":33,"endLine":345,"endColumn":58,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["btn"]}

function controller_Controller___update_inline__P34922_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___update_inline__P34922, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Button___update__P25369(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.delay___34938 = undefined;
    s.interval___34947 = undefined;
    s.count___34960 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 878;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[878]) return breakpoint(s, 12, 878, r0);
  case 12:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 879;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[879]) return breakpoint(s, 13, 879, r0);
  case 13:
    { step = 11; continue; }
  case 1:
  case 2:
    s.lastBrkId = 880;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[880]) return breakpoint(s, 14, 880, r0);
  case 14:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["_pressedElasped"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_pressedElasped"] = (s.tmp_4);
    s.lastBrkId = 881;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[881]) return breakpoint(s, 15, 881, r0);
  case 15:
    r0 = s.arg0.fields["repeatDelay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = globals.defaultRepeatDelay___27663;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["repeatDelay"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.delay___34938 = (s.tmp_2);
    s.lastBrkId = 882;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[882]) return breakpoint(s, 16, 882, r0);
  case 16:
    r0 = s.arg0.fields["repeatInterval"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = globals.defaultRepeatInterval___27665;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["repeatInterval"];
  case 6:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.interval___34947 = (s.tmp_2);
    s.lastBrkId = 883;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[883]) return breakpoint(s, 17, 883, r0);
  case 17:
    r0 = s.arg0.fields["_pressedElasped"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < s.delay___34938);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 884;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[884]) return breakpoint(s, 18, 884, r0);
  case 18:
    { step = 11; continue; }
  case 7:
  case 8:
    s.lastBrkId = 885;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[885]) return breakpoint(s, 19, 885, r0);
  case 19:
    r0 = s.arg0.fields["_pressedElasped"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.delay___34938);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.interval___34947);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / s.interval___34947);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.count___34960 = (r0);
    s.lastBrkId = 886;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[886]) return breakpoint(s, 20, 886, r0);
  case 20:
    r0 = s.arg0.fields["_repeatCount"];
    s.tmp_1 = r0;
    r0 = (s.count___34960 != s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 887;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[887]) return breakpoint(s, 21, 887, r0);
  case 21:
    s.tmp_2 = controller_Button_raiseButtonRepeat__P27652_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 201; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 888;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[888]) return breakpoint(s, 23, 888, r0);
  case 23:
    r0 = (s.arg0).fields["_repeatCount"] = (s.count___34960);
  case 9:
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button___update__P25369.info = {"start":7291,"length":704,"line":217,"column":8,"endLine":234,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"__update","argumentNames":["this","dtms"]}

function controller_Button___update__P25369_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button___update__P25369, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  delay___34938: undefined,
  interval___34947: undefined,
  count___34960: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_raiseButtonRepeat__P27652(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[859]) return breakpoint(s, 3, 859, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___27661);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[860]) return breakpoint(s, 4, 860, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2054, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[861]) return breakpoint(s, 5, 861, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2055, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonRepeat__P27652.info = {"start":3303,"length":211,"line":110,"column":8,"endLine":115,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonRepeat","argumentNames":["this"]}

function controller_Button_raiseButtonRepeat__P27652_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonRepeat__P27652, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_players__P25299(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 746;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[746]) return breakpoint(s, 1, 746, r0);
  case 1:
    s.tmp_0 = controller__player1__P25298_mk(s);
    s.callLocIdx = 146; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 747;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[747]) return breakpoint(s, 3, 747, r0);
  case 3:
    s.tmp_0 = helpers_arrayFilter__P23481_mk(s);
    s.tmp_0.arg0 = globals._players___27644;
    s.tmp_0.arg1 = controller_players_inline__P34785;
    s.callLocIdx = 147; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
controller_players__P25299.info = {"start":748,"length":144,"line":29,"column":4,"endLine":32,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"players","argumentNames":[]}

function controller_players__P25299_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_players__P25299, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_players_inline__P34785(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
controller_players_inline__P34785.info = {"start":870,"length":14,"line":31,"column":31,"endLine":31,"endColumn":45,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller_players_inline__P34785_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_players_inline__P34785, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller__player1__P25298(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 743;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[743]) return breakpoint(s, 5, 743, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._players___27644);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__getAt(globals._players___27644, 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 744;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[744]) return breakpoint(s, 6, 744, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C25304_VT);
    s.tmp_5 = r0;
    r0 = pxsim_Array__mk();
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, globals.left___25285);
    r0 = pxsim_Array__push(s.tmp_6, globals.up___25286);
    r0 = pxsim_Array__push(s.tmp_6, globals.right___25287);
    r0 = pxsim_Array__push(s.tmp_6, globals.down___25288);
    r0 = pxsim_Array__push(s.tmp_6, globals.A___25283);
    r0 = pxsim_Array__push(s.tmp_6, globals.B___25284);
    r0 = pxsim_Array__push(s.tmp_6, globals.menu___25289);
    s.tmp_7 = controller_Controller_constructor__P25308_mk(s);
    s.tmp_7.arg0 = s.tmp_5;
    s.tmp_7.arg1 = 1;
    s.tmp_7.arg2 = s.tmp_6;
    s.callLocIdx = 145; s.pc = 7; return s.tmp_7;
  case 7:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 745;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[745]) return breakpoint(s, 8, 745, r0);
  case 8:
    r0 = pxsim_Array__getAt(globals._players___27644, 0);
    return leave(s, r0)
  default: oops()
} } }
controller__player1__P25298.info = {"start":484,"length":258,"line":23,"column":4,"endLine":27,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_player1","argumentNames":[]}

function controller__player1__P25298_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__player1__P25298, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
} }





function controller_Controller_constructor__P25308(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.leftId___34844 = undefined;
    s.i___34852 = undefined;
    s.i___34870 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 750;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[750]) return breakpoint(s, 7, 750, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_id"] = (s.tmp_1);
    s.lastBrkId = 751;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[751]) return breakpoint(s, 8, 751, r0);
  case 8:
    r0 = (s.arg0).fields["_connected"] = (false);
    s.lastBrkId = 752;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[752]) return breakpoint(s, 9, 752, r0);
  case 9:
    r0 = (s.arg0).fields["playerIndex"] = (s.arg1);
    s.lastBrkId = 753;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[753]) return breakpoint(s, 10, 753, r0);
  case 10:
    r0 = (s.arg0).fields["analog"] = (false);
    s.lastBrkId = 754;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[754]) return breakpoint(s, 11, 754, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 755;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[755]) return breakpoint(s, 12, 755, r0);
  case 12:
    r0 = (s.arg0).fields["buttons"] = (s.arg2);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 756;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[756]) return breakpoint(s, 13, 756, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buttons"] = (s.tmp_1);
    s.lastBrkId = 757;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[757]) return breakpoint(s, 14, 757, r0);
  case 14:
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 7);
    s.tmp_0 = r0;
    r0 = (1 + s.tmp_0);
    s.leftId___34844 = (r0);
    s.lastBrkId = 758;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[758]) return breakpoint(s, 15, 758, r0);
  case 15:
    s.i___34852 = (0);
    s.lastBrkId = 759;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[759]) return breakpoint(s, 16, 759, r0);
  case 16:
  case 2:
    s.lastBrkId = 760;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[760]) return breakpoint(s, 17, 760, r0);
  case 17:
    r0 = (s.i___34852 < 7);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 761;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[761]) return breakpoint(s, 18, 761, r0);
  case 18:
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C25355_VT);
    s.tmp_1 = r0;
    s.tmp_2 = controller_Button_constructor__P25361_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    r0 = (s.leftId___34844 + s.i___34852);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = -1;
    s.callLocIdx = 151; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    r0 = s.arg0.fields["buttons"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_1);
    s.lastBrkId = 762;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[762]) return breakpoint(s, 20, 762, r0);
  case 20:
    r0 = (s.i___34852 + 1);
    s.i___34852 = (r0);
    { step = 2; continue; }
  case 3:
  case 4:
    s.lastBrkId = 763;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[763]) return breakpoint(s, 21, 763, r0);
  case 21:
    s.i___34870 = (0);
    s.lastBrkId = 764;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[764]) return breakpoint(s, 22, 764, r0);
  case 22:
  case 5:
    s.lastBrkId = 765;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[765]) return breakpoint(s, 23, 765, r0);
  case 23:
    s.tmp_1 = r0 = s.i___34870;
    r0 = s.arg0.fields["buttons"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 766;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[766]) return breakpoint(s, 24, 766, r0);
  case 24:
    r0 = s.arg0.fields["buttons"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___34870);
    s.tmp_4 = r0;
    r0 = (s.tmp_4).fields["_owner"] = (s.arg0);
    s.lastBrkId = 767;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[767]) return breakpoint(s, 25, 767, r0);
  case 25:
    r0 = (s.i___34870 + 1);
    s.i___34870 = (r0);
    { step = 5; continue; }
  case 6:
    s.lastBrkId = 768;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[768]) return breakpoint(s, 26, 768, r0);
  case 26:
    s.tmp_0 = controller_addController__P27645_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 152; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_constructor__P25308.info = {"start":1555,"length":696,"line":58,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["this","playerIndex","buttons"]}

function controller_Controller_constructor__P25308_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_constructor__P25308, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  leftId___34844: undefined,
  i___34852: undefined,
  i___34870: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_addController__P27645(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[740]) return breakpoint(s, 3, 740, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._players___27644);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 741;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[741]) return breakpoint(s, 4, 741, r0);
  case 4:
    r0 = pxsim_Array__mk();
    globals._players___27644 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 742;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[742]) return breakpoint(s, 5, 742, r0);
  case 5:
    s.tmp_0 = r0 = globals._players___27644;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_addController__P27645.info = {"start":321,"length":157,"line":16,"column":4,"endLine":21,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"addController","argumentNames":["ctrl"]}

function controller_addController__P27645_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_addController__P27645, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function helpers_arrayFilter__P23481(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___34704 = undefined;
    s.len___34706 = undefined;
    s.i___34709 = undefined;
    s.v___34714 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 80;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[80]) return breakpoint(s, 5, 80, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.res___34704 = (r0);
    s.lastBrkId = 81;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[81]) return breakpoint(s, 6, 81, r0);
  case 6:
    r0 = pxsim_Array__length(s.arg0);
    s.len___34706 = (r0);
    s.lastBrkId = 82;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[82]) return breakpoint(s, 7, 82, r0);
  case 7:
    s.i___34709 = (0);
    s.lastBrkId = 83;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[83]) return breakpoint(s, 8, 83, r0);
  case 8:
  case 1:
    s.lastBrkId = 84;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[84]) return breakpoint(s, 9, 84, r0);
  case 9:
    r0 = (s.i___34709 < s.len___34706);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 85;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[85]) return breakpoint(s, 10, 85, r0);
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___34709);
    s.v___34714 = (r0);
    s.lastBrkId = 86;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[86]) return breakpoint(s, 11, 86, r0);
  case 11:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.v___34714;
    s.tmp_1.arg1 = s.i___34709;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 6; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 87;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[87]) return breakpoint(s, 13, 87, r0);
  case 13:
    r0 = pxsim_Array__push(s.res___34704, s.v___34714);
  case 2:
  case 3:
    s.lastBrkId = 88;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[88]) return breakpoint(s, 14, 88, r0);
  case 14:
    r0 = (s.i___34709 + 1);
    s.i___34709 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 89;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[89]) return breakpoint(s, 15, 89, r0);
  case 15:
    r0 = s.res___34704;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayFilter__P23481.info = {"start":7695,"length":317,"line":261,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayFilter","argumentNames":["arr","callbackfn"]}

function helpers_arrayFilter__P23481_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayFilter__P23481, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  res___34704: undefined,
  len___34706: undefined,
  i___34709: undefined,
  v___34714: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller__moveSprites__P25303(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 748;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[748]) return breakpoint(s, 1, 748, r0);
  case 1:
    s.lastBrkId = 749;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[749]) return breakpoint(s, 2, 749, r0);
  case 2:
    s.tmp_0 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_1 = controller_players__P25299_mk(s);
    s.callLocIdx = 148; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = controller__moveSprites_inline__P34554;
    s.callLocIdx = 150; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__moveSprites__P25303.info = {"start":1108,"length":180,"line":43,"column":4,"endLine":47,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_moveSprites","argumentNames":[]}

function controller__moveSprites__P25303_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__moveSprites__P25303, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function controller__moveSprites_inline__P34554(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Controller___preUpdate__P25328_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 149; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__moveSprites_inline__P34554.info = {"start":1254,"length":26,"line":46,"column":26,"endLine":46,"endColumn":52,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller__moveSprites_inline__P34554_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__moveSprites_inline__P34554, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate__P25328(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.deadSprites___34561 = undefined;
    s.svx___34562 = undefined;
    s.svy___34563 = undefined;
    s.svxInCricle___34598 = undefined;
    s.svyInCircle___34600 = undefined;
    s.sq___34602 = undefined;
    s.scale___34617 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 781;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[781]) return breakpoint(s, 18, 781, r0);
  case 18:
    s.tmp_3 = controller_Controller__controlledSprites__P25309_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 160; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 782;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[782]) return breakpoint(s, 20, 782, r0);
  case 20:
    { step = 17; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mklocRef();
    s.deadSprites___34561 = (r0);
    s.lastBrkId = 783;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[783]) return breakpoint(s, 21, 783, r0);
  case 21:
    r0 = pxsim_pxtrt_stlocRef(s.deadSprites___34561, false);
    r0 = pxsim_pxtrt.mklocRef();
    s.svx___34562 = (r0);
    s.lastBrkId = 784;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[784]) return breakpoint(s, 22, 784, r0);
  case 22:
    r0 = pxsim_pxtrt_stlocRef(s.svx___34562, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.svy___34563 = (r0);
    s.lastBrkId = 785;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[785]) return breakpoint(s, 23, 785, r0);
  case 23:
    r0 = pxsim_pxtrt_stlocRef(s.svy___34563, 0);
    s.lastBrkId = 786;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[786]) return breakpoint(s, 24, 786, r0);
  case 24:
    r0 = s.arg0.fields["analog"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 787;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[787]) return breakpoint(s, 25, 787, r0);
  case 25:
    s.tmp_1 = r0 = s.svx___34562;
    s.tmp_5 = controller_Button_pressureLevel__P25367_mk(s);
    s.tmp_6 = controller_Controller_right__P25314_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 161; s.pc = 27; return s.tmp_6;
  case 27:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 162; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_8 = controller_Button_pressureLevel__P25367_mk(s);
    s.tmp_9 = controller_Controller_left__P25313_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.callLocIdx = 163; s.pc = 29; return s.tmp_9;
  case 29:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 164; s.pc = 28; return s.tmp_8;
  case 28:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_4 - s.tmp_7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    s.lastBrkId = 788;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[788]) return breakpoint(s, 30, 788, r0);
  case 30:
    s.tmp_0 = r0 = s.svy___34563;
    s.tmp_4 = controller_Button_pressureLevel__P25367_mk(s);
    s.tmp_5 = controller_Controller_down__P25316_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 165; s.pc = 32; return s.tmp_5;
  case 32:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 166; s.pc = 31; return s.tmp_4;
  case 31:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_7 = controller_Button_pressureLevel__P25367_mk(s);
    s.tmp_8 = controller_Controller_up__P25315_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 167; s.pc = 34; return s.tmp_8;
  case 34:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 168; s.pc = 33; return s.tmp_7;
  case 33:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 - s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 12; continue; }
  case 3:
    s.lastBrkId = 789;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[789]) return breakpoint(s, 35, 789, r0);
  case 35:
    s.tmp_1 = controller_Button__C25355_v0_1_mk(s);
    s.tmp_2 = controller_Controller_right__P25314_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 169; s.pc = 37; return s.tmp_2;
  case 37:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C25355_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = 256;
    { step = 5; continue; }
  case 4:
    r0 = 0;
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = controller_Button__C25355_v0_1_mk(s);
    s.tmp_6 = controller_Controller_left__P25313_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 170; s.pc = 39; return s.tmp_6;
  case 39:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!checkSubtype(s.tmp_5.arg0, controller_Button__C25355_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.isPressed;
    s.pc = 38; return s.tmp_5;
  case 38:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 6; continue; }
    r0 = 256;
    { step = 7; continue; }
  case 6:
    r0 = 0;
  case 7:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.svx___34562;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_8, s.tmp_9);
    s.lastBrkId = 790;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[790]) return breakpoint(s, 40, 790, r0);
  case 40:
    s.tmp_1 = controller_Button__C25355_v0_1_mk(s);
    s.tmp_2 = controller_Controller_down__P25316_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 171; s.pc = 42; return s.tmp_2;
  case 42:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C25355_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 41; return s.tmp_1;
  case 41:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = 256;
    { step = 9; continue; }
  case 8:
    r0 = 0;
  case 9:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = controller_Button__C25355_v0_1_mk(s);
    s.tmp_6 = controller_Controller_up__P25315_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 172; s.pc = 44; return s.tmp_6;
  case 44:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!checkSubtype(s.tmp_5.arg0, controller_Button__C25355_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.isPressed;
    s.pc = 43; return s.tmp_5;
  case 43:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 10; continue; }
    r0 = 256;
    { step = 11; continue; }
  case 10:
    r0 = 0;
  case 11:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.svy___34563;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_8, s.tmp_9);
  case 12:
    r0 = pxsim_pxtrt.mklocRef();
    s.svxInCricle___34598 = (r0);
    s.lastBrkId = 791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[791]) return breakpoint(s, 45, 791, r0);
  case 45:
    s.tmp_0 = r0 = s.svxInCricle___34598;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___34562);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt.mklocRef();
    s.svyInCircle___34600 = (r0);
    s.lastBrkId = 792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[792]) return breakpoint(s, 46, 792, r0);
  case 46:
    s.tmp_0 = r0 = s.svyInCircle___34600;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___34563);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[793]) return breakpoint(s, 47, 793, r0);
  case 47:
    r0 = pxsim_pxtrt_ldlocRef(s.svx___34562);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___34562);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___34563);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___34563);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    s.sq___34602 = (r0);
    s.lastBrkId = 794;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[794]) return breakpoint(s, 48, 794, r0);
  case 48:
    r0 = (s.sq___34602 > 65536);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 795;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[795]) return breakpoint(s, 49, 795, r0);
  case 49:
    r0 = (65536 / s.sq___34602);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.sqrt(s.tmp_1);
    s.scale___34617 = (r0);
    s.lastBrkId = 796;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[796]) return breakpoint(s, 50, 796, r0);
  case 50:
    s.tmp_0 = r0 = s.svxInCricle___34598;
    s.tmp_3 = r0 = s.scale___34617;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___34562);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 797;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[797]) return breakpoint(s, 51, 797, r0);
  case 51:
    s.tmp_0 = r0 = s.svyInCircle___34600;
    s.tmp_3 = r0 = s.scale___34617;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___34563);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 13:
  case 14:
    s.lastBrkId = 798;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[798]) return breakpoint(s, 52, 798, r0);
  case 52:
    r0 = pxsim_pxtcore_mkAction(5, controller_Controller___preUpdate_inline__P34635);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.deadSprites___34561);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.svx___34562);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.svy___34563);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.svxInCricle___34598);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.svyInCircle___34600);
    s.tmp_1 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_2 = controller_Controller__controlledSprites__P25309_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 173; s.pc = 54; return s.tmp_2;
  case 54:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 181; s.pc = 53; return s.tmp_1;
  case 53:
    r0 = s.retval;
    s.lastBrkId = 820;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[820]) return breakpoint(s, 55, 820, r0);
  case 55:
    r0 = pxsim_pxtrt_ldlocRef(s.deadSprites___34561);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[821]) return breakpoint(s, 56, 821, r0);
  case 56:
    s.tmp_1 = controller_Controller__controlledSprites__P25310_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = helpers_arrayFilter__P23481_mk(s);
    s.tmp_3 = controller_Controller__controlledSprites__P25309_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 182; s.pc = 59; return s.tmp_3;
  case 59:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = controller_Controller___preUpdate_inline__P34692;
    s.callLocIdx = 183; s.pc = 58; return s.tmp_2;
  case 58:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 184; s.pc = 57; return s.tmp_1;
  case 57:
    r0 = s.retval;
  case 15:
  case 16:
  case 17:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate__P25328.info = {"start":8684,"length":2535,"line":277,"column":8,"endLine":341,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__preUpdate","argumentNames":["this"]}

function controller_Controller___preUpdate__P25328_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate__P25328, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  deadSprites___34561: undefined,
  svx___34562: undefined,
  svy___34563: undefined,
  svxInCricle___34598: undefined,
  svyInCircle___34600: undefined,
  sq___34602: undefined,
  scale___34617: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate_inline__P34635(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___34638 = undefined;
    s.vx___34639 = undefined;
    s.vy___34640 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 799;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[799]) return breakpoint(s, 22, 799, r0);
  case 22:
    s.tmp_0 = if_s_1_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "s");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["s"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["s"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 174; s.pc = 23; return s.tmp_0; }
    }
  case 23:
    r0 = s.retval;
    s.s___34638 = (r0);
    s.lastBrkId = 800;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[800]) return breakpoint(s, 24, 800, r0);
  case 24:
    s.tmp_2 = if_vx_1_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "vx");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["vx"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["vx"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 175; s.pc = 25; return s.tmp_2; }
    }
  case 25:
    r0 = s.retval;
    s.vx___34639 = (r0);
    s.lastBrkId = 801;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[801]) return breakpoint(s, 26, 801, r0);
  case 26:
    s.tmp_3 = if_vy_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "vy");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["vy"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["vy"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 176; s.pc = 27; return s.tmp_3; }
    }
  case 27:
    r0 = s.retval;
    s.vy___34640 = (r0);
    s.lastBrkId = 802;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[802]) return breakpoint(s, 28, 802, r0);
  case 28:
    r0 = s.s___34638.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 803;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[803]) return breakpoint(s, 29, 803, r0);
  case 29:
    r0 = pxsim_pxtrt_stlocRef(s.caps[0], true);
    s.lastBrkId = 804;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[804]) return breakpoint(s, 30, 804, r0);
  case 30:
    { step = 21; continue; }
  case 1:
  case 2:
    s.lastBrkId = 805;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[805]) return breakpoint(s, 31, 805, r0);
  case 31:
    r0 = s.arg0.fields["_inputLastFrame"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 806;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[806]) return breakpoint(s, 32, 806, r0);
  case 32:
    r0 = pxsim_numops_toBoolDecr(s.vx___34639);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 807;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[807]) return breakpoint(s, 33, 807, r0);
  case 33:
    r0 = (s.s___34638).fields["_vx"] = (0);
  case 3:
  case 4:
    s.lastBrkId = 808;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[808]) return breakpoint(s, 34, 808, r0);
  case 34:
    r0 = pxsim_numops_toBoolDecr(s.vy___34640);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 809;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[809]) return breakpoint(s, 35, 809, r0);
  case 35:
    r0 = (s.s___34638).fields["_vy"] = (0);
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 810;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[810]) return breakpoint(s, 36, 810, r0);
  case 36:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 811;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[811]) return breakpoint(s, 37, 811, r0);
  case 37:
    s.tmp_2 = r0 = s.vx___34639;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_2;
    { step = 12; continue; }
  case 11:
    r0 = s.vy___34640;
  case 12:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 812;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[812]) return breakpoint(s, 38, 812, r0);
  case 38:
    s.tmp_4 = r0 = s.s___34638;
    s.tmp_6 = Fx_imul__P23532_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[3]);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.vx___34639;
    s.callLocIdx = 177; s.pc = 39; return s.tmp_6;
  case 39:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["_vx"] = (s.tmp_5);
    s.lastBrkId = 813;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[813]) return breakpoint(s, 40, 813, r0);
  case 40:
    s.tmp_0 = r0 = s.s___34638;
    s.tmp_2 = Fx_imul__P23532_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[4]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vy___34640;
    s.callLocIdx = 178; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    { step = 18; continue; }
  case 13:
    s.lastBrkId = 814;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[814]) return breakpoint(s, 42, 814, r0);
  case 42:
    r0 = pxsim_numops_toBoolDecr(s.vx___34639);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 815;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[815]) return breakpoint(s, 43, 815, r0);
  case 43:
    s.tmp_0 = r0 = s.s___34638;
    s.tmp_2 = Fx_imul__P23532_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vx___34639;
    s.callLocIdx = 179; s.pc = 44; return s.tmp_2;
  case 44:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    { step = 17; continue; }
  case 14:
    s.lastBrkId = 816;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[816]) return breakpoint(s, 45, 816, r0);
  case 45:
    r0 = pxsim_numops_toBoolDecr(s.vy___34640);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 817;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[817]) return breakpoint(s, 46, 817, r0);
  case 46:
    s.tmp_0 = r0 = s.s___34638;
    s.tmp_2 = Fx_imul__P23532_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vy___34640;
    s.callLocIdx = 180; s.pc = 47; return s.tmp_2;
  case 47:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
  case 15:
  case 16:
  case 17:
  case 18:
    s.lastBrkId = 818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[818]) return breakpoint(s, 48, 818, r0);
  case 48:
    r0 = (s.arg0).fields["_inputLastFrame"] = (true);
    { step = 20; continue; }
  case 19:
    s.lastBrkId = 819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[819]) return breakpoint(s, 49, 819, r0);
  case 49:
    r0 = (s.arg0).fields["_inputLastFrame"] = (false);
  case 20:
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate_inline__P34635.info = {"start":9867,"length":1171,"line":308,"column":44,"endLine":336,"endColumn":13,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["controlledSprite"]}

function controller_Controller___preUpdate_inline__P34635_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate_inline__P34635, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  s___34638: undefined,
  vx___34639: undefined,
  vy___34640: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate_inline__P34692(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["s"];
    r0 = r0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate_inline__P34692.info = {"start":11165,"length":42,"line":340,"column":28,"endLine":340,"endColumn":70,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["s"]}

function controller_Controller___preUpdate_inline__P34692_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate_inline__P34692, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller_Button_pressureLevel__P25367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 865;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[865]) return breakpoint(s, 6, 865, r0);
  case 6:
    r0 = pxsim.control.deviceDalVersion();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "sim");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 866;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[866]) return breakpoint(s, 7, 866, r0);
  case 7:
    s.tmp_3 = controller_Button__C25355_v0_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_3.arg0, controller_Button__C25355_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.isPressed;
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    r0 = 512;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
    { step = 5; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 867;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[867]) return breakpoint(s, 9, 867, r0);
  case 9:
    r0 = s.arg0.fields["id"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtcore.pressureLevelByButtonId(s.tmp_5, -1);
    { step = 5; continue; }
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
controller_Button_pressureLevel__P25367.info = {"start":6453,"length":311,"line":192,"column":8,"endLine":199,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"pressureLevel","argumentNames":["this"]}

function controller_Button_pressureLevel__P25367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_pressureLevel__P25367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function controller_Button_isPressed__P25366(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 864;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[864]) return breakpoint(s, 1, 864, r0);
  case 1:
    r0 = s.arg0.fields["_pressed"];
    return leave(s, r0)
  default: oops()
} } }
controller_Button_isPressed__P25366.info = {"start":6303,"length":57,"line":185,"column":8,"endLine":187,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"isPressed","argumentNames":["this"]}

function controller_Button_isPressed__P25366_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_isPressed__P25366, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_Controller_down__P25316(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 775;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[775]) return breakpoint(s, 1, 775, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P27646_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 4;
    s.callLocIdx = 158; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_down__P25316.info = {"start":3234,"length":77,"line":121,"column":8,"endLine":123,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"down","argumentNames":["this"]}
controller_Controller_down__P25316.isGetter = true;

function controller_Controller_down__P25316_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_down__P25316, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_button__P27646(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 776;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[776]) return breakpoint(s, 1, 776, r0);
  case 1:
    r0 = s.arg0.fields["buttons"];
    s.tmp_0 = r0;
    r0 = (s.arg1 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_button__P27646.info = {"start":5274,"length":105,"line":184,"column":8,"endLine":186,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"button","argumentNames":["this","button"]}

function controller_Controller_button__P27646_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_button__P27646, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller_up__P25315(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 774;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[774]) return breakpoint(s, 1, 774, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P27646_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 157; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_up__P25315.info = {"start":3082,"length":73,"line":113,"column":8,"endLine":115,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"up","argumentNames":["this"]}
controller_Controller_up__P25315.isGetter = true;

function controller_Controller_up__P25315_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_up__P25315, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_right__P25314(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 773;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[773]) return breakpoint(s, 1, 773, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P27646_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 3;
    s.callLocIdx = 156; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_right__P25314.info = {"start":2926,"length":79,"line":105,"column":8,"endLine":107,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"right","argumentNames":["this"]}
controller_Controller_right__P25314.isGetter = true;

function controller_Controller_right__P25314_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_right__P25314, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_left__P25313(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 772;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[772]) return breakpoint(s, 1, 772, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P27646_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 155; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_left__P25313.info = {"start":2769,"length":77,"line":97,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"left","argumentNames":["this"]}
controller_Controller_left__P25313.isGetter = true;

function controller_Controller_left__P25313_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_left__P25313, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller__controlledSprites__P25310(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 770;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[770]) return breakpoint(s, 1, 770, r0);
  case 1:
    s.tmp_1 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 154; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["controlledSprites"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_2, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller__controlledSprites__P25310.info = {"start":2403,"length":134,"line":81,"column":8,"endLine":83,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"_controlledSprites","argumentNames":["this","cps"]}

function controller_Controller__controlledSprites__P25310_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller__controlledSprites__P25310, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller__controlledSprites__P25309(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 769;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[769]) return breakpoint(s, 1, 769, r0);
  case 1:
    s.tmp_1 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 153; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["controlledSprites"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller__controlledSprites__P25309.info = {"start":2261,"length":132,"line":77,"column":8,"endLine":79,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"_controlledSprites","argumentNames":["this"]}
controller_Controller__controlledSprites__P25309.isGetter = true;

function controller_Controller__controlledSprites__P25309_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller__controlledSprites__P25309, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Fx_imul__P23532(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[216]) return breakpoint(s, 1, 216, r0);
  case 1:
    r0 = pxsim.Math_.imul(s.arg0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_imul__P23532.info = {"start":1010,"length":130,"line":32,"column":4,"endLine":34,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"imul","argumentNames":["a","b"]}

function Fx_imul__P23532_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_imul__P23532, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function power_checkDeepSleep__P25106(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___33445 = undefined;
    s.to___33448 = undefined;
    s.lastBrkId = 524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[524]) return breakpoint(s, 11, 524, r0);
  case 11:
    s.tmp_0 = power_init__P27568_mk(s);
    s.callLocIdx = 77; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[525]) return breakpoint(s, 13, 525, r0);
  case 13:
    s.tmp_0 = r0 = globals._poked___27566;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.p___33445 = (s.tmp_1);
    s.lastBrkId = 526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[526]) return breakpoint(s, 14, 526, r0);
  case 14:
    s.tmp_0 = r0 = globals._timeout___27567;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.to___33448 = (s.tmp_1);
    s.lastBrkId = 527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[527]) return breakpoint(s, 15, 527, r0);
  case 15:
    r0 = (s.to___33448 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.p___33445);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.to___33448);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_3;
    { step = 8; continue; }
  case 7:
    r0 = pxsim.control.isUSBInitialized();
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 8:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[528]) return breakpoint(s, 16, 528, r0);
  case 16:
    r0 = pxsim_pxtcore.deepSleep();
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_checkDeepSleep__P25106.info = {"start":1087,"length":298,"line":36,"column":4,"endLine":46,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"checkDeepSleep","argumentNames":[]}

function power_checkDeepSleep__P25106_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_checkDeepSleep__P25106, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  p___33445: undefined,
  to___33448: undefined,
} }





function power_init__P27568(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[529]) return breakpoint(s, 8, 529, r0);
  case 8:
    r0 = (globals._timeout___27567 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[530]) return breakpoint(s, 9, 530, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[531]) return breakpoint(s, 10, 531, r0);
  case 10:
    r0 = pxsim_pxtcore.getConfig(212, -1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 1000);
    globals._timeout___27567 = (r0);
    s.lastBrkId = 532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[532]) return breakpoint(s, 11, 532, r0);
  case 11:
    r0 = (globals._timeout___27567 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = (globals._timeout___27567 < 300000);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[533]) return breakpoint(s, 12, 533, r0);
  case 12:
    globals._timeout___27567 = (300000);
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_init__P27568.info = {"start":1610,"length":376,"line":57,"column":4,"endLine":66,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"init","argumentNames":[]}

function power_init__P27568_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_init__P27568, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function power_poke__P25105(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[522]) return breakpoint(s, 1, 522, r0);
  case 1:
    s.tmp_0 = power_init__P27568_mk(s);
    s.callLocIdx = 76; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[523]) return breakpoint(s, 3, 523, r0);
  case 3:
    r0 = pxsim.control.millis();
    globals._poked___27566 = (r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_poke__P25105.info = {"start":795,"length":81,"line":26,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"poke","argumentNames":[]}

function power_poke__P25105_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_poke__P25105, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function control_EventContext_deltaTime__P23771(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C23766_VT)) failedCast(r0);
    s.lastBrkId = 383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[383]) return breakpoint(s, 1, 383, r0);
  case 1:
    r0 = s.arg0.fields["deltaTimeMillis"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 1000);
    return leaveAccessor(s, r0)
  default: oops()
} } }
control_EventContext_deltaTime__P23771.info = {"start":2097,"length":75,"line":70,"column":8,"endLine":72,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"deltaTime","argumentNames":["this"]}
control_EventContext_deltaTime__P23771.isGetter = true;

function control_EventContext_deltaTime__P23771_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_deltaTime__P23771, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_Scene_constructor__P25969(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C25947_VT)) failedCast(r0);
    r0 = (s.arg0).fields["previousScene"] = (s.arg2);
    s.lastBrkId = 1844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1844]) return breakpoint(s, 1, 1844, r0);
  case 1:
    r0 = (s.arg0).fields["eventContext"] = (s.arg1);
    s.lastBrkId = 1845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1845]) return breakpoint(s, 2, 1845, r0);
  case 2:
    r0 = (s.arg0).fields["flags"] = (0);
    s.lastBrkId = 1846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1846]) return breakpoint(s, 3, 1846, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(ArcadePhysicsEngine__C25682_VT);
    s.tmp_0 = r0;
    s.tmp_1 = ArcadePhysicsEngine_constructor__P25683_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 500;
    s.tmp_1.arg2 = 2;
    s.tmp_1.arg3 = 4;
    s.callLocIdx = 890; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = (s.arg0).fields["physicsEngine"] = (s.tmp_0);
    s.lastBrkId = 1847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1847]) return breakpoint(s, 5, 1847, r0);
  case 5:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Camera__C25888_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_Camera_constructor__P25892_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 891; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    r0 = (s.arg0).fields["camera"] = (s.tmp_0);
    s.lastBrkId = 1848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1848]) return breakpoint(s, 7, 1848, r0);
  case 7:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Background__C25776_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_Background_constructor__P25780_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = s.arg0.fields["camera"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 892; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    r0 = (s.arg0).fields["background"] = (s.tmp_0);
    s.lastBrkId = 1849;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1849]) return breakpoint(s, 9, 1849, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["destroyedHandlers"] = (s.tmp_1);
    s.lastBrkId = 1850;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1850]) return breakpoint(s, 10, 1850, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["createdHandlers"] = (s.tmp_1);
    s.lastBrkId = 1851;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1851]) return breakpoint(s, 11, 1851, r0);
  case 11:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["overlapHandlers"] = (s.tmp_1);
    s.lastBrkId = 1852;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1852]) return breakpoint(s, 12, 1852, r0);
  case 12:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["overlapMap"] = (s.tmp_1);
    s.lastBrkId = 1853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1853]) return breakpoint(s, 13, 1853, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["tileOverlapHandlers"] = (s.tmp_1);
    s.lastBrkId = 1854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1854]) return breakpoint(s, 14, 1854, r0);
  case 14:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["collisionHandlers"] = (s.tmp_1);
    s.lastBrkId = 1855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1855]) return breakpoint(s, 15, 1855, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["wallCollisionHandlers"] = (s.tmp_1);
    s.lastBrkId = 1856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1856]) return breakpoint(s, 16, 1856, r0);
  case 16:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["gameForeverHandlers"] = (s.tmp_1);
    s.lastBrkId = 1857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1857]) return breakpoint(s, 17, 1857, r0);
  case 17:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spritesByKind"] = (s.tmp_1);
    s.lastBrkId = 1858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1858]) return breakpoint(s, 18, 1858, r0);
  case 18:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["controlledSprites"] = (s.tmp_1);
    s.lastBrkId = 1859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1859]) return breakpoint(s, 19, 1859, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buttonEventHandlers"] = (s.tmp_1);
    s.lastBrkId = 1860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1860]) return breakpoint(s, 20, 1860, r0);
  case 20:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_data"] = (s.tmp_1);
    s.lastBrkId = 1861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1861]) return breakpoint(s, 21, 1861, r0);
  case 21:
    r0 = (s.arg0).fields["_millis"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_constructor__P25969.info = {"start":3432,"length":836,"line":103,"column":8,"endLine":122,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["this","eventContext","previousScene"]}

function scene_Scene_constructor__P25969_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_constructor__P25969, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Camera_constructor__P25892(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C25888_VT)) failedCast(r0);
    s.lastBrkId = 1800;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1800]) return breakpoint(s, 1, 1800, r0);
  case 1:
    r0 = (s.arg0).fields["_offsetX"] = (0);
    s.lastBrkId = 1801;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1801]) return breakpoint(s, 2, 1801, r0);
  case 2:
    r0 = (s.arg0).fields["_offsetY"] = (0);
    s.lastBrkId = 1802;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1802]) return breakpoint(s, 3, 1802, r0);
  case 3:
    r0 = (s.arg0).fields["drawOffsetX"] = (0);
    s.lastBrkId = 1803;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1803]) return breakpoint(s, 4, 1803, r0);
  case 4:
    r0 = (s.arg0).fields["drawOffsetY"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_constructor__P25892.info = {"start":456,"length":156,"line":15,"column":8,"endLine":21,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"inline","argumentNames":["this"]}

function scene_Camera_constructor__P25892_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_constructor__P25892, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Background_constructor__P25780(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C25776_VT)) failedCast(r0);
    s.lastBrkId = 1602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1602]) return breakpoint(s, 1, 1602, r0);
  case 1:
    r0 = (s.arg0).fields["color"] = (0);
    s.lastBrkId = 1603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1603]) return breakpoint(s, 2, 1603, r0);
  case 2:
    r0 = (s.arg0).fields["camera"] = (s.arg1);
    s.lastBrkId = 1604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1604]) return breakpoint(s, 3, 1604, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_layers"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_constructor__P25780.info = {"start":367,"length":132,"line":20,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["this","camera"]}

function scene_Background_constructor__P25780_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_constructor__P25780, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_constructor__P25683(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1298]) return breakpoint(s, 1, 1298, r0);
  case 1:
    s.tmp_0 = PhysicsEngine_constructor__P25667_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 543; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1299]) return breakpoint(s, 3, 1299, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["sprites"] = (s.tmp_1);
    s.lastBrkId = 1300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1300]) return breakpoint(s, 4, 1300, r0);
  case 4:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_SpriteMap__C25601_VT);
    s.tmp_0 = r0;
    s.tmp_1 = sprites_SpriteMap_constructor__P25602_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 544; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = (s.arg0).fields["map"] = (s.tmp_0);
    s.lastBrkId = 1301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1301]) return breakpoint(s, 6, 1301, r0);
  case 6:
    s.tmp_0 = ArcadePhysicsEngine_maxSpeed__P25685_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 545; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1302]) return breakpoint(s, 8, 1302, r0);
  case 8:
    s.tmp_0 = ArcadePhysicsEngine_maxStep__P25689_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 546; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 1303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1303]) return breakpoint(s, 10, 1303, r0);
  case 10:
    s.tmp_0 = ArcadePhysicsEngine_minStep__P25687_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 547; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_constructor__P25683.info = {"start":1601,"length":277,"line":58,"column":4,"endLine":65,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this","maxVelocity","minSingleStep","maxSingleStep"]}

function ArcadePhysicsEngine_constructor__P25683_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_constructor__P25683, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_maxStep__P25689(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1310]) return breakpoint(s, 1, 1310, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 554; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxSingleStep"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxStep__P25689.info = {"start":2329,"length":67,"line":88,"column":4,"endLine":90,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxStep","argumentNames":["this","v"]}

function ArcadePhysicsEngine_maxStep__P25689_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxStep__P25689, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_maxStep__P25688(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1309]) return breakpoint(s, 1, 1309, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P23543_mk(s);
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 553; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxStep__P25688.info = {"start":2249,"length":74,"line":84,"column":4,"endLine":86,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxStep","argumentNames":["this"]}
ArcadePhysicsEngine_maxStep__P25688.isGetter = true;

function ArcadePhysicsEngine_maxStep__P25688_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxStep__P25688, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_toInt__P23543(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[231]) return breakpoint(s, 1, 231, r0);
  case 1:
    r0 = (s.arg0 + 128);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Fx_toInt__P23543.info = {"start":2379,"length":86,"line":74,"column":4,"endLine":76,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toInt","argumentNames":["v"]}

function Fx_toInt__P23543_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toInt__P23543, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_minStep__P25687(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1308]) return breakpoint(s, 1, 1308, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 552; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["minSingleStep"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_minStep__P25687.info = {"start":2176,"length":67,"line":80,"column":4,"endLine":82,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"minStep","argumentNames":["this","v"]}

function ArcadePhysicsEngine_minStep__P25687_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_minStep__P25687, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_minStep__P25686(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1307]) return breakpoint(s, 1, 1307, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P23543_mk(s);
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 551; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_minStep__P25686.info = {"start":2096,"length":74,"line":76,"column":4,"endLine":78,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"minStep","argumentNames":["this"]}
ArcadePhysicsEngine_minStep__P25686.isGetter = true;

function ArcadePhysicsEngine_minStep__P25686_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_minStep__P25686, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_maxSpeed__P25685(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1305;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1305]) return breakpoint(s, 1, 1305, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 549; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxVelocity"] = (s.tmp_1);
    s.lastBrkId = 1306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1306]) return breakpoint(s, 3, 1306, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx_neg__P23526_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 550; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxNegativeVelocity"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxSpeed__P25685.info = {"start":1963,"length":127,"line":71,"column":4,"endLine":74,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxSpeed","argumentNames":["this","v"]}

function ArcadePhysicsEngine_maxSpeed__P25685_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxSpeed__P25685, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_neg__P23526(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[210]) return breakpoint(s, 1, 210, r0);
  case 1:
    r0 = (0 - s.arg0);
    return leave(s, r0)
  default: oops()
} } }
Fx_neg__P23526.info = {"start":311,"length":88,"line":14,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"neg","argumentNames":["a"]}

function Fx_neg__P23526_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_neg__P23526, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function ArcadePhysicsEngine_maxSpeed__P25684(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1304]) return breakpoint(s, 1, 1304, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P23543_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 548; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxSpeed__P25684.info = {"start":1884,"length":73,"line":67,"column":4,"endLine":69,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxSpeed","argumentNames":["this"]}
ArcadePhysicsEngine_maxSpeed__P25684.isGetter = true;

function ArcadePhysicsEngine_maxSpeed__P25684_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxSpeed__P25684, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_constructor__P25667(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C25666_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_constructor__P25667.info = {"start":26,"length":21,"line":1,"column":4,"endLine":2,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this"]}

function PhysicsEngine_constructor__P25667_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_constructor__P25667, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_SpriteMap_constructor__P25602(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1195]) return breakpoint(s, 1, 1195, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buckets"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_constructor__P25602.info = {"start":237,"length":56,"line":8,"column":8,"endLine":10,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["this"]}

function sprites_SpriteMap_constructor__P25602_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_constructor__P25602, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function music_Melody_constructor__P24990(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C24987_VT)) failedCast(r0);
    s.lastBrkId = 507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[507]) return breakpoint(s, 1, 507, r0);
  case 1:
    r0 = (s.arg0).fields["_text"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_constructor__P24990.info = {"start":6328,"length":67,"line":199,"column":8,"endLine":201,"endColumn":9,"fileName":"pxt_modules/mixer---stm32/melody.ts","functionName":"inline","argumentNames":["this","text"]}

function music_Melody_constructor__P24990_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_constructor__P24990, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function control_pushEventContext__P23780(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___35001 = undefined;
    s.n___35007 = undefined;
    s.lastBrkId = 456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[456]) return breakpoint(s, 5, 456, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___27499);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[457]) return breakpoint(s, 6, 457, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals.eventContexts___27499 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[458]) return breakpoint(s, 7, 458, r0);
  case 7:
    s.tmp_0 = control_eventContext__P23779_mk(s);
    s.callLocIdx = 57; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.ctx___35001 = (r0);
    s.lastBrkId = 459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[459]) return breakpoint(s, 9, 459, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.ctx___35001);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[460]) return breakpoint(s, 10, 460, r0);
  case 10:
    s.tmp_0 = control_EventContext_unregister__P23773_mk(s);
    s.tmp_0.arg0 = s.ctx___35001;
    s.callLocIdx = 58; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[461]) return breakpoint(s, 12, 461, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(control_EventContext__C23766_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventContext_constructor__P23770_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 59; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.n___35007 = (s.tmp_0);
    s.lastBrkId = 462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[462]) return breakpoint(s, 14, 462, r0);
  case 14:
    r0 = pxsim_Array__push(globals.eventContexts___27499, s.n___35007);
    s.lastBrkId = 463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[463]) return breakpoint(s, 15, 463, r0);
  case 15:
    r0 = s.n___35007;
    return leave(s, r0)
  default: oops()
} } }
control_pushEventContext__P23780.info = {"start":7123,"length":340,"line":216,"column":4,"endLine":227,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"pushEventContext","argumentNames":[]}

function control_pushEventContext__P23780_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pushEventContext__P23780, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___35001: undefined,
  n___35007: undefined,
} }





function control_EventContext_unregister__P23773(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___35036 = undefined;
    s.unnamed358___U1 = undefined;
    s.unnamed359___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C23766_VT)) failedCast(r0);
    s.lastBrkId = 427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[427]) return breakpoint(s, 3, 427, r0);
  case 3:
    s.h___35036 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed358___U1 = (r0);
    s.unnamed359___U2 = (0);
    s.lastBrkId = 428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[428]) return breakpoint(s, 4, 428, r0);
  case 4:
  case 1:
    s.tmp_0 = r0 = s.unnamed359___U2;
    r0 = pxsim_Array__length(s.unnamed358___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed358___U1, s.unnamed359___U2);
    s.h___35036 = (r0);
    s.lastBrkId = 429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[429]) return breakpoint(s, 5, 429, r0);
  case 5:
    s.tmp_2 = control_EventHandler_unregister__P27493_mk(s);
    s.tmp_2.arg0 = s.h___35036;
    s.callLocIdx = 53; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    r0 = (s.unnamed359___U2 + 1);
    s.unnamed359___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed358___U1 = (undefined);
    s.lastBrkId = 430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[430]) return breakpoint(s, 7, 430, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["frameWorker"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["frameWorker"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_unregister__P23773.info = {"start":4534,"length":131,"line":137,"column":8,"endLine":141,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"unregister","argumentNames":["this"]}

function control_EventContext_unregister__P23773_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_unregister__P23773, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  h___35036: undefined,
  unnamed358___U1: undefined,
  unnamed359___U2: undefined,
  arg0: undefined,
} }





function control_EventHandler_unregister__P27493(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C27491_VT)) failedCast(r0);
    s.lastBrkId = 374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[374]) return breakpoint(s, 1, 374, r0);
  case 1:
    r0 = s.arg0.fields["src"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_0, s.tmp_1, control_doNothing__P27495, s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_unregister__P27493.info = {"start":1136,"length":106,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"unregister","argumentNames":["this"]}

function control_EventHandler_unregister__P27493_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_unregister__P27493, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function control_doNothing__P27495(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_doNothing__P27495.info = {"start":1254,"length":24,"line":41,"column":4,"endLine":41,"endColumn":28,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"doNothing","argumentNames":[]}

function control_doNothing__P27495_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_doNothing__P27495, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function control_EventContext_constructor__P23770(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C23766_VT)) failedCast(r0);
    s.lastBrkId = 375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[375]) return breakpoint(s, 3, 375, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["handlers"] = (s.tmp_1);
    s.lastBrkId = 376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[376]) return breakpoint(s, 4, 376, r0);
  case 4:
    r0 = (s.arg0).fields["framesInSample"] = (0);
    s.lastBrkId = 377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[377]) return breakpoint(s, 5, 377, r0);
  case 5:
    r0 = (s.arg0).fields["timeInSample"] = (0);
    s.lastBrkId = 378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[378]) return breakpoint(s, 6, 378, r0);
  case 6:
    r0 = (s.arg0).fields["deltaTimeMillis"] = (0);
    s.lastBrkId = 379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[379]) return breakpoint(s, 7, 379, r0);
  case 7:
    r0 = (s.arg0).fields["frameWorker"] = (0);
    s.lastBrkId = 380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[380]) return breakpoint(s, 8, 380, r0);
  case 8:
    r0 = (s.arg0).fields["idleCallbacks"] = (undefined);
    s.lastBrkId = 381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[381]) return breakpoint(s, 9, 381, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(globals.control_EventContext_lastStats___23768);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[382]) return breakpoint(s, 10, 382, r0);
  case 10:
    r0 = pxsim_String_.mkEmpty();
    globals.control_EventContext_lastStats___23768 = (r0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_constructor__P23770.info = {"start":1740,"length":347,"line":58,"column":8,"endLine":68,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this"]}

function control_EventContext_constructor__P23770_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_constructor__P23770, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function controller_pauseUntilAnyButtonIsPressed__P25371(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[913]) return breakpoint(s, 1, 913, r0);
  case 1:
    setupResume(s, 2);
    pxsim.control.waitForEvent(2049, 0);
    checkResumeConsumed();
    return;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_pauseUntilAnyButtonIsPressed__P25371.info = {"start":9968,"length":96,"line":287,"column":4,"endLine":289,"endColumn":5,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"pauseUntilAnyButtonIsPressed","argumentNames":[]}

function controller_pauseUntilAnyButtonIsPressed__P25371_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_pauseUntilAnyButtonIsPressed__P25371, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_setWaitAnyButton__P26062(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1924;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1924]) return breakpoint(s, 1, 1924, r0);
  case 1:
    globals.__waitAnyButton___27843 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_setWaitAnyButton__P26062.info = {"start":878,"length":83,"line":31,"column":4,"endLine":33,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"setWaitAnyButton","argumentNames":["f"]}

function game_setWaitAnyButton__P26062_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_setWaitAnyButton__P26062, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Math_FastRandom_constructor__P26118(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C26116_VT)) failedCast(r0);
    s.lastBrkId = 1981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1981]) return breakpoint(s, 3, 1981, r0);
  case 3:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1982]) return breakpoint(s, 4, 1982, r0);
  case 4:
    r0 = pxsim.Math_.randomRange(1, 65535);
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 1983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1983]) return breakpoint(s, 5, 1983, r0);
  case 5:
    r0 = (s.arg0).fields["seed"] = (s.arg1);
    s.lastBrkId = 1984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1984]) return breakpoint(s, 6, 1984, r0);
  case 6:
    r0 = (s.arg0).fields["lfsr"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_constructor__P26118.info = {"start":1425,"length":175,"line":44,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"inline","argumentNames":["this","seed"]}

function Math_FastRandom_constructor__P26118_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_constructor__P26118, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_consoleOverlay_listener__P28172(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2190]) return breakpoint(s, 8, 2190, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___28137);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2191]) return breakpoint(s, 9, 2191, r0);
  case 9:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2192]) return breakpoint(s, 10, 2192, r0);
  case 10:
    s.tmp_4 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_5 = helpers_arrayFilter__P23481_mk(s);
    s.tmp_6 = helpers_stringSplit__P23493_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.tmp_6.arg1 = "\n";
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1106; s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = forEach_inline__P35238;
    s.callLocIdx = 1107; s.pc = 12; return s.tmp_5;
  case 12:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = game_consoleOverlay_listener_inline__P35243;
    s.callLocIdx = 1109; s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2198]) return breakpoint(s, 14, 2198, r0);
  case 14:
    r0 = pxsim_Array__length(globals.consoleStrings___28137);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > globals.consoleLines___28150);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2199]) return breakpoint(s, 15, 2199, r0);
  case 15:
    s.tmp_2 = helpers_arraySplice__P23471_mk(s);
    s.tmp_2.arg0 = globals.consoleStrings___28137;
    s.tmp_2.arg1 = 0;
    r0 = pxsim_Array__length(globals.consoleStrings___28137);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - globals.consoleLines___28150);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1110; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_listener__P28172.info = {"start":787,"length":571,"line":26,"column":4,"endLine":42,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"listener","argumentNames":["priority","text"]}

function game_consoleOverlay_listener__P28172_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_listener__P28172, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function forEach_inline__P35238(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P35238.info = {"start":985,"length":14,"line":32,"column":20,"endLine":32,"endColumn":34,"fileName":"pxt_modules/game/console.ts","functionName":"inline","argumentNames":["line"]}

function forEach_inline__P35238_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P35238, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_consoleOverlay_listener_inline__P35243(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.j___35245 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2193]) return breakpoint(s, 3, 2193, r0);
  case 3:
    s.j___35245 = (0);
    s.lastBrkId = 2194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2194]) return breakpoint(s, 4, 2194, r0);
  case 4:
  case 1:
    s.lastBrkId = 2195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2195]) return breakpoint(s, 5, 2195, r0);
  case 5:
    s.tmp_1 = r0 = s.j___35245;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2196]) return breakpoint(s, 6, 2196, r0);
  case 6:
    s.tmp_3 = r0 = globals.consoleStrings___28137;
    s.tmp_5 = helpers_stringSlice__P23490_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = s.j___35245;
    r0 = (s.j___35245 + globals.consoleColumns___28160);
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 1108; s.pc = 7; return s.tmp_5;
  case 7:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_4);
    s.lastBrkId = 2197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2197]) return breakpoint(s, 8, 2197, r0);
  case 8:
    r0 = (s.j___35245 + globals.consoleColumns___28160);
    s.j___35245 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_listener_inline__P35243.info = {"start":1022,"length":189,"line":33,"column":21,"endLine":37,"endColumn":13,"fileName":"pxt_modules/game/console.ts","functionName":"inline","argumentNames":["line"]}

function game_consoleOverlay_listener_inline__P35243_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_listener_inline__P35243, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  j___35245: undefined,
  arg0: undefined,
} }





function console_addListener__P23754(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[364]) return breakpoint(s, 6, 364, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array_.indexOf(globals.listeners___27477, s.arg0, undefined);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > -1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[365]) return breakpoint(s, 7, 365, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[366]) return breakpoint(s, 8, 366, r0);
  case 8:
    r0 = pxsim_Array__push(globals.listeners___27477, s.arg0);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_addListener__P23754.info = {"start":3558,"length":197,"line":121,"column":4,"endLine":124,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"addListener","argumentNames":["listener"]}

function console_addListener__P23754_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_addListener__P23754, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function _screen_internal_createScreen__P25208(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.img___35291 = undefined;
    s.status___35295 = undefined;
    s.lastBrkId = 681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[681]) return breakpoint(s, 1, 681, r0);
  case 1:
    r0 = pxsim.image.create(160, 120);
    s.img___35291 = (r0);
    s.lastBrkId = 682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[682]) return breakpoint(s, 2, 682, r0);
  case 2:
    s.tmp_0 = _screen_internal_setupScreenStatusBar__P27605_mk(s);
    s.tmp_0.arg0 = 8;
    s.callLocIdx = 116; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[683]) return breakpoint(s, 4, 683, r0);
  case 4:
    r0 = pxsim.image.create(160, 8);
    s.status___35295 = (r0);
    s.lastBrkId = 684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[684]) return breakpoint(s, 5, 684, r0);
  case 5:
    s.tmp_0 = _screen_internal_updateScreenStatusBar__P27604_mk(s);
    s.tmp_0.arg0 = s.status___35295;
    s.callLocIdx = 117; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 685;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[685]) return breakpoint(s, 7, 685, r0);
  case 7:
    r0 = pxsim_pxtcore_mkAction(1, _screen_internal_createScreen_inline__P35301);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.img___35291);
    s.tmp_1 = control___screen_setupUpdate__P25166_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 118; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 686;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[686]) return breakpoint(s, 9, 686, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, _screen_internal_createScreen_inline__P35306);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.status___35295);
    globals.control_EventContext_onStats___23769 = (s.tmp_0);
    s.lastBrkId = 691;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[691]) return breakpoint(s, 10, 691, r0);
  case 10:
    r0 = s.img___35291;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_createScreen__P25208.info = {"start":948,"length":547,"line":28,"column":4,"endLine":44,"endColumn":5,"fileName":"pxt_modules/screen---st7735/targetoverrides.ts","functionName":"createScreen","argumentNames":[]}

function _screen_internal_createScreen__P25208_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_createScreen__P25208, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  img___35291: undefined,
  status___35295: undefined,
} }





function _screen_internal_createScreen_inline__P35301(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore.updateScreen(s.caps[0]);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_createScreen_inline__P35301.info = {"start":1204,"length":23,"line":35,"column":37,"endLine":35,"endColumn":60,"fileName":"pxt_modules/screen---st7735/targetoverrides.ts","functionName":"inline","argumentNames":[]}

function _screen_internal_createScreen_inline__P35301_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_createScreen_inline__P35301, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function _screen_internal_createScreen_inline__P35306(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 687;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[687]) return breakpoint(s, 1, 687, r0);
  case 1:
    r0 = pxsim_ImageMethods.fill(s.caps[0], 0);
    s.lastBrkId = 688;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[688]) return breakpoint(s, 2, 688, r0);
  case 2:
    s.tmp_0 = helpers_imagePrint__P25162_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = 2;
    s.tmp_0.arg3 = 2;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = globals.font5___25152;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 119; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 689;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[689]) return breakpoint(s, 4, 689, r0);
  case 4:
    s.tmp_0 = _screen_internal_updateScreenStatusBar__P27604_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 120; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 690;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[690]) return breakpoint(s, 6, 690, r0);
  case 6:
    r0 = pxsim_pxtcore.updateStats(s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_createScreen_inline__P35306.info = {"start":1268,"length":185,"line":36,"column":39,"endLine":41,"endColumn":9,"fileName":"pxt_modules/screen---st7735/targetoverrides.ts","functionName":"inline","argumentNames":["msg"]}

function _screen_internal_createScreen_inline__P35306_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_createScreen_inline__P35306, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function _screen_internal_setupScreenStatusBar__P27605(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[680]) return breakpoint(s, 1, 680, r0);
  case 1:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_setupScreenStatusBar__P27605.info = {"start":877,"length":65,"line":26,"column":4,"endLine":26,"endColumn":69,"fileName":"pxt_modules/screen---st7735/targetoverrides.ts","functionName":"setupScreenStatusBar","argumentNames":["barHeight"]}

function _screen_internal_setupScreenStatusBar__P27605_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_setupScreenStatusBar__P27605, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function _screen_internal_updateScreenStatusBar__P27604(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[679]) return breakpoint(s, 1, 679, r0);
  case 1:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_updateScreenStatusBar__P27604.info = {"start":774,"length":59,"line":24,"column":4,"endLine":24,"endColumn":63,"fileName":"pxt_modules/screen---st7735/targetoverrides.ts","functionName":"updateScreenStatusBar","argumentNames":["img"]}

function _screen_internal_updateScreenStatusBar__P27604_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_updateScreenStatusBar__P27604, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function control___screen_setupUpdate__P25166(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 666;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[666]) return breakpoint(s, 1, 666, r0);
  case 1:
    globals.__updated___27586 = (true);
    s.lastBrkId = 667;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[667]) return breakpoint(s, 2, 667, r0);
  case 2:
    globals.__update___27584 = (s.arg0);
    s.lastBrkId = 668;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[668]) return breakpoint(s, 3, 668, r0);
  case 3:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.arg0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 112; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_setupUpdate__P25166.info = {"start":198,"length":125,"line":10,"column":4,"endLine":14,"endColumn":5,"fileName":"pxt_modules/screen---st7735/frame.ts","functionName":"setupUpdate","argumentNames":["update"]}

function control___screen_setupUpdate__P25166_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_setupUpdate__P25166, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_register__P26163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2150]) return breakpoint(s, 4, 2150, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals.instance___28091);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2151]) return breakpoint(s, 5, 2151, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2152]) return breakpoint(s, 6, 2152, r0);
  case 6:
    s.tmp_0 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_0.arg0 = globals.menu___25289;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = scene_systemMenu_showSystemMenu__P26164;
    s.callLocIdx = 1093; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_register__P26163.info = {"start":12793,"length":193,"line":382,"column":4,"endLine":386,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"register","argumentNames":[]}

function scene_systemMenu_register__P26163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_register__P26163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_showSystemMenu__P26164(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2153]) return breakpoint(s, 4, 2153, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals.instance___28091);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2154]) return breakpoint(s, 5, 2154, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2155]) return breakpoint(s, 6, 2155, r0);
  case 6:
    s.tmp_0 = game_pushScene__P26065_mk(s);
    s.callLocIdx = 1094; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2156]) return breakpoint(s, 8, 2156, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_PauseMenu__C26152_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_PauseMenu_constructor__P26153_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = scene_systemMenu_buildOptionList__P26160;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1095; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    globals.instance___28091 = (s.tmp_0);
    s.lastBrkId = 2157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2157]) return breakpoint(s, 10, 2157, r0);
  case 10:
    s.tmp_0 = scene_systemMenu_PauseMenu_show__P26154_mk(s);
    s.tmp_0.arg0 = globals.instance___28091;
    s.callLocIdx = 1096; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_showSystemMenu__P26164.info = {"start":12992,"length":172,"line":388,"column":4,"endLine":393,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"showSystemMenu","argumentNames":[]}

function scene_systemMenu_showSystemMenu__P26164_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_showSystemMenu__P26164, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_systemMenu_buildOptionList__P26160(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.options___37000 = undefined;
    s.lastBrkId = 2133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2133]) return breakpoint(s, 5, 2133, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.options___37000 = (r0);
    s.lastBrkId = 2134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2134]) return breakpoint(s, 6, 2134, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C26144_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P26145_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.VOLUME_DOWN_ICON___26174;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P37008;
    s.tmp_1.arg3 = scene_systemMenu_volumeDown__P28097;
    s.callLocIdx = 1076; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___37000, s.tmp_0);
    s.lastBrkId = 2135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2135]) return breakpoint(s, 8, 2135, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C26144_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P26145_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.VOLUME_UP_ICON___26171;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P37022;
    s.tmp_1.arg3 = scene_systemMenu_volumeUp__P28096;
    s.callLocIdx = 1078; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___37000, s.tmp_0);
    s.lastBrkId = 2136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2136]) return breakpoint(s, 10, 2136, r0);
  case 10:
    s.tmp_1 = scene_systemMenu_setScreenBrightnessSupported__P28104_mk(s);
    s.callLocIdx = 1079; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2137]) return breakpoint(s, 12, 2137, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C26144_VT);
    s.tmp_2 = r0;
    s.tmp_3 = scene_systemMenu_MenuOption_constructor__P26145_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.tmp_3.arg1 = globals.BRIGHTNESS_DOWN_ICON___26172;
    s.tmp_3.arg2 = scene_systemMenu_buildOptionList_inline__P37037;
    s.tmp_3.arg3 = scene_systemMenu_brightnessDown__P28099;
    s.callLocIdx = 1081; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___37000, s.tmp_2);
    s.lastBrkId = 2138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2138]) return breakpoint(s, 14, 2138, r0);
  case 14:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C26144_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P26145_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.BRIGHTNESS_UP_ICON___26177;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P37052;
    s.tmp_1.arg3 = scene_systemMenu_brightnessUp__P28098;
    s.callLocIdx = 1083; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___37000, s.tmp_0);
  case 1:
  case 2:
    s.lastBrkId = 2139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2139]) return breakpoint(s, 16, 2139, r0);
  case 16:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C26144_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P26145_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.STATS_ICON___26178;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P37067;
    s.tmp_1.arg3 = scene_systemMenu_toggleStats__P28101;
    s.callLocIdx = 1084; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___37000, s.tmp_0);
    s.lastBrkId = 2140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2140]) return breakpoint(s, 18, 2140, r0);
  case 18:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C26144_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P26145_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.CONSOLE_ICON___26176;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P37076;
    s.tmp_1.arg3 = scene_systemMenu_toggleConsole__P28102;
    s.callLocIdx = 1086; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___37000, s.tmp_0);
    s.lastBrkId = 2141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2141]) return breakpoint(s, 20, 2141, r0);
  case 20:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C26144_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P26145_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.SLEEP_ICON___26175;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P37085;
    s.tmp_1.arg3 = scene_systemMenu_sleep__P28103;
    s.callLocIdx = 1087; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___37000, s.tmp_0);
    s.lastBrkId = 2142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2142]) return breakpoint(s, 22, 2142, r0);
  case 22:
    r0 = pxsim_numops_toBoolDecr(globals.customMenuOptions___28092);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2143]) return breakpoint(s, 23, 2143, r0);
  case 23:
    s.tmp_0 = helpers_arrayConcat__P23484_mk(s);
    s.tmp_0.arg0 = s.options___37000;
    s.tmp_0.arg1 = globals.customMenuOptions___28092;
    s.callLocIdx = 1088; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.options___37000 = (r0);
  case 3:
  case 4:
    s.lastBrkId = 2144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2144]) return breakpoint(s, 25, 2144, r0);
  case 25:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C26144_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P26145_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.CLOSE_MENU_ICON___26173;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P37098;
    s.tmp_1.arg3 = scene_systemMenu_closeMenu__P26159;
    s.callLocIdx = 1089; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___37000, s.tmp_0);
    s.lastBrkId = 2145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2145]) return breakpoint(s, 27, 2145, r0);
  case 27:
    r0 = s.options___37000;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList__P26160.info = {"start":10499,"length":1149,"line":334,"column":4,"endLine":354,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"buildOptionList","argumentNames":[]}

function scene_systemMenu_buildOptionList__P26160_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList__P26160, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  options___37000: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P37008(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = music_volume__P24982_mk(s);
    s.callLocIdx = 1075; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("VOLUME DOWN (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P37008.info = {"start":10644,"length":39,"line":337,"column":54,"endLine":337,"endColumn":93,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P37008_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P37008, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P37022(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = music_volume__P24982_mk(s);
    s.callLocIdx = 1077; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("VOLUME UP (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P37022.info = {"start":10751,"length":37,"line":338,"column":52,"endLine":338,"endColumn":89,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P37022_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P37022, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P37037(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = helpers_screenBrightness__P25138_mk(s);
    s.tmp_3.arg0 = globals.screen___25204;
    s.callLocIdx = 1080; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("BRIGHTNESS DOWN (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P37037.info = {"start":10910,"length":48,"line":340,"column":62,"endLine":340,"endColumn":110,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P37037_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P37037, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P37052(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = helpers_screenBrightness__P25138_mk(s);
    s.tmp_3.arg0 = globals.screen___25204;
    s.callLocIdx = 1082; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("BRIGHTNESS UP (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P37052.info = {"start":11038,"length":46,"line":341,"column":60,"endLine":341,"endColumn":106,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P37052_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P37052, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P37067(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.stats___26058);
    if (!r0) { step = 1; continue; }
    r0 = "HIDE STATS";
    { step = 2; continue; }
  case 1:
    r0 = "SHOW STATS";
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P37067.info = {"start":11160,"length":46,"line":343,"column":48,"endLine":343,"endColumn":94,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P37067_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P37067, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P37076(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_1 = game_consoleOverlay_isVisible__P26181_mk(s);
    s.callLocIdx = 1085; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "HIDE CONSOLE";
    { step = 2; continue; }
  case 1:
    r0 = "SHOW CONSOLE";
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P37076.info = {"start":11273,"length":71,"line":344,"column":50,"endLine":344,"endColumn":121,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P37076_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P37076, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P37085(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = "SLEEP";
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P37085.info = {"start":11411,"length":13,"line":345,"column":48,"endLine":345,"endColumn":61,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P37085_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P37085, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_buildOptionList_inline__P37098(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = "CLOSE";
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P37098.info = {"start":11590,"length":13,"line":351,"column":53,"endLine":351,"endColumn":66,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P37098_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P37098, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_setScreenBrightnessSupported__P28104(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2132]) return breakpoint(s, 1, 2132, r0);
  case 1:
    r0 = 0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setScreenBrightnessSupported__P28104.info = {"start":10398,"length":95,"line":330,"column":4,"endLine":332,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setScreenBrightnessSupported","argumentNames":[]}

function scene_systemMenu_setScreenBrightnessSupported__P28104_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setScreenBrightnessSupported__P28104, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_sleep__P28103(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2126]) return breakpoint(s, 1, 2126, r0);
  case 1:
    r0 = pxsim_pxtcore.deepSleep();
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_sleep__P28103.info = {"start":10072,"length":51,"line":316,"column":4,"endLine":318,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"sleep","argumentNames":[]}

function scene_systemMenu_sleep__P28103_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_sleep__P28103, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_toggleConsole__P28102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2122]) return breakpoint(s, 3, 2122, r0);
  case 3:
    s.tmp_1 = game_consoleOverlay_isVisible__P26181_mk(s);
    s.callLocIdx = 1068; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2123]) return breakpoint(s, 5, 2123, r0);
  case 5:
    s.tmp_2 = game_consoleOverlay_setVisible__P26183_mk(s);
    s.tmp_2.arg0 = false;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 1069; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2124]) return breakpoint(s, 7, 2124, r0);
  case 7:
    s.tmp_0 = game_consoleOverlay_setVisible__P26183_mk(s);
    s.tmp_0.arg0 = true;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 1070; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2125]) return breakpoint(s, 9, 2125, r0);
  case 9:
    s.tmp_0 = console_log__P23751_mk(s);
    s.tmp_0.arg0 = "console";
    s.callLocIdx = 1071; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_toggleConsole__P28102.info = {"start":9827,"length":239,"line":307,"column":4,"endLine":314,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"toggleConsole","argumentNames":[]}

function scene_systemMenu_toggleConsole__P28102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_toggleConsole__P28102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function game_consoleOverlay_setVisible__P26183(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2186]) return breakpoint(s, 7, 2186, r0);
  case 7:
    s.tmp_1 = r0 = s.arg0;
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___28137);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 != s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2187]) return breakpoint(s, 8, 2187, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    globals.consoleStrings___28137 = (s.tmp_6);
  case 3:
  case 4:
    s.lastBrkId = 2188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2188]) return breakpoint(s, 9, 2188, r0);
  case 9:
    r0 = (s.arg1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2189]) return breakpoint(s, 10, 2189, r0);
  case 10:
    globals.consoleColor___28136 = (s.arg1);
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_setVisible__P26183.info = {"start":562,"length":219,"line":19,"column":4,"endLine":24,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"setVisible","argumentNames":["value","col"]}

function game_consoleOverlay_setVisible__P26183_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_setVisible__P26183, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_toggleStats__P28101(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2119]) return breakpoint(s, 5, 2119, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals.stats___26058);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    globals.stats___26058 = (r0);
    s.lastBrkId = 2120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2120]) return breakpoint(s, 6, 2120, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(globals.stats___26058);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.control_EventContext_onStats___23769;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2121]) return breakpoint(s, 7, 2121, r0);
  case 7:
    s.tmp_3 = lambda_2_mk(s);
    s.tmp_3.argL = globals.control_EventContext_onStats___23769;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3.arg0 = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 1067; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_toggleStats__P28101.info = {"start":9642,"length":179,"line":300,"column":4,"endLine":305,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"toggleStats","argumentNames":[]}

function scene_systemMenu_toggleStats__P28101_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_toggleStats__P28101, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_brightnessDown__P28099(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2116]) return breakpoint(s, 1, 2116, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_setScreenBrightness__P28100_mk(s);
    s.tmp_2 = helpers_screenBrightness__P25138_mk(s);
    s.tmp_2.arg0 = globals.screen___25204;
    s.callLocIdx = 1062; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 5);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1063; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_brightnessDown__P28099.info = {"start":9198,"length":87,"line":289,"column":4,"endLine":291,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"brightnessDown","argumentNames":[]}

function scene_systemMenu_brightnessDown__P28099_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_brightnessDown__P28099, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_setScreenBrightness__P28100(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2117]) return breakpoint(s, 1, 2117, r0);
  case 1:
    s.tmp_0 = helpers_setScreenBrightness__P25137_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1064; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2118]) return breakpoint(s, 3, 2118, r0);
  case 3:
    s.tmp_0 = settings_writeNumber__P25234_mk(s);
    s.tmp_0.arg0 = "#brightness";
    s.tmp_1 = helpers_screenBrightness__P25138_mk(s);
    s.tmp_1.arg0 = globals.screen___25204;
    s.callLocIdx = 1065; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1066; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setScreenBrightness__P28100.info = {"start":9291,"length":345,"line":293,"column":4,"endLine":298,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setScreenBrightness","argumentNames":["b"]}

function scene_systemMenu_setScreenBrightness__P28100_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setScreenBrightness__P28100, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function settings_writeNumber__P25234(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 711;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[711]) return breakpoint(s, 1, 711, r0);
  case 1:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.tmp_1 = settings_writeBuffer__P25231_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = msgpack_packNumberArray__P23555_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    s.callLocIdx = 129; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 130; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeNumber__P25234.info = {"start":2265,"length":122,"line":89,"column":4,"endLine":91,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeNumber","argumentNames":["key","value"]}

function settings_writeNumber__P25234_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeNumber__P25234, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_writeBuffer__P25231(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 707;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[707]) return breakpoint(s, 3, 707, r0);
  case 3:
    r0 = pxsim.settings._set(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 708;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[708]) return breakpoint(s, 4, 708, r0);
  case 4:
    r0 = pxsim.settings._userClean();
    s.lastBrkId = 709;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[709]) return breakpoint(s, 5, 709, r0);
  case 5:
    r0 = pxsim_pxtrt.panic(920);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeBuffer__P25231.info = {"start":1538,"length":290,"line":63,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeBuffer","argumentNames":["key","value"]}

function settings_writeBuffer__P25231_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeBuffer__P25231, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function msgpack_packNumberArray__P23555(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.off___37176 = undefined;
    s.n___37178 = undefined;
    s.unnamed350___U2 = undefined;
    s.unnamed351___U3 = undefined;
    s.buf___37188 = undefined;
    s.n___37194 = undefined;
    s.unnamed352___U6 = undefined;
    s.unnamed353___U7 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[280]) return breakpoint(s, 5, 280, r0);
  case 5:
    s.off___37176 = (0);
    s.lastBrkId = 281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[281]) return breakpoint(s, 6, 281, r0);
  case 6:
    s.n___37178 = (undefined);
    s.unnamed350___U2 = (s.arg0);
    s.unnamed351___U3 = (0);
    s.lastBrkId = 282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[282]) return breakpoint(s, 7, 282, r0);
  case 7:
  case 1:
    s.tmp_0 = r0 = s.unnamed351___U3;
    r0 = pxsim_Array__length(s.unnamed350___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed350___U2, s.unnamed351___U3);
    s.n___37178 = (r0);
    s.lastBrkId = 283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[283]) return breakpoint(s, 8, 283, r0);
  case 8:
    s.tmp_2 = r0 = s.off___37176;
    s.tmp_4 = msgpack_packNumberCore__P27436_mk(s);
    s.tmp_4.arg0 = null;
    s.tmp_4.arg1 = s.off___37176;
    s.tmp_4.arg2 = s.n___37178;
    s.callLocIdx = 24; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___37176 = (r0);
    r0 = (s.unnamed351___U3 + 1);
    s.unnamed351___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed350___U2 = (undefined);
    s.lastBrkId = 284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[284]) return breakpoint(s, 10, 284, r0);
  case 10:
    r0 = pxsim.control.createBuffer(s.off___37176);
    s.buf___37188 = (r0);
    s.lastBrkId = 285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[285]) return breakpoint(s, 11, 285, r0);
  case 11:
    s.off___37176 = (0);
    s.lastBrkId = 286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[286]) return breakpoint(s, 12, 286, r0);
  case 12:
    s.n___37194 = (undefined);
    s.unnamed352___U6 = (s.arg0);
    s.unnamed353___U7 = (0);
    s.lastBrkId = 287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[287]) return breakpoint(s, 13, 287, r0);
  case 13:
  case 3:
    s.tmp_0 = r0 = s.unnamed353___U7;
    r0 = pxsim_Array__length(s.unnamed352___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed352___U6, s.unnamed353___U7);
    s.n___37194 = (r0);
    s.lastBrkId = 288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[288]) return breakpoint(s, 14, 288, r0);
  case 14:
    s.tmp_2 = r0 = s.off___37176;
    s.tmp_4 = msgpack_packNumberCore__P27436_mk(s);
    s.tmp_4.arg0 = s.buf___37188;
    s.tmp_4.arg1 = s.off___37176;
    s.tmp_4.arg2 = s.n___37194;
    s.callLocIdx = 25; s.pc = 15; return s.tmp_4;
  case 15:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___37176 = (r0);
    r0 = (s.unnamed353___U7 + 1);
    s.unnamed353___U7 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed352___U6 = (undefined);
    s.lastBrkId = 289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[289]) return breakpoint(s, 16, 289, r0);
  case 16:
    r0 = s.buf___37188;
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberArray__P23555.info = {"start":3427,"length":330,"line":117,"column":4,"endLine":128,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberArray","argumentNames":["nums"]}

function msgpack_packNumberArray__P23555_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberArray__P23555, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  off___37176: undefined,
  n___37178: undefined,
  unnamed350___U2: undefined,
  unnamed351___U3: undefined,
  buf___37188: undefined,
  n___37194: undefined,
  unnamed352___U6: undefined,
  unnamed353___U7: undefined,
  arg0: undefined,
} }





function msgpack_packNumberCore__P27436(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tag___37208 = undefined;
    s.fmt___37251 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[243]) return breakpoint(s, 24, 243, r0);
  case 24:
    s.tag___37208 = (203);
    s.lastBrkId = 244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[244]) return breakpoint(s, 25, 244, r0);
  case 25:
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.arg2 << 0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = s.arg2;
    r0 = (s.arg2 >>> 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 == s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[245]) return breakpoint(s, 26, 245, r0);
  case 26:
    r0 = (-31 <= s.arg2);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_6;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 <= 127);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[246]) return breakpoint(s, 27, 246, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[247]) return breakpoint(s, 28, 247, r0);
  case 28:
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.arg2);
  case 5:
  case 6:
    s.lastBrkId = 248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[248]) return breakpoint(s, 29, 248, r0);
  case 29:
    r0 = 1;
    { step = 23; continue; }
    { step = 18; continue; }
  case 7:
    s.lastBrkId = 249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[249]) return breakpoint(s, 30, 249, r0);
  case 30:
    r0 = (0 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[250]) return breakpoint(s, 31, 250, r0);
  case 31:
    r0 = (s.arg2 <= 255);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[251]) return breakpoint(s, 32, 251, r0);
  case 32:
    s.tag___37208 = (204);
    { step = 11; continue; }
  case 8:
    s.lastBrkId = 252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[252]) return breakpoint(s, 33, 252, r0);
  case 33:
    r0 = (s.arg2 <= 65535);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[253]) return breakpoint(s, 34, 253, r0);
  case 34:
    s.tag___37208 = (205);
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[254]) return breakpoint(s, 35, 254, r0);
  case 35:
    s.tag___37208 = (206);
  case 10:
  case 11:
    { step = 17; continue; }
  case 12:
    s.lastBrkId = 255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[255]) return breakpoint(s, 36, 255, r0);
  case 36:
    r0 = (-127 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[256]) return breakpoint(s, 37, 256, r0);
  case 37:
    s.tag___37208 = (208);
    { step = 16; continue; }
  case 13:
    s.lastBrkId = 257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[257]) return breakpoint(s, 38, 257, r0);
  case 38:
    r0 = (-32767 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[258]) return breakpoint(s, 39, 258, r0);
  case 39:
    s.tag___37208 = (209);
    { step = 15; continue; }
  case 14:
    s.lastBrkId = 259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[259]) return breakpoint(s, 40, 259, r0);
  case 40:
    s.tag___37208 = (210);
  case 15:
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    s.lastBrkId = 260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[260]) return breakpoint(s, 41, 260, r0);
  case 41:
    s.tmp_0 = msgpack_tagFormat__P27435_mk(s);
    s.tmp_0.arg0 = s.tag___37208;
    s.callLocIdx = 20; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.fmt___37251 = (r0);
    s.lastBrkId = 261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[261]) return breakpoint(s, 43, 261, r0);
  case 43:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[262]) return breakpoint(s, 44, 262, r0);
  case 44:
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.tag___37208);
    s.lastBrkId = 263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[263]) return breakpoint(s, 45, 263, r0);
  case 45:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.fmt___37251;
    r0 = (s.arg1 + 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, s.tmp_1, s.tmp_2, s.arg2);
  case 21:
  case 22:
    s.lastBrkId = 264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[264]) return breakpoint(s, 46, 264, r0);
  case 46:
    s.tmp_1 = pins_sizeOf__P23546_mk(s);
    s.tmp_1.arg0 = s.fmt___37251;
    s.callLocIdx = 21; s.pc = 47; return s.tmp_1;
  case 47:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
  case 23:
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberCore__P27436.info = {"start":1632,"length":951,"line":56,"column":4,"endLine":86,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberCore","argumentNames":["buf","offset","num"]}

function msgpack_packNumberCore__P27436_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberCore__P27436, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tag___37208: undefined,
  fmt___37251: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function msgpack_tagFormat__P27435(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[234]) return breakpoint(s, 10, 234, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(203, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(204, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(205, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(206, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(208, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(209, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(210, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 1:
    s.lastBrkId = 235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[235]) return breakpoint(s, 11, 235, r0);
  case 11:
    r0 = 16;
    { step = 9; continue; }
  case 2:
    s.lastBrkId = 236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[236]) return breakpoint(s, 12, 236, r0);
  case 12:
    r0 = 7;
    { step = 9; continue; }
  case 3:
    s.lastBrkId = 237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[237]) return breakpoint(s, 13, 237, r0);
  case 13:
    r0 = 9;
    { step = 9; continue; }
  case 4:
    s.lastBrkId = 238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[238]) return breakpoint(s, 14, 238, r0);
  case 14:
    r0 = 12;
    { step = 9; continue; }
  case 5:
    s.lastBrkId = 239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[239]) return breakpoint(s, 15, 239, r0);
  case 15:
    r0 = 6;
    { step = 9; continue; }
  case 6:
    s.lastBrkId = 240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[240]) return breakpoint(s, 16, 240, r0);
  case 16:
    r0 = 8;
    { step = 9; continue; }
  case 7:
    s.lastBrkId = 241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[241]) return breakpoint(s, 17, 241, r0);
  case 17:
    r0 = 10;
    { step = 9; continue; }
  case 8:
    s.lastBrkId = 242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[242]) return breakpoint(s, 18, 242, r0);
  case 18:
    r0 = null;
    { step = 9; continue; }
    r0 = undefined;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
msgpack_tagFormat__P27435.info = {"start":1145,"length":481,"line":42,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"tagFormat","argumentNames":["tag"]}

function msgpack_tagFormat__P27435_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_tagFormat__P27435, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function pins_sizeOf__P23546(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[233]) return breakpoint(s, 1, 233, r0);
  case 1:
    s.tmp_0 = Buffer_sizeOfNumberFormat__P23586_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 19; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
pins_sizeOf__P23546.info = {"start":42,"length":101,"line":2,"column":4,"endLine":4,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOf","argumentNames":["format"]}

function pins_sizeOf__P23546_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_sizeOf__P23546, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Buffer_sizeOfNumberFormat__P23586(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[290]) return breakpoint(s, 19, 290, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(8, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq(15, s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq(16, s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq(14, s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[291]) return breakpoint(s, 20, 291, r0);
  case 20:
    r0 = 1;
    { step = 18; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[292]) return breakpoint(s, 21, 292, r0);
  case 21:
    r0 = 2;
    { step = 18; continue; }
  case 9:
  case 10:
  case 11:
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[293]) return breakpoint(s, 22, 293, r0);
  case 22:
    r0 = 4;
    { step = 18; continue; }
  case 15:
  case 16:
    s.lastBrkId = 294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[294]) return breakpoint(s, 23, 294, r0);
  case 23:
    r0 = 8;
    { step = 18; continue; }
  case 17:
    s.lastBrkId = 295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[295]) return breakpoint(s, 24, 295, r0);
  case 24:
    r0 = 0;
  case 18:
    return leave(s, r0)
  default: oops()
} } }
Buffer_sizeOfNumberFormat__P23586.info = {"start":14912,"length":856,"line":508,"column":4,"endLine":532,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOfNumberFormat","argumentNames":["format"]}

function Buffer_sizeOfNumberFormat__P23586_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_sizeOfNumberFormat__P23586, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers_setScreenBrightness__P25137(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[559]) return breakpoint(s, 1, 559, r0);
  case 1:
    s.tmp_0 = Math_clamp__P23498_mk(s);
    s.tmp_0.arg0 = 10;
    s.tmp_0.arg1 = 100;
    r0 = (s.arg1 | 0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 89; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.arg1 = (r0);
    s.lastBrkId = 560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[560]) return breakpoint(s, 3, 560, r0);
  case 3:
    globals.brightness___25125 = (s.arg1);
    s.lastBrkId = 561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[561]) return breakpoint(s, 4, 561, r0);
  case 4:
    r0 = pxsim_pxtcore.setScreenBrightness(globals.brightness___25125);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_setScreenBrightness__P25137.info = {"start":7427,"length":210,"line":238,"column":4,"endLine":242,"endColumn":5,"fileName":"pxt_modules/screen---st7735/image.ts","functionName":"setScreenBrightness","argumentNames":["img","b"]}

function helpers_setScreenBrightness__P25137_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_setScreenBrightness__P25137, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_brightnessUp__P28098(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2115]) return breakpoint(s, 1, 2115, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_setScreenBrightness__P28100_mk(s);
    s.tmp_2 = helpers_screenBrightness__P25138_mk(s);
    s.tmp_2.arg0 = globals.screen___25204;
    s.callLocIdx = 1060; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 5);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1061; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_brightnessUp__P28098.info = {"start":9107,"length":85,"line":285,"column":4,"endLine":287,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"brightnessUp","argumentNames":[]}

function scene_systemMenu_brightnessUp__P28098_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_brightnessUp__P28098, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_volumeDown__P28097(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.v___37524 = undefined;
    s.remainder___37527 = undefined;
    s.newVolume___37530 = undefined;
    s.lastBrkId = 2111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2111]) return breakpoint(s, 3, 2111, r0);
  case 3:
    s.tmp_0 = music_volume__P24982_mk(s);
    s.callLocIdx = 1058; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.v___37524 = (r0);
    s.lastBrkId = 2112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2112]) return breakpoint(s, 5, 2112, r0);
  case 5:
    r0 = (s.v___37524 % 32);
    s.remainder___37527 = (r0);
    s.lastBrkId = 2113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2113]) return breakpoint(s, 6, 2113, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.remainder___37527);
    if (!r0) { step = 1; continue; }
    r0 = s.remainder___37527;
    { step = 2; continue; }
  case 1:
    r0 = 32;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.v___37524 - s.tmp_0);
    s.newVolume___37530 = (r0);
    s.lastBrkId = 2114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2114]) return breakpoint(s, 7, 2114, r0);
  case 7:
    s.tmp_0 = scene_systemMenu_setVolume__P28095_mk(s);
    s.tmp_0.arg0 = s.newVolume___37530;
    s.callLocIdx = 1059; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_volumeDown__P28097.info = {"start":8914,"length":187,"line":278,"column":4,"endLine":283,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"volumeDown","argumentNames":[]}

function scene_systemMenu_volumeDown__P28097_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_volumeDown__P28097, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  v___37524: undefined,
  remainder___37527: undefined,
  newVolume___37530: undefined,
} }





function scene_systemMenu_setVolume__P28095(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2104]) return breakpoint(s, 1, 2104, r0);
  case 1:
    s.tmp_0 = music_setVolume__P24981_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1053; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2105]) return breakpoint(s, 3, 2105, r0);
  case 3:
    s.tmp_0 = music_playTone__P24983_mk(s);
    s.tmp_0.arg0 = 440;
    s.tmp_0.arg1 = 500;
    s.callLocIdx = 1054; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2106]) return breakpoint(s, 5, 2106, r0);
  case 5:
    s.tmp_0 = settings_writeNumber__P25234_mk(s);
    s.tmp_0.arg0 = "#volume";
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1055; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setVolume__P28095.info = {"start":8565,"length":166,"line":265,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setVolume","argumentNames":["newVolume"]}

function scene_systemMenu_setVolume__P28095_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setVolume__P28095, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function music_playTone__P24983(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.id___37365 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    s.lastBrkId = 487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[487]) return breakpoint(s, 5, 487, r0);
  case 5:
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[488]) return breakpoint(s, 6, 488, r0);
  case 6:
    r0 = pxsim_pxtrt_stlocRef(s.arg1, 86400000);
  case 1:
  case 2:
    s.lastBrkId = 489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[489]) return breakpoint(s, 7, 489, r0);
  case 7:
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 2000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[490]) return breakpoint(s, 8, 490, r0);
  case 8:
    s.tmp_2 = music_playNoteCore__P27535_mk(s);
    s.tmp_2.arg0 = 0;
    s.tmp_2.arg1 = s.arg0;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 68; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[491]) return breakpoint(s, 10, 491, r0);
  case 10:
    s.tmp_0 = pause__P23784_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 69; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[492]) return breakpoint(s, 12, 492, r0);
  case 12:
    r0 = (globals.playToneID___27537 + 1);
    s.tmp_0 = r0;
    globals.playToneID___27537 = (r0);
    s.id___37365 = (s.tmp_0);
    s.lastBrkId = 493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[493]) return breakpoint(s, 13, 493, r0);
  case 13:
    r0 = pxsim_pxtcore_mkAction(3, music_playTone_inline__P37371);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.id___37365);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg0);
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playTone__P24983.info = {"start":2591,"length":831,"line":83,"column":4,"endLine":108,"endColumn":5,"fileName":"pxt_modules/mixer---stm32/melody.ts","functionName":"playTone","argumentNames":["frequency","ms"]}

function music_playTone__P24983_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playTone__P24983, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  id___37365: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function music_playTone_inline__P37371(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pos___37372 = undefined;
    s.now___37382 = undefined;
    s.d___37385 = undefined;
    s.t___37389 = undefined;
    s.lastBrkId = 494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[494]) return breakpoint(s, 7, 494, r0);
  case 7:
    r0 = pxsim.control.millis();
    s.pos___37372 = (r0);
    s.lastBrkId = 495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[495]) return breakpoint(s, 8, 495, r0);
  case 8:
  case 1:
    s.lastBrkId = 496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[496]) return breakpoint(s, 9, 496, r0);
  case 9:
    r0 = (s.caps[0] == globals.playToneID___27537);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[497]) return breakpoint(s, 10, 497, r0);
  case 10:
    r0 = pxsim.control.millis();
    s.now___37382 = (r0);
    s.lastBrkId = 498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[498]) return breakpoint(s, 11, 498, r0);
  case 11:
    r0 = (s.pos___37372 - s.now___37382);
    s.d___37385 = (r0);
    s.lastBrkId = 499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[499]) return breakpoint(s, 12, 499, r0);
  case 12:
    s.tmp_0 = Math_min__P23502_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 500;
    s.callLocIdx = 70; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.t___37389 = (r0);
    s.lastBrkId = 500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[500]) return breakpoint(s, 14, 500, r0);
  case 14:
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.t___37389);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[501]) return breakpoint(s, 15, 501, r0);
  case 15:
    r0 = (s.pos___37372 + s.t___37389);
    s.pos___37372 = (r0);
    s.lastBrkId = 502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[502]) return breakpoint(s, 16, 502, r0);
  case 16:
    s.tmp_0 = music_playNoteCore__P27535_mk(s);
    r0 = (s.d___37385 - 1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.caps[2];
    s.tmp_0.arg2 = s.t___37389;
    s.callLocIdx = 71; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[503]) return breakpoint(s, 18, 503, r0);
  case 18:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[504]) return breakpoint(s, 19, 504, r0);
  case 19:
    s.tmp_2 = pause__P23784_mk(s);
    r0 = (s.d___37385 + s.t___37389);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 72; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[505]) return breakpoint(s, 21, 505, r0);
  case 21:
    s.tmp_0 = pause__P23784_mk(s);
    r0 = (s.d___37385 + s.t___37389);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 100);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 73; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
  case 5:
    { step = 1; continue; }
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playTone_inline__P37371.info = {"start":2890,"length":515,"line":92,"column":34,"endLine":106,"endColumn":13,"fileName":"pxt_modules/mixer---stm32/melody.ts","functionName":"inline","argumentNames":[]}

function music_playTone_inline__P37371_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playTone_inline__P37371, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  pos___37372: undefined,
  now___37382: undefined,
  d___37385: undefined,
  t___37389: undefined,
} }





function music_playNoteCore__P27535(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___37419 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[484]) return breakpoint(s, 1, 484, r0);
  case 1:
    r0 = pxsim.control.createBuffer(12);
    s.buf___37419 = (r0);
    s.lastBrkId = 485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[485]) return breakpoint(s, 2, 485, r0);
  case 2:
    s.tmp_0 = music_addNote__P27542_mk(s);
    s.tmp_0.arg0 = s.buf___37419;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 255;
    s.tmp_0.arg4 = 255;
    s.tmp_0.arg5 = 3;
    s.tmp_0.arg6 = s.arg1;
    s.tmp_1 = music_volume__P24982_mk(s);
    s.callLocIdx = 66; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg7 = r0;
    s.tmp_0.arg8 = s.arg1;
    s.callLocIdx = 67; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[486]) return breakpoint(s, 5, 486, r0);
  case 5:
    r0 = pxsim.music.queuePlayInstructions(s.arg0, s.buf___37419);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playNoteCore__P27535.info = {"start":1877,"length":240,"line":66,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/mixer---stm32/melody.ts","functionName":"playNoteCore","argumentNames":["when","frequency","ms"]}

function music_playNoteCore__P27535_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playNoteCore__P27535, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___37419: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function music_addNote__P27542(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[509]) return breakpoint(s, 3, 509, r0);
  case 3:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[510]) return breakpoint(s, 4, 510, r0);
  case 4:
    r0 = pxsim.BufferMethods.setNumber(s.arg0, 2, s.arg1, s.arg5);
    s.lastBrkId = 511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[511]) return breakpoint(s, 5, 511, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 1);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 2, s.tmp_1, 0);
    s.lastBrkId = 512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[512]) return breakpoint(s, 6, 512, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 2);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg6);
    s.lastBrkId = 513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[513]) return breakpoint(s, 7, 513, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 4);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg2);
    s.lastBrkId = 514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[514]) return breakpoint(s, 8, 514, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 6);
    s.tmp_1 = r0;
    r0 = (s.arg3 * s.arg7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 6);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.tmp_2);
    s.lastBrkId = 515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[515]) return breakpoint(s, 9, 515, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 8);
    s.tmp_1 = r0;
    r0 = (s.arg4 * s.arg7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 6);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.tmp_2);
    s.lastBrkId = 516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[516]) return breakpoint(s, 10, 516, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 10);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg8);
    s.lastBrkId = 517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[517]) return breakpoint(s, 11, 517, r0);
  case 11:
    r0 = (s.arg1 + 12);
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[518]) return breakpoint(s, 12, 518, r0);
  case 12:
    r0 = pxsim.BufferMethods.setNumber(s.arg0, 2, s.arg1, 0);
    s.lastBrkId = 519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[519]) return breakpoint(s, 13, 519, r0);
  case 13:
    r0 = s.arg1;
    return leave(s, r0)
  default: oops()
} } }
music_addNote__P27542.info = {"start":10086,"length":904,"line":315,"column":4,"endLine":328,"endColumn":5,"fileName":"pxt_modules/mixer---stm32/melody.ts","functionName":"addNote","argumentNames":["sndInstr","sndInstrPtr","ms","beg","end","soundWave","hz","volume","endHz"]}

function music_addNote__P27542_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_addNote__P27542, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
} }





function music_setVolume__P24981(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[480]) return breakpoint(s, 3, 480, r0);
  case 3:
    s.tmp_0 = Math_clamp__P23498_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = 255;
    r0 = (s.arg0 | 0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 63; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    globals.globalVolume___27530 = (r0);
    s.lastBrkId = 481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[481]) return breakpoint(s, 5, 481, r0);
  case 5:
    r0 = (globals.globalVolume___27530 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = music_enableAmp__P27533_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.callLocIdx = 64; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_setVolume__P24981.info = {"start":1533,"length":153,"line":51,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/mixer---stm32/melody.ts","functionName":"setVolume","argumentNames":["volume"]}

function music_setVolume__P24981_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_setVolume__P24981, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function music_enableAmp__P27533(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[476]) return breakpoint(s, 1, 476, r0);
  case 1:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_enableAmp__P27533.info = {"start":944,"length":64,"line":29,"column":4,"endLine":31,"endColumn":5,"fileName":"pxt_modules/mixer---stm32/melody.ts","functionName":"enableAmp","argumentNames":["en"]}

function music_enableAmp__P27533_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_enableAmp__P27533, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_systemMenu_volumeUp__P28096(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.v___37333 = undefined;
    s.remainder___37336 = undefined;
    s.newVolume___37339 = undefined;
    s.lastBrkId = 2107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2107]) return breakpoint(s, 1, 2107, r0);
  case 1:
    s.tmp_0 = music_volume__P24982_mk(s);
    s.callLocIdx = 1056; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.v___37333 = (r0);
    s.lastBrkId = 2108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2108]) return breakpoint(s, 3, 2108, r0);
  case 3:
    r0 = (s.v___37333 % 32);
    s.remainder___37336 = (r0);
    s.lastBrkId = 2109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2109]) return breakpoint(s, 4, 2109, r0);
  case 4:
    r0 = (s.v___37333 + 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.remainder___37336);
    s.newVolume___37339 = (r0);
    s.lastBrkId = 2110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2110]) return breakpoint(s, 5, 2110, r0);
  case 5:
    s.tmp_0 = scene_systemMenu_setVolume__P28095_mk(s);
    s.tmp_0.arg0 = s.newVolume___37339;
    s.callLocIdx = 1057; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_volumeUp__P28096.info = {"start":8737,"length":171,"line":271,"column":4,"endLine":276,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"volumeUp","argumentNames":[]}

function scene_systemMenu_volumeUp__P28096_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_volumeUp__P28096, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  v___37333: undefined,
  remainder___37336: undefined,
  newVolume___37339: undefined,
} }





function game_consoleOverlay_isVisible__P26181(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2185]) return breakpoint(s, 1, 2185, r0);
  case 1:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___28137);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_isVisible__P26181.info = {"start":422,"length":68,"line":11,"column":4,"endLine":13,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"isVisible","argumentNames":[]}

function game_consoleOverlay_isVisible__P26181_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_isVisible__P26181, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_closeMenu__P26159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2127]) return breakpoint(s, 3, 2127, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.instance___28091);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2128]) return breakpoint(s, 4, 2128, r0);
  case 4:
    s.tmp_0 = scene_systemMenu_PauseMenu_dispose__P26158_mk(s);
    s.tmp_0.arg0 = globals.instance___28091;
    s.callLocIdx = 1072; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2129]) return breakpoint(s, 6, 2129, r0);
  case 6:
    globals.instance___28091 = (undefined);
    s.lastBrkId = 2130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2130]) return breakpoint(s, 7, 2130, r0);
  case 7:
    s.tmp_0 = controller__setUserEventsEnabled__P25372_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1073; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2131]) return breakpoint(s, 9, 2131, r0);
  case 9:
    s.tmp_0 = game_popScene__P26066_mk(s);
    s.callLocIdx = 1074; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_closeMenu__P26159.info = {"start":10129,"length":216,"line":320,"column":4,"endLine":327,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"closeMenu","argumentNames":[]}

function scene_systemMenu_closeMenu__P26159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_closeMenu__P26159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_dispose__P26158(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C26152_VT)) failedCast(r0);
    s.lastBrkId = 2094;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2094]) return breakpoint(s, 3, 2094, r0);
  case 3:
    r0 = s.arg0.fields["options"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2095;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2095]) return breakpoint(s, 4, 2095, r0);
  case 4:
    s.tmp_1 = helpers_arrayForEach__P23480_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = scene_systemMenu_PauseMenu_dispose_inline__P35933;
    s.callLocIdx = 1049; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2096;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2096]) return breakpoint(s, 6, 2096, r0);
  case 6:
    r0 = (s.arg0).fields["options"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_dispose__P26158.info = {"start":7732,"length":165,"line":243,"column":8,"endLine":248,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"dispose","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_dispose__P26158_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_dispose__P26158, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_dispose_inline__P35933(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = scene_systemMenu_MenuOption_dispose__P26151_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1048; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_dispose_inline__P35933.info = {"start":7813,"length":16,"line":245,"column":37,"endLine":245,"endColumn":53,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["o"]}

function scene_systemMenu_PauseMenu_dispose_inline__P35933_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_dispose_inline__P35933, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_dispose__P26151(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C26144_VT)) failedCast(r0);
    s.lastBrkId = 2008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2008]) return breakpoint(s, 3, 2008, r0);
  case 3:
    r0 = s.arg0.fields["card"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2009]) return breakpoint(s, 4, 2009, r0);
  case 4:
    s.tmp_1 = Sprite_destroy__P25591_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = undefined;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 968; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2010]) return breakpoint(s, 6, 2010, r0);
  case 6:
    s.tmp_0 = Sprite_destroy__P25591_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 969; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2011]) return breakpoint(s, 8, 2011, r0);
  case 8:
    r0 = (s.arg0).fields["card"] = (undefined);
    s.lastBrkId = 2012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2012]) return breakpoint(s, 9, 2012, r0);
  case 9:
    r0 = (s.arg0).fields["icon"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_dispose__P26151.info = {"start":1812,"length":216,"line":77,"column":8,"endLine":84,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"dispose","argumentNames":["this"]}

function scene_systemMenu_MenuOption_dispose__P26151_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_dispose__P26151, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite_destroy__P25591(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1179]) return breakpoint(s, 6, 1179, r0);
  case 6:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1180]) return breakpoint(s, 7, 1180, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1181]) return breakpoint(s, 8, 1181, r0);
  case 8:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["flags"] = (s.tmp_3);
    s.lastBrkId = 1182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1182]) return breakpoint(s, 9, 1182, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1183]) return breakpoint(s, 10, 1183, r0);
  case 10:
    s.tmp_0 = effects_ParticleEffect_destroy__P26322_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = undefined;
    s.callLocIdx = 478; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1184]) return breakpoint(s, 12, 1184, r0);
  case 12:
    s.tmp_0 = Sprite__destroyCore__P25592_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 479; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_destroy__P25591.info = {"start":30100,"length":293,"line":963,"column":4,"endLine":972,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"destroy","argumentNames":["this","effect","duration"]}

function Sprite_destroy__P25591_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_destroy__P25591, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_ParticleEffect_destroy__P26322(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C26319_VT)) failedCast(r0);
    s.lastBrkId = 2449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2449]) return breakpoint(s, 3, 2449, r0);
  case 3:
    s.tmp_0 = Sprite_setFlag__P25582_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1233; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2450]) return breakpoint(s, 5, 2450, r0);
  case 5:
    s.tmp_0 = effects_ParticleEffect_start__P26321_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = null;
    r0 = s.arg1.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 512);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1234; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2451]) return breakpoint(s, 7, 2451, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    r0 = s.arg2;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["defaultLifespan"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 2);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg1).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 2452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2452]) return breakpoint(s, 8, 2452, r0);
  case 8:
    s.tmp_0 = effects_ImageEffect_applyTo__P26348_mk(s);
    s.tmp_0.arg0 = globals.dissolve___26351;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1235; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_destroy__P26322.info = {"start":1736,"length":368,"line":41,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"destroy","argumentNames":["this","anchor","duration","particlesPerSecond"]}

function effects_ParticleEffect_destroy__P26322_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_destroy__P26322, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function dissolve_inline__P36077(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___36080 = undefined;
    s.x___36091 = undefined;
    s.y___36097 = undefined;
    s.w___36103 = undefined;
    s.h___36107 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 5);
    s.i___36080 = (r0);
  case 1:
    r0 = (s.i___36080 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_FastRandom_randomRange__P26120_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 38; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.x___36091 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P26120_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 39; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.y___36097 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P26120_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 3;
    s.callLocIdx = 40; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.w___36103 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P26120_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 3;
    s.callLocIdx = 41; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.h___36107 = (r0);
    s.tmp_0 = helpers_imageDrawRect__P25133_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.x___36091;
    s.tmp_0.arg2 = s.y___36097;
    s.tmp_0.arg3 = s.w___36103;
    s.tmp_0.arg4 = s.h___36107;
    s.tmp_0.arg5 = 0;
    s.callLocIdx = 42; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = (s.i___36080 - 1);
    s.i___36080 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dissolve_inline__P36077.info = {"start":2199,"length":360,"line":60,"column":49,"endLine":69,"endColumn":5,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["input","r"]}

function dissolve_inline__P36077_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dissolve_inline__P36077, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  i___36080: undefined,
  x___36091: undefined,
  y___36097: undefined,
  w___36103: undefined,
  h___36107: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_imageDrawRect__P25133(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[551]) return breakpoint(s, 6, 551, r0);
  case 6:
    r0 = (s.arg3 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg4 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[552]) return breakpoint(s, 7, 552, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[553]) return breakpoint(s, 8, 553, r0);
  case 8:
    r0 = (s.arg3 - 1);
    s.arg3 = (r0);
    s.lastBrkId = 554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[554]) return breakpoint(s, 9, 554, r0);
  case 9:
    r0 = (s.arg4 - 1);
    s.arg4 = (r0);
    s.lastBrkId = 555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[555]) return breakpoint(s, 10, 555, r0);
  case 10:
    s.tmp_0 = helpers_imageDrawLine__P25132_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 85; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[556]) return breakpoint(s, 12, 556, r0);
  case 12:
    s.tmp_0 = helpers_imageDrawLine__P25132_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg1;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 86; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[557]) return breakpoint(s, 14, 557, r0);
  case 14:
    s.tmp_0 = helpers_imageDrawLine__P25132_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg2 = r0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 87; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[558]) return breakpoint(s, 16, 558, r0);
  case 16:
    s.tmp_0 = helpers_imageDrawLine__P25132_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.arg1;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 88; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawRect__P25133.info = {"start":5325,"length":370,"line":167,"column":4,"endLine":175,"endColumn":5,"fileName":"pxt_modules/screen---st7735/image.ts","functionName":"imageDrawRect","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageDrawRect__P25133_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawRect__P25133, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function helpers_imageDrawLine__P25132(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[550]) return breakpoint(s, 1, 550, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_pack__P27578_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 83; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = helpers_pack__P27578_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.tmp_4.arg1 = s.arg4;
    s.callLocIdx = 84; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods._drawLine(s.tmp_0, s.tmp_1, s.tmp_3, s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawLine__P25132.info = {"start":5161,"length":159,"line":164,"column":4,"endLine":166,"endColumn":5,"fileName":"pxt_modules/screen---st7735/image.ts","functionName":"imageDrawLine","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageDrawLine__P25132_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawLine__P25132, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function effects_ImageEffect_applyTo__P26348(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.clonedImage___36187 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C26346_VT)) failedCast(r0);
    s.lastBrkId = 2463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2463]) return breakpoint(s, 6, 2463, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = Sprite_image__P25553_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.callLocIdx = 1244; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2464]) return breakpoint(s, 8, 2464, r0);
  case 8:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2465]) return breakpoint(s, 9, 2465, r0);
  case 9:
    s.tmp_7 = Sprite_image__P25553_mk(s);
    s.tmp_7.arg0 = s.arg1;
    s.callLocIdx = 1245; s.pc = 10; return s.tmp_7;
  case 10:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_6);
    s.clonedImage___36187 = (r0);
    s.lastBrkId = 2466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2466]) return breakpoint(s, 11, 2466, r0);
  case 11:
    s.tmp_0 = effects_ImageEffect_change__P26349_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.clonedImage___36187;
    s.callLocIdx = 1246; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 2467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2467]) return breakpoint(s, 13, 2467, r0);
  case 13:
    s.tmp_0 = Sprite_setImage__P25554_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.clonedImage___36187;
    s.callLocIdx = 1247; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_applyTo__P26348.info = {"start":823,"length":218,"line":21,"column":8,"endLine":26,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"applyTo","argumentNames":["this","sprite"]}

function effects_ImageEffect_applyTo__P26348_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_applyTo__P26348, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  clonedImage___36187: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function effects_ImageEffect_change__P26349(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C26346_VT)) failedCast(r0);
    s.lastBrkId = 2468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2468]) return breakpoint(s, 1, 2468, r0);
  case 1:
    s.tmp_0 = if_effect_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    r0 = s.arg0.fields["fastRandom"];
    s.tmp_0.arg2 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "effect"), 3);
      s.callLocIdx = 1248; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["effect"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["effect"], 3); s.callLocIdx = 1248; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1248; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 1248; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_change__P26349.info = {"start":1151,"length":81,"line":32,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"change","argumentNames":["this","input"]}

function effects_ImageEffect_change__P26349_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_change__P26349, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_setImage__P25554(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1022]) return breakpoint(s, 6, 1022, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_2 = r0;
    r0 = (s.arg1 === s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1023]) return breakpoint(s, 7, 1023, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1024]) return breakpoint(s, 8, 1024, r0);
  case 8:
    r0 = (s.arg0).fields["_image"] = (s.arg1);
    s.lastBrkId = 1025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1025]) return breakpoint(s, 9, 1025, r0);
  case 9:
    s.tmp_0 = Sprite_recalcSize__P27673_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 317; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setImage__P25554.info = {"start":9273,"length":131,"line":332,"column":4,"endLine":336,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setImage","argumentNames":["this","img"]}

function Sprite_setImage__P25554_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setImage__P25554, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_recalcSize__P27673(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1052]) return breakpoint(s, 1, 1052, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_sx__P25533_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 340; s.pc = 3; return s.tmp_6;
  case 3:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 341; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_width"] = (s.tmp_1);
    s.lastBrkId = 1053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1053]) return breakpoint(s, 4, 1053, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_4);
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_sy__P25535_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 342; s.pc = 6; return s.tmp_6;
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 343; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_height"] = (s.tmp_1);
    s.lastBrkId = 1054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1054]) return breakpoint(s, 7, 1054, r0);
  case 7:
    s.tmp_0 = Sprite_resetHitbox__P25556_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 344; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_recalcSize__P27673.info = {"start":11085,"length":176,"line":396,"column":4,"endLine":400,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"recalcSize","argumentNames":["this"]}

function Sprite_recalcSize__P27673_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_recalcSize__P27673, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function Sprite_resetHitbox__P25556(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1027]) return breakpoint(s, 1, 1027, r0);
  case 1:
    r0 = (s.arg0).fields["_hitbox"] = (null);
    s.lastBrkId = 1028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1028]) return breakpoint(s, 2, 1028, r0);
  case 2:
    s.tmp_0 = Sprite_setHitbox__P25557_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 321; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_resetHitbox__P25556.info = {"start":9532,"length":76,"line":342,"column":4,"endLine":345,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"resetHitbox","argumentNames":["this"]}

function Sprite_resetHitbox__P25556_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_resetHitbox__P25556, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_setHitbox__P25557(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.newHitBox___36235 = undefined;
    s.oMinX___36249 = undefined;
    s.oMinY___36253 = undefined;
    s.oMaxX___36257 = undefined;
    s.oMaxY___36264 = undefined;
    s.nMinX___36271 = undefined;
    s.nMinY___36274 = undefined;
    s.nMaxX___36277 = undefined;
    s.nMaxY___36283 = undefined;
    s.xDiff___36289 = undefined;
    s.yDiff___36300 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1029]) return breakpoint(s, 10, 1029, r0);
  case 10:
    s.tmp_0 = game_calculateHitBox__P25389_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 322; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.newHitBox___36235 = (r0);
    s.lastBrkId = 1030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1030]) return breakpoint(s, 12, 1030, r0);
  case 12:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = game_Hitbox_isValid__P25386_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 323; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1031]) return breakpoint(s, 14, 1031, r0);
  case 14:
    r0 = (s.arg0).fields["_hitbox"] = (s.newHitBox___36235);
    s.lastBrkId = 1032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1032]) return breakpoint(s, 15, 1032, r0);
  case 15:
    { step = 9; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1033]) return breakpoint(s, 16, 1033, r0);
  case 16:
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["ox"];
    s.oMinX___36249 = (r0);
    s.lastBrkId = 1034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1034]) return breakpoint(s, 17, 1034, r0);
  case 17:
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["oy"];
    s.oMinY___36253 = (r0);
    s.lastBrkId = 1035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1035]) return breakpoint(s, 18, 1035, r0);
  case 18:
    s.tmp_0 = Fx_add__P23528_mk(s);
    s.tmp_0.arg0 = s.oMinX___36249;
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 324; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.oMaxX___36257 = (r0);
    s.lastBrkId = 1036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1036]) return breakpoint(s, 20, 1036, r0);
  case 20:
    s.tmp_0 = Fx_add__P23528_mk(s);
    s.tmp_0.arg0 = s.oMinY___36253;
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 325; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.oMaxY___36264 = (r0);
    s.lastBrkId = 1037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1037]) return breakpoint(s, 22, 1037, r0);
  case 22:
    r0 = s.newHitBox___36235.fields["ox"];
    s.nMinX___36271 = (r0);
    s.lastBrkId = 1038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1038]) return breakpoint(s, 23, 1038, r0);
  case 23:
    r0 = s.newHitBox___36235.fields["oy"];
    s.nMinY___36274 = (r0);
    s.lastBrkId = 1039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1039]) return breakpoint(s, 24, 1039, r0);
  case 24:
    s.tmp_0 = Fx_add__P23528_mk(s);
    s.tmp_0.arg0 = s.nMinX___36271;
    r0 = s.newHitBox___36235.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 326; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.nMaxX___36277 = (r0);
    s.lastBrkId = 1040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1040]) return breakpoint(s, 26, 1040, r0);
  case 26:
    s.tmp_0 = Fx_add__P23528_mk(s);
    s.tmp_0.arg0 = s.nMinY___36274;
    r0 = s.newHitBox___36235.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 327; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.nMaxY___36283 = (r0);
    s.lastBrkId = 1041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1041]) return breakpoint(s, 28, 1041, r0);
  case 28:
    s.tmp_0 = Fx_add__P23528_mk(s);
    s.tmp_1 = Fx_abs__P23536_mk(s);
    s.tmp_2 = Fx_sub__P23530_mk(s);
    s.tmp_2.arg0 = s.oMinX___36249;
    s.tmp_2.arg1 = s.nMinX___36271;
    s.callLocIdx = 328; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 329; s.pc = 30; return s.tmp_1;
  case 30:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Fx_abs__P23536_mk(s);
    s.tmp_4 = Fx_sub__P23530_mk(s);
    s.tmp_4.arg0 = s.oMaxX___36257;
    s.tmp_4.arg1 = s.nMaxX___36277;
    s.callLocIdx = 330; s.pc = 33; return s.tmp_4;
  case 33:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 331; s.pc = 32; return s.tmp_3;
  case 32:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 332; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.xDiff___36289 = (r0);
    s.lastBrkId = 1042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1042]) return breakpoint(s, 34, 1042, r0);
  case 34:
    s.tmp_0 = Fx_add__P23528_mk(s);
    s.tmp_1 = Fx_abs__P23536_mk(s);
    s.tmp_2 = Fx_sub__P23530_mk(s);
    s.tmp_2.arg0 = s.oMinY___36253;
    s.tmp_2.arg1 = s.nMinY___36274;
    s.callLocIdx = 333; s.pc = 37; return s.tmp_2;
  case 37:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 334; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Fx_abs__P23536_mk(s);
    s.tmp_4 = Fx_sub__P23530_mk(s);
    s.tmp_4.arg0 = s.oMaxY___36264;
    s.tmp_4.arg1 = s.nMaxY___36283;
    s.callLocIdx = 335; s.pc = 39; return s.tmp_4;
  case 39:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 336; s.pc = 38; return s.tmp_3;
  case 38:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 337; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.yDiff___36300 = (r0);
    s.lastBrkId = 1043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1043]) return breakpoint(s, 40, 1043, r0);
  case 40:
    r0 = (s.arg0).fields["_hitbox"] = (s.newHitBox___36235);
    s.lastBrkId = 1044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1044]) return breakpoint(s, 41, 1044, r0);
  case 41:
    r0 = (s.xDiff___36289 <= 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1045]) return breakpoint(s, 42, 1045, r0);
  case 42:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1).fields["ox"] = (s.oMinX___36249);
    s.lastBrkId = 1046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1046]) return breakpoint(s, 43, 1046, r0);
  case 43:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    s.tmp_2 = Fx_sub__P23530_mk(s);
    s.tmp_2.arg0 = s.oMaxX___36257;
    s.tmp_2.arg1 = s.oMinX___36249;
    s.callLocIdx = 338; s.pc = 44; return s.tmp_2;
  case 44:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["width"] = (s.tmp_1);
  case 5:
  case 6:
    s.lastBrkId = 1047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1047]) return breakpoint(s, 45, 1047, r0);
  case 45:
    r0 = (s.yDiff___36300 <= 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1048]) return breakpoint(s, 46, 1048, r0);
  case 46:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1).fields["oy"] = (s.oMinY___36253);
    s.lastBrkId = 1049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1049]) return breakpoint(s, 47, 1049, r0);
  case 47:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    s.tmp_2 = Fx_sub__P23530_mk(s);
    s.tmp_2.arg0 = s.oMaxY___36264;
    s.tmp_2.arg1 = s.oMinY___36253;
    s.callLocIdx = 339; s.pc = 48; return s.tmp_2;
  case 48:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["height"] = (s.tmp_1);
  case 7:
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setHitbox__P25557.info = {"start":9614,"length":1324,"line":347,"column":4,"endLine":386,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setHitbox","argumentNames":["this"]}

function Sprite_setHitbox__P25557_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setHitbox__P25557, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  newHitBox___36235: undefined,
  oMinX___36249: undefined,
  oMinY___36253: undefined,
  oMaxX___36257: undefined,
  oMaxY___36264: undefined,
  nMinX___36271: undefined,
  nMinY___36274: undefined,
  nMaxX___36277: undefined,
  nMaxY___36283: undefined,
  xDiff___36289: undefined,
  yDiff___36300: undefined,
  arg0: undefined,
} }





function game_calculateHitBox__P25389(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___36376 = undefined;
    s.minX___36379 = undefined;
    s.minY___36383 = undefined;
    s.maxX___36387 = undefined;
    s.maxY___36389 = undefined;
    s.c___36391 = undefined;
    s.fxc___36392 = undefined;
    s.r___36399 = undefined;
    s.fxr___36400 = undefined;
    s.width___36464 = undefined;
    s.height___36472 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 944;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[944]) return breakpoint(s, 12, 944, r0);
  case 12:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = game_Hitbox_isValid__P25386_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 253; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 945;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[945]) return breakpoint(s, 14, 945, r0);
  case 14:
    r0 = s.arg0.fields["_hitbox"];
    { step = 11; continue; }
  case 3:
  case 4:
    s.lastBrkId = 946;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[946]) return breakpoint(s, 15, 946, r0);
  case 15:
    s.tmp_3 = Sprite_image__P25553_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 254; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
    s.i___36376 = (r0);
    s.lastBrkId = 947;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[947]) return breakpoint(s, 17, 947, r0);
  case 17:
    s.tmp_0 = Fx8__P23520_mk(s);
    r0 = pxsim_ImageMethods.width(s.i___36376);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 255; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.minX___36379 = (r0);
    s.lastBrkId = 948;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[948]) return breakpoint(s, 19, 948, r0);
  case 19:
    s.tmp_0 = Fx8__P23520_mk(s);
    r0 = pxsim_ImageMethods.height(s.i___36376);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 256; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.minY___36383 = (r0);
    s.lastBrkId = 949;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[949]) return breakpoint(s, 21, 949, r0);
  case 21:
    s.maxX___36387 = (0);
    s.lastBrkId = 950;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[950]) return breakpoint(s, 22, 950, r0);
  case 22:
    s.maxY___36389 = (0);
    s.lastBrkId = 951;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[951]) return breakpoint(s, 23, 951, r0);
  case 23:
    s.c___36391 = (0);
    s.lastBrkId = 952;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[952]) return breakpoint(s, 24, 952, r0);
  case 24:
    s.fxc___36392 = (0);
    s.lastBrkId = 953;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[953]) return breakpoint(s, 25, 953, r0);
  case 25:
  case 5:
    s.lastBrkId = 954;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[954]) return breakpoint(s, 26, 954, r0);
  case 26:
    s.tmp_1 = r0 = s.c___36391;
    r0 = pxsim_ImageMethods.width(s.i___36376);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 955;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[955]) return breakpoint(s, 27, 955, r0);
  case 27:
    s.r___36399 = (0);
    s.lastBrkId = 956;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[956]) return breakpoint(s, 28, 956, r0);
  case 28:
    s.fxr___36400 = (0);
    s.lastBrkId = 957;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[957]) return breakpoint(s, 29, 957, r0);
  case 29:
  case 6:
    s.lastBrkId = 958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[958]) return breakpoint(s, 30, 958, r0);
  case 30:
    s.tmp_1 = r0 = s.r___36399;
    r0 = pxsim_ImageMethods.height(s.i___36376);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[959]) return breakpoint(s, 31, 959, r0);
  case 31:
    r0 = pxsim_ImageMethods.getPixel(s.i___36376, s.c___36391, s.r___36399);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[960]) return breakpoint(s, 32, 960, r0);
  case 32:
    s.tmp_4 = Fx_min__P23537_mk(s);
    s.tmp_4.arg0 = s.minX___36379;
    s.tmp_4.arg1 = s.fxc___36392;
    s.callLocIdx = 257; s.pc = 33; return s.tmp_4;
  case 33:
    r0 = s.retval;
    s.minX___36379 = (r0);
    s.lastBrkId = 961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[961]) return breakpoint(s, 34, 961, r0);
  case 34:
    s.tmp_0 = Fx_min__P23537_mk(s);
    s.tmp_0.arg0 = s.minY___36383;
    s.tmp_0.arg1 = s.fxr___36400;
    s.callLocIdx = 258; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.minY___36383 = (r0);
    s.lastBrkId = 962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[962]) return breakpoint(s, 36, 962, r0);
  case 36:
    s.tmp_0 = Fx_max__P23538_mk(s);
    s.tmp_0.arg0 = s.maxX___36387;
    s.tmp_0.arg1 = s.fxc___36392;
    s.callLocIdx = 259; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    s.maxX___36387 = (r0);
    s.lastBrkId = 963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[963]) return breakpoint(s, 38, 963, r0);
  case 38:
    s.tmp_0 = Fx_max__P23538_mk(s);
    s.tmp_0.arg0 = s.maxY___36389;
    s.tmp_0.arg1 = s.fxr___36400;
    s.callLocIdx = 260; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.maxY___36389 = (r0);
  case 7:
  case 8:
    s.lastBrkId = 964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[964]) return breakpoint(s, 40, 964, r0);
  case 40:
    r0 = (s.r___36399 + 1);
    s.r___36399 = (r0);
    s.tmp_1 = Fx_add__P23528_mk(s);
    s.tmp_1.arg0 = s.fxr___36400;
    s.tmp_1.arg1 = 256;
    s.callLocIdx = 261; s.pc = 41; return s.tmp_1;
  case 41:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.fxr___36400 = (r0);
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 9:
    s.lastBrkId = 965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[965]) return breakpoint(s, 42, 965, r0);
  case 42:
    r0 = (s.c___36391 + 1);
    s.c___36391 = (r0);
    s.tmp_1 = Fx_add__P23528_mk(s);
    s.tmp_1.arg0 = s.fxc___36392;
    s.tmp_1.arg1 = 256;
    s.callLocIdx = 262; s.pc = 43; return s.tmp_1;
  case 43:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.fxc___36392 = (r0);
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 10:
    s.lastBrkId = 966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[966]) return breakpoint(s, 44, 966, r0);
  case 44:
    s.tmp_0 = Fx_mul__P23531_mk(s);
    s.tmp_0.arg0 = s.minX___36379;
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 263; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    s.minX___36379 = (r0);
    s.lastBrkId = 967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[967]) return breakpoint(s, 46, 967, r0);
  case 46:
    s.tmp_0 = Fx_mul__P23531_mk(s);
    s.tmp_0.arg0 = s.minY___36383;
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 264; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
    s.minY___36383 = (r0);
    s.lastBrkId = 968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[968]) return breakpoint(s, 48, 968, r0);
  case 48:
    s.tmp_0 = Fx_mul__P23531_mk(s);
    s.tmp_0.arg0 = s.maxX___36387;
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 265; s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
    s.maxX___36387 = (r0);
    s.lastBrkId = 969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[969]) return breakpoint(s, 50, 969, r0);
  case 50:
    s.tmp_0 = Fx_mul__P23531_mk(s);
    s.tmp_0.arg0 = s.maxY___36389;
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 266; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
    s.maxY___36389 = (r0);
    s.lastBrkId = 970;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[970]) return breakpoint(s, 52, 970, r0);
  case 52:
    s.tmp_0 = Fx_add__P23528_mk(s);
    s.tmp_1 = Fx_sub__P23530_mk(s);
    s.tmp_1.arg0 = s.maxX___36387;
    s.tmp_1.arg1 = s.minX___36379;
    s.callLocIdx = 267; s.pc = 54; return s.tmp_1;
  case 54:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 268; s.pc = 53; return s.tmp_0;
  case 53:
    r0 = s.retval;
    s.width___36464 = (r0);
    s.lastBrkId = 971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[971]) return breakpoint(s, 55, 971, r0);
  case 55:
    s.tmp_0 = Fx_add__P23528_mk(s);
    s.tmp_1 = Fx_sub__P23530_mk(s);
    s.tmp_1.arg0 = s.maxY___36389;
    s.tmp_1.arg1 = s.minY___36383;
    s.callLocIdx = 269; s.pc = 57; return s.tmp_1;
  case 57:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 270; s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    s.height___36472 = (r0);
    s.lastBrkId = 972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[972]) return breakpoint(s, 58, 972, r0);
  case 58:
    r0 = pxsim_pxtcore_mkClassInstance(game_Hitbox__C25374_VT);
    s.tmp_0 = r0;
    s.tmp_1 = game_Hitbox_constructor__P25381_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.width___36464;
    s.tmp_1.arg3 = s.height___36472;
    s.tmp_2 = Fx_floor__P23539_mk(s);
    s.tmp_2.arg0 = s.minX___36379;
    s.callLocIdx = 271; s.pc = 60; return s.tmp_2;
  case 60:
    r0 = s.retval;
    s.tmp_1.arg4 = r0;
    s.tmp_3 = Fx_floor__P23539_mk(s);
    s.tmp_3.arg0 = s.minY___36383;
    s.callLocIdx = 272; s.pc = 61; return s.tmp_3;
  case 61:
    r0 = s.retval;
    s.tmp_1.arg5 = r0;
    s.callLocIdx = 273; s.pc = 59; return s.tmp_1;
  case 59:
    r0 = s.retval;
    r0 = s.tmp_0;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
game_calculateHitBox__P25389.info = {"start":1840,"length":1086,"line":62,"column":4,"endLine":91,"endColumn":5,"fileName":"pxt_modules/game/hitbox.ts","functionName":"calculateHitBox","argumentNames":["s"]}

function game_calculateHitBox__P25389_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_calculateHitBox__P25389, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___36376: undefined,
  minX___36379: undefined,
  minY___36383: undefined,
  maxX___36387: undefined,
  maxY___36389: undefined,
  c___36391: undefined,
  fxc___36392: undefined,
  r___36399: undefined,
  fxr___36400: undefined,
  width___36464: undefined,
  height___36472: undefined,
  arg0: undefined,
} }





function game_Hitbox_constructor__P25381(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C25374_VT)) failedCast(r0);
    s.lastBrkId = 915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[915]) return breakpoint(s, 1, 915, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_calcDimensionalHash__P25555_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 213; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["hash"] = (s.tmp_1);
    s.lastBrkId = 916;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[916]) return breakpoint(s, 3, 916, r0);
  case 3:
    r0 = (s.arg0).fields["parent"] = (s.arg1);
    s.lastBrkId = 917;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[917]) return breakpoint(s, 4, 917, r0);
  case 4:
    r0 = (s.arg0).fields["width"] = (s.arg2);
    s.lastBrkId = 918;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[918]) return breakpoint(s, 5, 918, r0);
  case 5:
    r0 = (s.arg0).fields["height"] = (s.arg3);
    s.lastBrkId = 919;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[919]) return breakpoint(s, 6, 919, r0);
  case 6:
    r0 = (s.arg0).fields["ox"] = (s.arg4);
    s.lastBrkId = 920;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[920]) return breakpoint(s, 7, 920, r0);
  case 7:
    r0 = (s.arg0).fields["oy"] = (s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_constructor__P25381.info = {"start":170,"length":288,"line":9,"column":8,"endLine":16,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"inline","argumentNames":["this","parent","width","height","ox","oy"]}

function game_Hitbox_constructor__P25381_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_constructor__P25381, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function Sprite_calcDimensionalHash__P25555(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1026]) return breakpoint(s, 1, 1026, r0);
  case 1:
    s.tmp_0 = Fx_mul__P23531_mk(s);
    s.tmp_1 = Fx_mul__P23531_mk(s);
    r0 = s.arg0.fields["_width"];
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["_height"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 318; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = s.arg0.fields["_image"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.revision(s.tmp_3);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 319; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 320; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
Sprite_calcDimensionalHash__P25555.info = {"start":9410,"length":116,"line":338,"column":4,"endLine":340,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"calcDimensionalHash","argumentNames":["this"]}

function Sprite_calcDimensionalHash__P25555_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_calcDimensionalHash__P25555, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Fx_floor__P23539(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[229]) return breakpoint(s, 1, 229, r0);
  case 1:
    r0 = (s.arg0 & -256);
    return leave(s, r0)
  default: oops()
} } }
Fx_floor__P23539.info = {"start":1919,"length":103,"line":62,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"floor","argumentNames":["v"]}

function Fx_floor__P23539_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_floor__P23539, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Fx_max__P23538(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[226]) return breakpoint(s, 4, 226, r0);
  case 4:
    r0 = (s.arg0 > s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[227]) return breakpoint(s, 5, 227, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[228]) return breakpoint(s, 6, 228, r0);
  case 6:
    r0 = s.arg1;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_max__P23538.info = {"start":1797,"length":117,"line":56,"column":4,"endLine":61,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"max","argumentNames":["a","b"]}

function Fx_max__P23538_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_max__P23538, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_min__P23537(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[223]) return breakpoint(s, 4, 223, r0);
  case 4:
    r0 = (s.arg0 < s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[224]) return breakpoint(s, 5, 224, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[225]) return breakpoint(s, 6, 225, r0);
  case 6:
    r0 = s.arg1;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_min__P23537.info = {"start":1675,"length":117,"line":50,"column":4,"endLine":55,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"min","argumentNames":["a","b"]}

function Fx_min__P23537_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_min__P23537, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Hitbox_isValid__P25386(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C25374_VT)) failedCast(r0);
    s.lastBrkId = 925;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[925]) return breakpoint(s, 1, 925, r0);
  case 1:
    r0 = s.arg0.fields["hash"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_calcDimensionalHash__P25555_mk(s);
    r0 = s.arg0.fields["parent"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 224; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_isValid__P25386.info = {"start":952,"length":89,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"isValid","argumentNames":["this"]}

function game_Hitbox_isValid__P25386_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_isValid__P25386, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Fx_abs__P23536(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[220]) return breakpoint(s, 4, 220, r0);
  case 4:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[221]) return breakpoint(s, 5, 221, r0);
  case 5:
    r0 = (0 - s.arg0);
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[222]) return breakpoint(s, 6, 222, r0);
  case 6:
    r0 = s.arg0;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_abs__P23536.info = {"start":1506,"length":164,"line":44,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"abs","argumentNames":["a"]}

function Fx_abs__P23536_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_abs__P23536, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_sub__P23530(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[214]) return breakpoint(s, 1, 214, r0);
  case 1:
    r0 = (s.arg0 - s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_sub__P23530.info = {"start":749,"length":118,"line":26,"column":4,"endLine":28,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"sub","argumentNames":["a","b"]}

function Fx_sub__P23530_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_sub__P23530, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_sy__P25535(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 996;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[996]) return breakpoint(s, 1, 996, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 305; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_sy__P25535.info = {"start":5719,"length":61,"line":209,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"sy","argumentNames":["this"]}
Sprite_sy__P25535.isGetter = true;

function Sprite_sy__P25535_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_sy__P25535, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_sx__P25533(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 995;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[995]) return breakpoint(s, 1, 995, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 304; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_sx__P25533.info = {"start":5287,"length":61,"line":196,"column":4,"endLine":198,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"sx","argumentNames":["this"]}
Sprite_sx__P25533.isGetter = true;

function Sprite_sx__P25533_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_sx__P25533, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_image__P25553(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1021]) return breakpoint(s, 1, 1021, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_image__P25553.info = {"start":8997,"length":54,"line":322,"column":4,"endLine":324,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"image","argumentNames":["this"]}
Sprite_image__P25553.isGetter = true;

function Sprite_image__P25553_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_image__P25553, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function effects_ParticleEffect_start__P26321(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.src___36559 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C26319_VT)) failedCast(r0);
    s.lastBrkId = 2443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2443]) return breakpoint(s, 10, 2443, r0);
  case 10:
    r0 = s.arg0.fields["sourceFactory"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2444]) return breakpoint(s, 11, 2444, r0);
  case 11:
    { step = 9; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2445]) return breakpoint(s, 12, 2445, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 3; continue; }
    r0 = s.arg3;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["defaultRate"];
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = if_sourceFactory_3_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    s.tmp_4.arg2 = s.tmp_3;
    if (!s.tmp_4.arg0.vtable.iface) {
      setupLambda(s.tmp_4, pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "sourceFactory"), 3);
      s.callLocIdx = 1231; s.pc = 13; return s.tmp_4;
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["sourceFactory"];
      if (s.tmp_4.fn == null) { setupLambda(s.tmp_4, s.tmp_4.arg0.fields["sourceFactory"], 3); s.callLocIdx = 1231; s.pc = 13; return s.tmp_4; }
      else if (s.tmp_4.fn.isGetter) { s.tmp_4.stage2Call = true; s.callLocIdx = 1231; s.pc = 13; return s.tmp_4;; }
     else { s.callLocIdx = 1231; s.pc = 13; return s.tmp_4; }
    }
  case 13:
    r0 = s.retval;
    s.src___36559 = (r0);
    s.lastBrkId = 2446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2446]) return breakpoint(s, 14, 2446, r0);
  case 14:
    s.tmp_0 = particles_ParticleSource_setRelativeToCamera__P26219_mk(s);
    s.tmp_0.arg0 = s.src___36559;
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1232; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2447]) return breakpoint(s, 16, 2447, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2448]) return breakpoint(s, 17, 2448, r0);
  case 17:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.arg2;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["defaultLifespan"];
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.src___36559).fields["lifespan"] = (s.tmp_1);
  case 7:
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_start__P26321.info = {"start":967,"length":452,"line":26,"column":8,"endLine":32,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"start","argumentNames":["this","anchor","duration","particlesPerSecond","relativeToCamera"]}

function effects_ParticleEffect_start__P26321_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_start__P26321, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  src___36559: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function particles_ParticleSource_setRelativeToCamera__P26219(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2300]) return breakpoint(s, 3, 2300, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2301]) return breakpoint(s, 4, 2301, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["pFlags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2302]) return breakpoint(s, 5, 2302, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 4);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setRelativeToCamera__P26219.info = {"start":6439,"length":173,"line":211,"column":8,"endLine":214,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setRelativeToCamera","argumentNames":["this","on"]}

function particles_ParticleSource_setRelativeToCamera__P26219_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setRelativeToCamera__P26219, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_setFlag__P25582(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1145]) return breakpoint(s, 3, 1145, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1146]) return breakpoint(s, 4, 1146, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1147]) return breakpoint(s, 5, 1147, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["flags"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | s.arg1);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setFlag__P25582.info = {"start":24029,"length":130,"line":784,"column":4,"endLine":787,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setFlag","argumentNames":["this","flag","on"]}

function Sprite_setFlag__P25582_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setFlag__P25582, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite__destroyCore__P25592(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___35983 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1185]) return breakpoint(s, 7, 1185, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    s.lastBrkId = 1186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1186]) return breakpoint(s, 8, 1186, r0);
  case 8:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 480; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.scene___35983 = (r0);
    s.lastBrkId = 1187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1187]) return breakpoint(s, 10, 1187, r0);
  case 10:
    r0 = s.scene___35983.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg0);
    s.lastBrkId = 1188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1188]) return breakpoint(s, 11, 1188, r0);
  case 11:
    s.tmp_2 = Sprite_kind__P25570_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 481; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___35983.fields["spritesByKind"];
    s.tmp_3 = r0;
    s.tmp_5 = Sprite_kind__P25570_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 482; s.pc = 13; return s.tmp_5;
  case 13:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_3, s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1189]) return breakpoint(s, 14, 1189, r0);
  case 14:
    s.tmp_7 = sprites_SpriteSet_remove__P25625_mk(s);
    r0 = s.scene___35983.fields["spritesByKind"];
    s.tmp_8 = r0;
    s.tmp_10 = Sprite_kind__P25570_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 483; s.pc = 16; return s.tmp_10;
  case 16:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_8, s.tmp_9);
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = s.arg0;
    s.callLocIdx = 484; s.pc = 15; return s.tmp_7;
  case 15:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1190]) return breakpoint(s, 17, 1190, r0);
  case 17:
    s.tmp_0 = PhysicsEngine__C25666_v1_2_mk(s);
    r0 = s.scene___35983.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C25666_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.removeSprite;
    s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 1191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1191]) return breakpoint(s, 19, 1191, r0);
  case 19:
    r0 = s.arg0.fields["destroyHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1192]) return breakpoint(s, 20, 1192, r0);
  case 20:
    s.tmp_1 = if_destroyHandler_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "destroyHandler"), 1);
      s.callLocIdx = 485; s.pc = 21; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["destroyHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["destroyHandler"], 1); s.callLocIdx = 485; s.pc = 21; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 485; s.pc = 21; return s.tmp_1;; }
     else { s.callLocIdx = 485; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1193]) return breakpoint(s, 22, 1193, r0);
  case 22:
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P36012);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, Sprite__destroyCore_inline__P36019);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_3 = helpers_arrayFilter__P23481_mk(s);
    r0 = s.scene___35983.fields["destroyedHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 487; s.pc = 24; return s.tmp_3;
  case 24:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 489; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite__destroyCore__P25592.info = {"start":30399,"length":522,"line":974,"column":4,"endLine":986,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"_destroyCore","argumentNames":["this"]}

function Sprite__destroyCore__P25592_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite__destroyCore__P25592, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  scene___35983: undefined,
  arg0: undefined,
} }





function forEach_inline__P36012(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P25570_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 486; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P36012.info = {"start":30844,"length":26,"line":984,"column":20,"endLine":984,"endColumn":46,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P36012_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P36012, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite__destroyCore_inline__P36019(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 488; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 488; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 488; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 488; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite__destroyCore_inline__P36019.info = {"start":30893,"length":20,"line":985,"column":21,"endLine":985,"endColumn":41,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite__destroyCore_inline__P36019_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite__destroyCore_inline__P36019, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_removeSprite__P25669(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C25666_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_removeSprite__P25669.info = {"start":159,"length":32,"line":10,"column":4,"endLine":10,"endColumn":36,"fileName":"pxt_modules/game/physics.ts","functionName":"removeSprite","argumentNames":["this","sprite"]}

function PhysicsEngine_removeSprite__P25669_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_removeSprite__P25669, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_remove__P25625(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___36028 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C25618_VT)) failedCast(r0);
    s.lastBrkId = 1275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1275]) return breakpoint(s, 4, 1275, r0);
  case 4:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_0, s.arg1, undefined);
    s.i___36028 = (r0);
    s.lastBrkId = 1276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1276]) return breakpoint(s, 5, 1276, r0);
  case 5:
    r0 = (s.i___36028 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1277]) return breakpoint(s, 6, 1277, r0);
  case 6:
    s.tmp_1 = helpers_arraySplice__P23471_mk(s);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___36028;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 535; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1278]) return breakpoint(s, 8, 1278, r0);
  case 8:
    r0 = true;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1279]) return breakpoint(s, 9, 1279, r0);
  case 9:
    r0 = false;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_remove__P25625.info = {"start":1827,"length":235,"line":66,"column":8,"endLine":73,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"remove","argumentNames":["this","sprite"]}

function sprites_SpriteSet_remove__P25625_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_remove__P25625, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  i___36028: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_kind__P25570(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1068]) return breakpoint(s, 1, 1068, r0);
  case 1:
    r0 = s.arg0.fields["_kind"];
    return leave(s, r0)
  default: oops()
} } }
Sprite_kind__P25570.info = {"start":13674,"length":41,"line":486,"column":4,"endLine":488,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"kind","argumentNames":["this"]}

function Sprite_kind__P25570_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_kind__P25570, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_popScene__P26066(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.oldScene___35862 = undefined;
    s.lastBrkId = 1947;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1947]) return breakpoint(s, 11, 1947, r0);
  case 11:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 935; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.oldScene___35862 = (r0);
    s.lastBrkId = 1948;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1948]) return breakpoint(s, 13, 1948, r0);
  case 13:
    s.tmp_0 = r0 = globals._sceneStack___27840;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals._sceneStack___27840);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1949;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1949]) return breakpoint(s, 14, 1949, r0);
  case 14:
    r0 = pxsim_Array_.pop(globals._sceneStack___27840);
    globals._scene___27839 = (r0);
    s.lastBrkId = 1950;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1950]) return breakpoint(s, 15, 1950, r0);
  case 15:
    s.tmp_0 = control_popEventContext__P23781_mk(s);
    s.callLocIdx = 936; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 1951;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1951]) return breakpoint(s, 17, 1951, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(globals._scene___27839);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1952;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1952]) return breakpoint(s, 18, 1952, r0);
  case 18:
    s.tmp_0 = control_popEventContext__P23781_mk(s);
    s.callLocIdx = 937; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 1953;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1953]) return breakpoint(s, 20, 1953, r0);
  case 20:
    globals._scene___27839 = (undefined);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 1954;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1954]) return breakpoint(s, 21, 1954, r0);
  case 21:
    r0 = pxsim_numops_toBoolDecr(globals._scene___27839);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1955;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1955]) return breakpoint(s, 22, 1955, r0);
  case 22:
    s.tmp_0 = particles_enableAll__P26240_mk(s);
    s.callLocIdx = 938; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 1956;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1956]) return breakpoint(s, 24, 1956, r0);
  case 24:
    r0 = pxsim_numops_toBoolDecr(globals._scenePopHandlers___27842);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1957;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1957]) return breakpoint(s, 25, 1957, r0);
  case 25:
    r0 = pxsim_pxtcore_mkAction(1, game_popScene_inline__P35883);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.oldScene___35862);
    s.tmp_1 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_1.arg0 = globals._scenePopHandlers___27842;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 940; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_popScene__P26066.info = {"start":2033,"length":548,"line":75,"column":4,"endLine":93,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"popScene","argumentNames":[]}

function game_popScene__P26066_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_popScene__P26066, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  oldScene___35862: undefined,
} }





function game_popScene_inline__P35883(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 939; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_popScene_inline__P35883.info = {"start":2545,"length":18,"line":91,"column":38,"endLine":91,"endColumn":56,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["cb"]}

function game_popScene_inline__P35883_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_popScene_inline__P35883, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_enableAll__P26240(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___35887 = undefined;
    s.lastBrkId = 2354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2354]) return breakpoint(s, 3, 2354, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P28188_mk(s);
    s.callLocIdx = 1177; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___35887 = (r0);
    s.lastBrkId = 2355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2355]) return breakpoint(s, 5, 2355, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___35887);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2356]) return breakpoint(s, 6, 2356, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_0.arg0 = s.sources___35887;
    s.tmp_0.arg1 = particles_enableAll_inline__P35893;
    s.callLocIdx = 1179; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2357]) return breakpoint(s, 8, 2357, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P28184_mk(s);
    s.callLocIdx = 1180; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_enableAll__P26240.info = {"start":12649,"length":193,"line":413,"column":4,"endLine":419,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"enableAll","argumentNames":[]}

function particles_enableAll__P26240_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_enableAll__P26240, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___35887: undefined,
} }





function particles_enableAll_inline__P35893(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_enabled__P26221_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1178; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
particles_enableAll_inline__P35893.info = {"start":12773,"length":21,"line":416,"column":28,"endLine":416,"endColumn":49,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_enableAll_inline__P35893_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_enableAll_inline__P35893, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function control_popEventContext__P23781(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___35900 = undefined;
    s.context___35908 = undefined;
    s.lastBrkId = 464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[464]) return breakpoint(s, 8, 464, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___27499);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[465]) return breakpoint(s, 9, 465, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[466]) return breakpoint(s, 10, 466, r0);
  case 10:
    r0 = pxsim_Array_.pop(globals.eventContexts___27499);
    s.ctx___35900 = (r0);
    s.lastBrkId = 467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[467]) return breakpoint(s, 11, 467, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.ctx___35900);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[468]) return breakpoint(s, 12, 468, r0);
  case 12:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[469]) return breakpoint(s, 13, 469, r0);
  case 13:
    s.tmp_2 = control_EventContext_unregister__P23773_mk(s);
    s.tmp_2.arg0 = s.ctx___35900;
    s.callLocIdx = 60; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[470]) return breakpoint(s, 15, 470, r0);
  case 15:
    s.tmp_0 = r0 = globals.eventContexts___27499;
    r0 = pxsim_Array__length(globals.eventContexts___27499);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    s.context___35908 = (r0);
    s.lastBrkId = 471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[471]) return breakpoint(s, 16, 471, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.context___35908);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[472]) return breakpoint(s, 17, 472, r0);
  case 17:
    s.tmp_0 = control_EventContext_register__P23772_mk(s);
    s.tmp_0.arg0 = s.context___35908;
    s.callLocIdx = 61; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[473]) return breakpoint(s, 19, 473, r0);
  case 19:
    globals.eventContexts___27499 = (undefined);
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_popEventContext__P23781.info = {"start":7568,"length":413,"line":232,"column":4,"endLine":246,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"popEventContext","argumentNames":[]}

function control_popEventContext__P23781_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_popEventContext__P23781, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ctx___35900: undefined,
  context___35908: undefined,
} }





function control_EventContext_register__P23772(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___35921 = undefined;
    s.unnamed356___U1 = undefined;
    s.unnamed357___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C23766_VT)) failedCast(r0);
    s.lastBrkId = 423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[423]) return breakpoint(s, 3, 423, r0);
  case 3:
    s.h___35921 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed356___U1 = (r0);
    s.unnamed357___U2 = (0);
    s.lastBrkId = 424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[424]) return breakpoint(s, 4, 424, r0);
  case 4:
  case 1:
    s.tmp_0 = r0 = s.unnamed357___U2;
    r0 = pxsim_Array__length(s.unnamed356___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed356___U1, s.unnamed357___U2);
    s.h___35921 = (r0);
    s.lastBrkId = 425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[425]) return breakpoint(s, 5, 425, r0);
  case 5:
    s.tmp_2 = control_EventHandler_register__P27492_mk(s);
    s.tmp_2.arg0 = s.h___35921;
    s.callLocIdx = 51; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    r0 = (s.unnamed357___U2 + 1);
    s.unnamed357___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed356___U1 = (undefined);
    s.lastBrkId = 426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[426]) return breakpoint(s, 7, 426, r0);
  case 7:
    s.tmp_0 = control_EventContext_registerFrameCallbacks__P27497_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 52; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_register__P23772.info = {"start":4386,"length":138,"line":131,"column":8,"endLine":135,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventContext_register__P23772_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_register__P23772, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  h___35921: undefined,
  unnamed356___U1: undefined,
  unnamed357___U2: undefined,
  arg0: undefined,
} }





function controller__setUserEventsEnabled__P25372(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[914]) return breakpoint(s, 1, 914, r0);
  case 1:
    globals._userEventsEnabled___27661 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__setUserEventsEnabled__P25372.info = {"start":10070,"length":101,"line":291,"column":4,"endLine":293,"endColumn":5,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"_setUserEventsEnabled","argumentNames":["enabled"]}

function controller__setUserEventsEnabled__P25372_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__setUserEventsEnabled__P25372, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_constructor__P26145(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C26144_VT)) failedCast(r0);
    r0 = (s.arg0).fields["iconImage"] = (s.arg1);
    r0 = (s.arg0).fields["getText"] = (s.arg2);
    r0 = (s.arg0).fields["action"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_constructor__P26145.info = {"start":786,"length":108,"line":38,"column":8,"endLine":39,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["this","iconImage","getText","action"]}

function scene_systemMenu_MenuOption_constructor__P26145_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_constructor__P26145, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function helpers_screenBrightness__P25138(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[562]) return breakpoint(s, 1, 562, r0);
  case 1:
    r0 = globals.brightness___25125;
    return leave(s, r0)
  default: oops()
} } }
helpers_screenBrightness__P25138.info = {"start":7643,"length":98,"line":244,"column":4,"endLine":246,"endColumn":5,"fileName":"pxt_modules/screen---st7735/image.ts","functionName":"screenBrightness","argumentNames":["img"]}

function helpers_screenBrightness__P25138_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_screenBrightness__P25138, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function music_volume__P24982(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[482]) return breakpoint(s, 1, 482, r0);
  case 1:
    s.tmp_0 = music_initVolume__P27534_mk(s);
    s.callLocIdx = 65; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[483]) return breakpoint(s, 3, 483, r0);
  case 3:
    r0 = globals.globalVolume___27530;
    return leave(s, r0)
  default: oops()
} } }
music_volume__P24982.info = {"start":1781,"length":90,"line":61,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/mixer---stm32/melody.ts","functionName":"volume","argumentNames":[]}

function music_volume__P24982_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_volume__P24982, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function music_initVolume__P27534(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[477]) return breakpoint(s, 3, 477, r0);
  case 3:
    r0 = (globals.globalVolume___27530 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[478]) return breakpoint(s, 4, 478, r0);
  case 4:
    globals.globalVolume___27530 = (0);
    s.lastBrkId = 479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[479]) return breakpoint(s, 5, 479, r0);
  case 5:
    s.tmp_0 = music_setVolume__P24981_mk(s);
    r0 = pxsim_pxtcore.getConfig(59, 128);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 62; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_initVolume__P27534.info = {"start":1014,"length":180,"line":33,"column":4,"endLine":38,"endColumn":5,"fileName":"pxt_modules/mixer---stm32/melody.ts","functionName":"initVolume","argumentNames":[]}

function music_initVolume__P27534_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_initVolume__P27534, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function helpers_arrayConcat__P23484(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.out___37103 = undefined;
    s.value___37106 = undefined;
    s.unnamed346___U2 = undefined;
    s.unnamed347___U3 = undefined;
    s.value___37113 = undefined;
    s.unnamed348___U5 = undefined;
    s.unnamed349___U6 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 97;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[97]) return breakpoint(s, 5, 97, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.out___37103 = (r0);
    s.lastBrkId = 98;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[98]) return breakpoint(s, 6, 98, r0);
  case 6:
    s.value___37106 = (undefined);
    s.unnamed346___U2 = (s.arg0);
    s.unnamed347___U3 = (0);
    s.lastBrkId = 99;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[99]) return breakpoint(s, 7, 99, r0);
  case 7:
  case 1:
    s.tmp_0 = r0 = s.unnamed347___U3;
    r0 = pxsim_Array__length(s.unnamed346___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed346___U2, s.unnamed347___U3);
    s.value___37106 = (r0);
    s.lastBrkId = 100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[100]) return breakpoint(s, 8, 100, r0);
  case 8:
    r0 = pxsim_Array__push(s.out___37103, s.value___37106);
    r0 = (s.unnamed347___U3 + 1);
    s.unnamed347___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed346___U2 = (undefined);
    s.lastBrkId = 101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[101]) return breakpoint(s, 9, 101, r0);
  case 9:
    s.value___37113 = (undefined);
    s.unnamed348___U5 = (s.arg1);
    s.unnamed349___U6 = (0);
    s.lastBrkId = 102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[102]) return breakpoint(s, 10, 102, r0);
  case 10:
  case 3:
    s.tmp_0 = r0 = s.unnamed349___U6;
    r0 = pxsim_Array__length(s.unnamed348___U5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed348___U5, s.unnamed349___U6);
    s.value___37113 = (r0);
    s.lastBrkId = 103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[103]) return breakpoint(s, 11, 103, r0);
  case 11:
    r0 = pxsim_Array__push(s.out___37103, s.value___37113);
    r0 = (s.unnamed349___U6 + 1);
    s.unnamed349___U6 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed348___U5 = (undefined);
    s.lastBrkId = 104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[104]) return breakpoint(s, 12, 104, r0);
  case 12:
    r0 = s.out___37103;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayConcat__P23484.info = {"start":8639,"length":264,"line":288,"column":4,"endLine":297,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayConcat","argumentNames":["arr","otherArr"]}

function helpers_arrayConcat__P23484_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayConcat__P23484, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  out___37103: undefined,
  value___37106: undefined,
  unnamed346___U2: undefined,
  unnamed347___U3: undefined,
  value___37113: undefined,
  unnamed348___U5: undefined,
  unnamed349___U6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_PauseMenu_show__P26154(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.current___35354 = undefined;
    s.i___35355 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C26152_VT)) failedCast(r0);
    s.lastBrkId = 2028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2028]) return breakpoint(s, 3, 2028, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = if_generator_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "generator"), 1);
      s.callLocIdx = 981; s.pc = 4; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["generator"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["generator"], 1); s.callLocIdx = 981; s.pc = 4; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 981; s.pc = 4; return s.tmp_2;; }
     else { s.callLocIdx = 981; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["options"] = (s.tmp_1);
    s.lastBrkId = 2029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2029]) return breakpoint(s, 5, 2029, r0);
  case 5:
    r0 = (s.arg0).fields["selection"] = (0);
    s.lastBrkId = 2030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2030]) return breakpoint(s, 6, 2030, r0);
  case 6:
    s.i___35355 = (0);
    s.lastBrkId = 2031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2031]) return breakpoint(s, 7, 2031, r0);
  case 7:
  case 1:
    s.lastBrkId = 2032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2032]) return breakpoint(s, 8, 2032, r0);
  case 8:
    s.tmp_1 = r0 = s.i___35355;
    r0 = s.arg0.fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2033]) return breakpoint(s, 9, 2033, r0);
  case 9:
    r0 = s.arg0.fields["options"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.i___35355);
    s.current___35354 = (r0);
    s.lastBrkId = 2034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2034]) return breakpoint(s, 10, 2034, r0);
  case 10:
    s.tmp_0 = scene_systemMenu_MenuOption_show__P26146_mk(s);
    s.tmp_0.arg0 = s.current___35354;
    s.callLocIdx = 982; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2035]) return breakpoint(s, 12, 2035, r0);
  case 12:
    s.tmp_0 = scene_systemMenu_MenuOption_setTheme__P26149_mk(s);
    s.tmp_0.arg0 = s.current___35354;
    r0 = s.arg0.fields["theme"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 983; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 2036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2036]) return breakpoint(s, 14, 2036, r0);
  case 14:
    s.tmp_0 = scene_systemMenu_MenuOption_position__P26147_mk(s);
    s.tmp_0.arg0 = s.current___35354;
    s.tmp_2 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "padding");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["padding"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["padding"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 984; s.pc = 16; return s.tmp_2; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = r0 = s.i___35355;
    s.tmp_7 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "cardsPerRow");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 985; s.pc = 17; return s.tmp_7; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 % s.tmp_6);
    s.tmp_4 = r0;
    s.tmp_10 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_10.arg0 = r0;
    if (!s.tmp_10.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_10.arg0, "cardWidth");
    } else {
      s.tmp_10.fn = s.tmp_10.arg0.vtable.iface["cardWidth"];
      if (s.tmp_10.fn == null) { s.retval = s.tmp_10.arg0.fields["cardWidth"]; }
      else if (!s.tmp_10.fn.isGetter) { s.retval = bind(s.tmp_10); }
     else { s.callLocIdx = 986; s.pc = 18; return s.tmp_10; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_9 = r0;
    s.tmp_12 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_12.arg0 = r0;
    if (!s.tmp_12.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_12.arg0, "cardSpacing");
    } else {
      s.tmp_12.fn = s.tmp_12.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_12.fn == null) { s.retval = s.tmp_12.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_12.fn.isGetter) { s.retval = bind(s.tmp_12); }
     else { s.callLocIdx = 987; s.pc = 19; return s.tmp_12; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_9 + s.tmp_11);
    s.tmp_8 = r0;
    r0 = (s.tmp_4 * s.tmp_8);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.tmp_14 = if_cardsTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_14.arg0 = r0;
    if (!s.tmp_14.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_14.arg0, "cardsTop");
    } else {
      s.tmp_14.fn = s.tmp_14.arg0.vtable.iface["cardsTop"];
      if (s.tmp_14.fn == null) { s.retval = s.tmp_14.arg0.fields["cardsTop"]; }
      else if (!s.tmp_14.fn.isGetter) { s.retval = bind(s.tmp_14); }
     else { s.callLocIdx = 988; s.pc = 20; return s.tmp_14; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_13 = r0;
    s.tmp_17 = r0 = s.i___35355;
    s.tmp_19 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_19.arg0 = r0;
    if (!s.tmp_19.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_19.arg0, "cardsPerRow");
    } else {
      s.tmp_19.fn = s.tmp_19.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_19.fn == null) { s.retval = s.tmp_19.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_19.fn.isGetter) { s.retval = bind(s.tmp_19); }
     else { s.callLocIdx = 989; s.pc = 21; return s.tmp_19; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_17, s.tmp_18);
    s.tmp_16 = r0;
    s.tmp_22 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_22.arg0 = r0;
    if (!s.tmp_22.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_22.arg0, "cardWidth");
    } else {
      s.tmp_22.fn = s.tmp_22.arg0.vtable.iface["cardWidth"];
      if (s.tmp_22.fn == null) { s.retval = s.tmp_22.arg0.fields["cardWidth"]; }
      else if (!s.tmp_22.fn.isGetter) { s.retval = bind(s.tmp_22); }
     else { s.callLocIdx = 990; s.pc = 22; return s.tmp_22; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_21 = r0;
    s.tmp_24 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_24.arg0 = r0;
    if (!s.tmp_24.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_24.arg0, "cardSpacing");
    } else {
      s.tmp_24.fn = s.tmp_24.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_24.fn == null) { s.retval = s.tmp_24.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_24.fn.isGetter) { s.retval = bind(s.tmp_24); }
     else { s.callLocIdx = 991; s.pc = 23; return s.tmp_24; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_23 = r0;
    r0 = (s.tmp_21 + s.tmp_23);
    s.tmp_20 = r0;
    r0 = (s.tmp_16 * s.tmp_20);
    s.tmp_15 = r0;
    r0 = (s.tmp_13 + s.tmp_15);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 992; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2037]) return breakpoint(s, 24, 2037, r0);
  case 24:
    r0 = (s.i___35355 + 1);
    s.i___35355 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2038]) return breakpoint(s, 25, 2038, r0);
  case 25:
    s.tmp_0 = controller__setUserEventsEnabled__P25372_mk(s);
    s.tmp_0.arg0 = false;
    s.callLocIdx = 993; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.lastBrkId = 2039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2039]) return breakpoint(s, 27, 2039, r0);
  case 27:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P35418);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_1.arg0 = globals.A___25283;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 995; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.lastBrkId = 2043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2043]) return breakpoint(s, 29, 2043, r0);
  case 29:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P35438);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_1.arg0 = globals.A___25283;
    s.tmp_1.arg1 = 2052;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 997; s.pc = 30; return s.tmp_1;
  case 30:
    r0 = s.retval;
    s.lastBrkId = 2048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2048]) return breakpoint(s, 31, 2048, r0);
  case 31:
    s.tmp_0 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_0.arg0 = globals.B___25284;
    s.tmp_0.arg1 = 2053;
    s.tmp_0.arg2 = scene_systemMenu_PauseMenu_show_inline__P35467;
    s.callLocIdx = 999; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.lastBrkId = 2050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2050]) return breakpoint(s, 33, 2050, r0);
  case 33:
    s.tmp_0 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_0.arg0 = globals.menu___25289;
    s.tmp_0.arg1 = 2053;
    s.tmp_0.arg2 = scene_systemMenu_PauseMenu_show_inline__P35472;
    s.callLocIdx = 1001; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    s.lastBrkId = 2052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2052]) return breakpoint(s, 35, 2052, r0);
  case 35:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P35477);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_1.arg0 = globals.up___25286;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1005; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 2054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2054]) return breakpoint(s, 37, 2054, r0);
  case 37:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P35489);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_1.arg0 = globals.left___25285;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1008; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.lastBrkId = 2056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2056]) return breakpoint(s, 39, 2056, r0);
  case 39:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P35498);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_1.arg0 = globals.down___25288;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1012; s.pc = 40; return s.tmp_1;
  case 40:
    r0 = s.retval;
    s.lastBrkId = 2058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2058]) return breakpoint(s, 41, 2058, r0);
  case 41:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P35514);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P25362_mk(s);
    s.tmp_1.arg0 = globals.right___25287;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1015; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    s.lastBrkId = 2060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2060]) return breakpoint(s, 43, 2060, r0);
  case 43:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P35526);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = game_onShade__P26074_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1018; s.pc = 44; return s.tmp_1;
  case 44:
    r0 = s.retval;
    s.lastBrkId = 2063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2063]) return breakpoint(s, 45, 2063, r0);
  case 45:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P26156_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 1019; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show__P26154.info = {"start":3296,"length":2241,"line":123,"column":8,"endLine":181,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"show","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_show__P26154_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show__P26154, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  current___35354: undefined,
  i___35355: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P35418(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2040]) return breakpoint(s, 6, 2040, r0);
  case 6:
    r0 = s.caps[0].fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["options"];
    s.tmp_5 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2041]) return breakpoint(s, 7, 2041, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2042]) return breakpoint(s, 8, 2042, r0);
  case 8:
    s.tmp_8 = scene_systemMenu_MenuOption_setState__P26150_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_9 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 1;
    s.callLocIdx = 994; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P35418.info = {"start":4025,"length":170,"line":140,"column":50,"endLine":143,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P35418_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P35418, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P35438(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2044]) return breakpoint(s, 6, 2044, r0);
  case 6:
    r0 = s.caps[0].fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["options"];
    s.tmp_5 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2045]) return breakpoint(s, 7, 2045, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2046]) return breakpoint(s, 8, 2046, r0);
  case 8:
    s.tmp_8 = scene_systemMenu_MenuOption_setState__P26150_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_9 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 0;
    s.callLocIdx = 996; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 2047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2047]) return breakpoint(s, 10, 2047, r0);
  case 10:
    r0 = s.caps[0].fields["options"];
    s.tmp_1 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    r0 = r0.fields["action"];
    s.tmp_0 = r0;
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P35438.info = {"start":4247,"length":247,"line":145,"column":48,"endLine":149,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P35438_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P35438, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P35467(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2049]) return breakpoint(s, 1, 2049, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_closeMenu__P26159_mk(s);
    s.callLocIdx = 998; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P35467.info = {"start":4548,"length":50,"line":151,"column":50,"endLine":153,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P35467_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P35467, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P35472(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2051]) return breakpoint(s, 1, 2051, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_closeMenu__P26159_mk(s);
    s.callLocIdx = 1000; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P35472.info = {"start":4655,"length":50,"line":155,"column":53,"endLine":157,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P35472_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P35472, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P35477(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2053]) return breakpoint(s, 1, 2053, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P26156_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_max__P23501_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    s.tmp_4 = if_cardsPerRow_1_mk(s);
    r0 = s.caps[0].fields["theme"];
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "cardsPerRow");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1002; s.pc = 4; return s.tmp_4; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1003; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1004; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P35477.info = {"start":4760,"length":110,"line":159,"column":51,"endLine":161,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P35477_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P35477, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P35489(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2055]) return breakpoint(s, 1, 2055, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P26156_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_max__P23501_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1006; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1007; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P35489.info = {"start":4927,"length":89,"line":163,"column":53,"endLine":165,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P35489_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P35489, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P35498(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2057]) return breakpoint(s, 1, 2057, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P26156_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_min__P23502_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg0 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_4 = r0;
    s.tmp_6 = if_cardsPerRow_1_mk(s);
    r0 = s.caps[0].fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "cardsPerRow");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1009; s.pc = 4; return s.tmp_6; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1010; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1011; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P35498.info = {"start":5073,"length":132,"line":167,"column":53,"endLine":169,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P35498_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P35498, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P35514(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2059]) return breakpoint(s, 1, 2059, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P26156_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_min__P23502_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg0 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1013; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1014; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P35514.info = {"start":5263,"length":111,"line":171,"column":54,"endLine":173,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P35514_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P35514, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P35526(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2061]) return breakpoint(s, 1, 2061, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_onUpdate__P26155_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1016; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2062]) return breakpoint(s, 3, 2062, r0);
  case 3:
    s.tmp_0 = scene_systemMenu_PauseMenu_drawText__P26157_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1017; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P35526.info = {"start":5403,"length":87,"line":175,"column":25,"endLine":178,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P35526_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P35526, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_drawText__P26157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C26152_VT)) failedCast(r0);
    s.lastBrkId = 2087;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2087]) return breakpoint(s, 4, 2087, r0);
  case 4:
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2088;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2088]) return breakpoint(s, 5, 2088, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2089;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2089]) return breakpoint(s, 6, 2089, r0);
  case 6:
    s.tmp_3 = helpers_imageFillRect__P25130_mk(s);
    s.tmp_3.arg0 = globals.screen___25204;
    s.tmp_3.arg1 = 0;
    s.tmp_3.arg2 = 0;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_3.arg3 = r0;
    s.tmp_5 = if_cardsTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "cardsTop");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["cardsTop"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["cardsTop"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1030; s.pc = 8; return s.tmp_5; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 2);
    s.tmp_3.arg4 = r0;
    s.tmp_3.arg5 = 15;
    s.callLocIdx = 1031; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2090;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2090]) return breakpoint(s, 9, 2090, r0);
  case 9:
    s.tmp_0 = helpers_imagePrintCenter__P25161_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    s.tmp_1 = if_headerText_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "headerText");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["headerText"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["headerText"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1032; s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 2;
    s.tmp_0.arg3 = 1;
    s.tmp_2 = if_headerFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "headerFont");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["headerFont"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["headerFont"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1033; s.pc = 12; return s.tmp_2; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1034; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2091;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2091]) return breakpoint(s, 13, 2091, r0);
  case 13:
    s.tmp_0 = helpers_imageFillRect__P25130_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    s.tmp_0.arg1 = 0;
    s.tmp_2 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "infoTop");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["infoTop"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["infoTop"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1035; s.pc = 15; return s.tmp_2; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 3);
    s.tmp_0.arg2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_0.arg3 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_4 = r0;
    s.tmp_6 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "infoTop");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["infoTop"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["infoTop"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1036; s.pc = 16; return s.tmp_6; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 6);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 15;
    s.callLocIdx = 1037; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 2092;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2092]) return breakpoint(s, 17, 2092, r0);
  case 17:
    s.tmp_0 = helpers_imageFillRect__P25130_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    s.tmp_1 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "padding");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["padding"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["padding"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1038; s.pc = 19; return s.tmp_1; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "infoTop");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["infoTop"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["infoTop"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1039; s.pc = 20; return s.tmp_2; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_3 = r0;
    s.tmp_6 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "padding");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["padding"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["padding"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1040; s.pc = 21; return s.tmp_6; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 << 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_0.arg3 = r0;
    s.tmp_8 = if_charHeight_1_mk(s);
    s.tmp_9 = if_infoFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_9.arg0 = r0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "infoFont");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["infoFont"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["infoFont"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 1041; s.pc = 23; return s.tmp_9; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "charHeight");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["charHeight"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["charHeight"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 1042; s.pc = 22; return s.tmp_8; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 1);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1043; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 2093;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2093]) return breakpoint(s, 24, 2093, r0);
  case 24:
    s.tmp_0 = helpers_imagePrintCenter__P25161_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    s.tmp_1 = if_getText_1_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "getText"), 1);
      s.callLocIdx = 1044; s.pc = 26; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["getText"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["getText"], 1); s.callLocIdx = 1044; s.pc = 26; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 1044; s.pc = 26; return s.tmp_1;; }
     else { s.callLocIdx = 1044; s.pc = 26; return s.tmp_1; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_5 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "infoTop");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["infoTop"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["infoTop"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1045; s.pc = 27; return s.tmp_5; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 15;
    s.tmp_6 = if_infoFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "infoFont");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["infoFont"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["infoFont"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1046; s.pc = 28; return s.tmp_6; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1047; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_drawText__P26157.info = {"start":6927,"length":795,"line":224,"column":8,"endLine":241,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"drawText","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_drawText__P26157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_drawText__P26157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function helpers_imagePrintCenter__P25161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.w___35613 = undefined;
    s.x___35619 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[578]) return breakpoint(s, 3, 578, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[579]) return breakpoint(s, 4, 579, r0);
  case 4:
    s.tmp_2 = image_getFontForText__P25149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 96; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.arg4 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[580]) return breakpoint(s, 6, 580, r0);
  case 6:
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_0 = r0;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg4;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 97; s.pc = 7; return s.tmp_2; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.w___35613 = (r0);
    s.lastBrkId = 581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[581]) return breakpoint(s, 8, 581, r0);
  case 8:
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.w___35613);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    s.x___35619 = (r0);
    s.lastBrkId = 582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[582]) return breakpoint(s, 9, 582, r0);
  case 9:
    s.tmp_0 = helpers_imagePrint__P25162_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.x___35619;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.tmp_0.arg5 = s.arg4;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 98; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imagePrintCenter__P25161.info = {"start":15025,"length":295,"line":206,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/screen---st7735/text.ts","functionName":"imagePrintCenter","argumentNames":["img","text","y","color","font"]}

function helpers_imagePrintCenter__P25161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imagePrintCenter__P25161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  w___35613: undefined,
  x___35619: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function scene_systemMenu_PauseMenu_setSelection__P26156(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C26152_VT)) failedCast(r0);
    s.lastBrkId = 2079;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2079]) return breakpoint(s, 10, 2079, r0);
  case 10:
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2080;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2080]) return breakpoint(s, 11, 2080, r0);
  case 11:
    { step = 9; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2081;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2081]) return breakpoint(s, 12, 2081, r0);
  case 12:
    r0 = s.arg0.fields["options"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2082;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2082]) return breakpoint(s, 13, 2082, r0);
  case 13:
    s.tmp_6 = scene_systemMenu_MenuOption_setState__P26150_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 2;
    s.callLocIdx = 1027; s.pc = 14; return s.tmp_6;
  case 14:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 2083;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2083]) return breakpoint(s, 15, 2083, r0);
  case 15:
    r0 = (s.arg0).fields["selection"] = (s.arg1);
    s.lastBrkId = 2084;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2084]) return breakpoint(s, 16, 2084, r0);
  case 16:
    r0 = s.arg0.fields["options"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2085;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2085]) return breakpoint(s, 17, 2085, r0);
  case 17:
    s.tmp_4 = controller_Button__C25355_v0_1_mk(s);
    s.tmp_4.arg0 = globals.A___25283;
    if (!checkSubtype(s.tmp_4.arg0, controller_Button__C25355_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.isPressed;
    s.pc = 18; return s.tmp_4;
  case 18:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.tmp_6 = scene_systemMenu_MenuOption_setState__P26150_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    s.callLocIdx = 1028; s.pc = 19; return s.tmp_6;
  case 19:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 2086;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2086]) return breakpoint(s, 20, 2086, r0);
  case 20:
    s.tmp_0 = scene_systemMenu_PauseMenu_updateScrollTarget__P28094_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1029; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_setSelection__P26156.info = {"start":6436,"length":481,"line":208,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setSelection","argumentNames":["this","selection"]}

function scene_systemMenu_PauseMenu_setSelection__P26156_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_setSelection__P26156, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_PauseMenu_updateScrollTarget__P28094(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.row___35814 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C26152_VT)) failedCast(r0);
    s.lastBrkId = 2097;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2097]) return breakpoint(s, 8, 2097, r0);
  case 8:
    r0 = s.arg0.fields["selection"];
    s.tmp_0 = r0;
    s.tmp_2 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "cardsPerRow");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1050; s.pc = 9; return s.tmp_2; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_1);
    s.row___35814 = (r0);
    s.lastBrkId = 2098;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2098]) return breakpoint(s, 10, 2098, r0);
  case 10:
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_1 = r0;
    r0 = (s.row___35814 === s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.row___35814 - 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 === s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2099;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2099]) return breakpoint(s, 11, 2099, r0);
  case 11:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2100]) return breakpoint(s, 12, 2100, r0);
  case 12:
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_6 = r0;
    r0 = (s.row___35814 > s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2101]) return breakpoint(s, 13, 2101, r0);
  case 13:
    s.tmp_7 = r0 = s.arg0;
    r0 = s.tmp_7.fields["scrollRow"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_7).fields["scrollRow"] = (s.tmp_8);
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2102]) return breakpoint(s, 14, 2102, r0);
  case 14:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["scrollRow"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["scrollRow"] = (s.tmp_1);
  case 6:
    s.lastBrkId = 2103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2103]) return breakpoint(s, 15, 2103, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_2 = r0;
    s.tmp_5 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "cardSpacing");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1051; s.pc = 16; return s.tmp_5; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_7 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "cardWidth");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["cardWidth"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["cardWidth"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1052; s.pc = 17; return s.tmp_7; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["scrollTarget"] = (s.tmp_1);
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_updateScrollTarget__P28094.info = {"start":7907,"length":458,"line":250,"column":8,"endLine":260,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"updateScrollTarget","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_updateScrollTarget__P28094_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_updateScrollTarget__P28094, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  row___35814: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_onUpdate__P26155(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.t___35635 = undefined;
    s.i___35639 = undefined;
    s.dt___35668 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C26152_VT)) failedCast(r0);
    s.lastBrkId = 2064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2064]) return breakpoint(s, 10, 2064, r0);
  case 10:
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 250);
    s.t___35635 = (r0);
    s.lastBrkId = 2065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2065]) return breakpoint(s, 11, 2065, r0);
  case 11:
    s.i___35639 = (0);
    s.lastBrkId = 2066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2066]) return breakpoint(s, 12, 2066, r0);
  case 12:
  case 1:
    s.lastBrkId = 2067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2067]) return breakpoint(s, 13, 2067, r0);
  case 13:
    s.tmp_1 = r0 = s.i___35639;
    r0 = s.arg0.fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2068]) return breakpoint(s, 14, 2068, r0);
  case 14:
    s.tmp_4 = scene_systemMenu_MenuOption_setOffset__P26148_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___35639);
    s.tmp_4.arg0 = r0;
    s.tmp_8 = r0 = s.t___35635;
    s.tmp_11 = r0 = s.i___35639;
    s.tmp_13 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_13.arg0 = r0;
    if (!s.tmp_13.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_13.arg0, "cardsPerRow");
    } else {
      s.tmp_13.fn = s.tmp_13.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_13.fn == null) { s.retval = s.tmp_13.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_13.fn.isGetter) { s.retval = bind(s.tmp_13); }
     else { s.callLocIdx = 1020; s.pc = 16; return s.tmp_13; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = (s.tmp_11 % s.tmp_12);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 * 1.5707963267948966);
    s.tmp_9 = r0;
    r0 = (s.tmp_8 - s.tmp_9);
    s.tmp_7 = r0;
    r0 = pxsim.Math_.sin(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (2 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1021; s.pc = 15; return s.tmp_4;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2069]) return breakpoint(s, 17, 2069, r0);
  case 17:
    r0 = (s.i___35639 + 1);
    s.i___35639 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2070]) return breakpoint(s, 18, 2070, r0);
  case 18:
    s.tmp_0 = control_EventContext_deltaTime__P23771_mk(s);
    s.tmp_1 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 1022; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    r0 = r0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1023; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.dt___35668 = (r0);
    s.lastBrkId = 2071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2071]) return breakpoint(s, 21, 2071, r0);
  case 21:
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2072]) return breakpoint(s, 22, 2072, r0);
  case 22:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["scrollOffset"];
    s.tmp_5 = r0;
    r0 = (s.dt___35668 * 100);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["scrollOffset"] = (s.tmp_4);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2073]) return breakpoint(s, 23, 2073, r0);
  case 23:
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 > s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2074;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2074]) return breakpoint(s, 24, 2074, r0);
  case 24:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["scrollOffset"];
    s.tmp_5 = r0;
    r0 = (s.dt___35668 * 100);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["scrollOffset"] = (s.tmp_4);
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 2075;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2075]) return breakpoint(s, 25, 2075, r0);
  case 25:
    { step = 9; continue; }
  case 5:
  case 6:
    s.lastBrkId = 2076;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2076]) return breakpoint(s, 26, 2076, r0);
  case 26:
    s.tmp_2 = Math_abs__P23499_mk(s);
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1024; s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2077;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2077]) return breakpoint(s, 28, 2077, r0);
  case 28:
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_5 = r0;
    r0 = (s.arg0).fields["scrollOffset"] = (s.tmp_5);
  case 7:
  case 8:
    s.lastBrkId = 2078;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2078]) return breakpoint(s, 29, 2078, r0);
  case 29:
    s.tmp_0 = scene_Camera_offsetY__P25896_mk(s);
    s.tmp_1 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 1025; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    r0 = r0.fields["camera"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1026; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_onUpdate__P26155.info = {"start":5547,"length":879,"line":183,"column":8,"endLine":206,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"onUpdate","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_onUpdate__P26155_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_onUpdate__P26155, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  t___35635: undefined,
  i___35639: undefined,
  dt___35668: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setOffset__P26148(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C26144_VT)) failedCast(r0);
    s.lastBrkId = 2000;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2000]) return breakpoint(s, 1, 2000, r0);
  case 1:
    s.tmp_0 = Sprite_top__P25567_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["top"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 963; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2001;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2001]) return breakpoint(s, 3, 2001, r0);
  case 3:
    s.tmp_0 = Sprite_y__P25520_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P25519_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 964; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 965; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setOffset__P26148.info = {"start":1411,"length":123,"line":61,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setOffset","argumentNames":["this","offset"]}

function scene_systemMenu_MenuOption_setOffset__P26148_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setOffset__P26148, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_top__P25567(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___35746 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1064]) return breakpoint(s, 1, 1064, r0);
  case 1:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 356; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___35746 = (r0);
    s.lastBrkId = 1065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1065]) return breakpoint(s, 3, 1065, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C25666_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___35746;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = 0;
    s.tmp_1 = Fx_sub__P23530_mk(s);
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 357; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["_y"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 358; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C25666_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_top__P25567.info = {"start":12788,"length":256,"line":454,"column":4,"endLine":464,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"top","argumentNames":["this","value"]}

function Sprite_top__P25567_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_top__P25567, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  physics___35746: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function PhysicsEngine_moveSprite__P25670(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C25666_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_moveSprite__P25670.info = {"start":230,"length":43,"line":13,"column":4,"endLine":13,"endColumn":47,"fileName":"pxt_modules/game/physics.ts","functionName":"moveSprite","argumentNames":["this","s","dx","dy"]}

function PhysicsEngine_moveSprite__P25670_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_moveSprite__P25670, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_top__P25566(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1063]) return breakpoint(s, 1, 1063, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_y"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 355; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_top__P25566.info = {"start":12645,"length":53,"line":449,"column":4,"endLine":451,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"top","argumentNames":["this"]}
Sprite_top__P25566.isGetter = true;

function Sprite_top__P25566_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_top__P25566, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_y__P25520(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[982]) return breakpoint(s, 1, 982, r0);
  case 1:
    s.tmp_0 = Sprite_top__P25567_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_4 = Sprite_height__P25561_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 288; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 289; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_y__P25520.info = {"start":3081,"length":65,"line":126,"column":4,"endLine":128,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"y","argumentNames":["this","v"]}

function Sprite_y__P25520_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_y__P25520, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_height__P25561(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1057]) return breakpoint(s, 1, 1057, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_height"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 346; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_height__P25561.info = {"start":11642,"length":61,"line":413,"column":4,"endLine":415,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"height","argumentNames":["this"]}
Sprite_height__P25561.isGetter = true;

function Sprite_height__P25561_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_height__P25561, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setState__P26150(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C26144_VT)) failedCast(r0);
    s.lastBrkId = 2004;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2004]) return breakpoint(s, 4, 2004, r0);
  case 4:
    r0 = s.arg0.fields["state"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2005;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2005]) return breakpoint(s, 5, 2005, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2006;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2006]) return breakpoint(s, 6, 2006, r0);
  case 6:
    r0 = (s.arg0).fields["state"] = (s.arg1);
    s.lastBrkId = 2007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2007]) return breakpoint(s, 7, 2007, r0);
  case 7:
    s.tmp_0 = scene_systemMenu_MenuOption_updateCard__P28093_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 967; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setState__P26150.info = {"start":1655,"length":147,"line":71,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setState","argumentNames":["this","state"]}

function scene_systemMenu_MenuOption_setState__P26150_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setState__P26150, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_updateCard__P28093(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C26144_VT)) failedCast(r0);
    s.lastBrkId = 2013;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2013]) return breakpoint(s, 8, 2013, r0);
  case 8:
    r0 = s.arg0.fields["theme"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2014;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2014]) return breakpoint(s, 9, 2014, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2015;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2015]) return breakpoint(s, 10, 2015, r0);
  case 10:
    r0 = s.arg0.fields["state"];
    s.tmp_3 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_3);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_3);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_3);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2016;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2016]) return breakpoint(s, 11, 2016, r0);
  case 11:
    s.tmp_4 = Sprite_setImage__P25554_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_4.arg0 = r0;
    s.tmp_5 = if_basicCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "basicCard");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["basicCard"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["basicCard"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 970; s.pc = 13; return s.tmp_5; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 971; s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 2017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2017]) return breakpoint(s, 14, 2017, r0);
  case 14:
    { step = 6; continue; }
  case 4:
    s.lastBrkId = 2018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2018]) return breakpoint(s, 15, 2018, r0);
  case 15:
    s.tmp_0 = Sprite_setImage__P25554_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = if_selectedCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "selectedCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["selectedCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["selectedCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 972; s.pc = 17; return s.tmp_1; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 973; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 2019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2019]) return breakpoint(s, 18, 2019, r0);
  case 18:
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2020]) return breakpoint(s, 19, 2020, r0);
  case 19:
    s.tmp_0 = Sprite_setImage__P25554_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = if_activeCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "activeCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["activeCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["activeCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 974; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 975; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 2021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2021]) return breakpoint(s, 22, 2021, r0);
  case 22:
  case 6:
    s.lastBrkId = 2022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2022]) return breakpoint(s, 23, 2022, r0);
  case 23:
    s.tmp_0 = Sprite_x__P25518_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_x__P25517_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 976; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 977; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 2023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2023]) return breakpoint(s, 26, 2023, r0);
  case 26:
    s.tmp_0 = Sprite_y__P25520_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P25519_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 978; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 979; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_updateCard__P28093.info = {"start":2038,"length":497,"line":86,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"updateCard","argumentNames":["this"]}

function scene_systemMenu_MenuOption_updateCard__P28093_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_updateCard__P28093, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function Sprite_x__P25518(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[980]) return breakpoint(s, 1, 980, r0);
  case 1:
    s.tmp_0 = Sprite_left__P25563_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_4 = Sprite_width__P25560_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 283; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 284; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_x__P25518.info = {"start":2724,"length":65,"line":115,"column":4,"endLine":117,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"x","argumentNames":["this","v"]}

function Sprite_x__P25518_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_x__P25518, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_left__P25563(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___36681 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1059]) return breakpoint(s, 1, 1059, r0);
  case 1:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 348; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___36681 = (r0);
    s.lastBrkId = 1060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1060]) return breakpoint(s, 3, 1060, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C25666_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___36681;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_1 = Fx_sub__P23530_mk(s);
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 349; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["_x"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 350; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C25666_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_left__P25563.info = {"start":11954,"length":257,"line":424,"column":4,"endLine":434,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"left","argumentNames":["this","value"]}

function Sprite_left__P25563_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_left__P25563, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  physics___36681: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_left__P25562(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1058]) return breakpoint(s, 1, 1058, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_x"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 347; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_left__P25562.info = {"start":11810,"length":53,"line":419,"column":4,"endLine":421,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"left","argumentNames":["this"]}
Sprite_left__P25562.isGetter = true;

function Sprite_left__P25562_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_left__P25562, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_width__P25560(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1056]) return breakpoint(s, 1, 1056, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_width"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 345; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_width__P25560.info = {"start":11475,"length":59,"line":408,"column":4,"endLine":410,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"width","argumentNames":["this"]}
Sprite_width__P25560.isGetter = true;

function Sprite_width__P25560_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_width__P25560, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setTheme__P26149(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C26144_VT)) failedCast(r0);
    s.lastBrkId = 2002;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2002]) return breakpoint(s, 1, 2002, r0);
  case 1:
    r0 = (s.arg0).fields["theme"] = (s.arg1);
    s.lastBrkId = 2003;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2003]) return breakpoint(s, 2, 2003, r0);
  case 2:
    s.tmp_0 = scene_systemMenu_MenuOption_updateCard__P28093_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 966; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setTheme__P26149.info = {"start":1544,"length":101,"line":66,"column":8,"endLine":69,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setTheme","argumentNames":["this","theme"]}

function scene_systemMenu_MenuOption_setTheme__P26149_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setTheme__P26149, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_position__P26147(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C26144_VT)) failedCast(r0);
    s.lastBrkId = 1995;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1995]) return breakpoint(s, 1, 1995, r0);
  case 1:
    r0 = (s.arg0).fields["top"] = (s.arg2);
    s.lastBrkId = 1996;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1996]) return breakpoint(s, 2, 1996, r0);
  case 2:
    s.tmp_0 = Sprite_left__P25563_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 957; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 1997;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1997]) return breakpoint(s, 4, 1997, r0);
  case 4:
    s.tmp_0 = Sprite_top__P25567_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 958; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 1998;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1998]) return breakpoint(s, 6, 1998, r0);
  case 6:
    s.tmp_0 = Sprite_x__P25518_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_x__P25517_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 959; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 960; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1999;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1999]) return breakpoint(s, 9, 1999, r0);
  case 9:
    s.tmp_0 = Sprite_y__P25520_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P25519_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 961; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 962; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_position__P26147.info = {"start":1178,"length":223,"line":51,"column":8,"endLine":59,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"position","argumentNames":["this","left","top"]}

function scene_systemMenu_MenuOption_position__P26147_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_position__P26147, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_MenuOption_show__P26146(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C26144_VT)) failedCast(r0);
    s.lastBrkId = 1990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1990]) return breakpoint(s, 3, 1990, r0);
  case 3:
    r0 = s.arg0.fields["theme"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = if_basicCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "basicCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["basicCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["basicCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 952; s.pc = 4; return s.tmp_1; }
    }
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = globals.CARD_NORMAL___26168;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = sprites_create__P25440_mk(s);
    s.tmp_5.arg0 = s.tmp_2;
    s.tmp_5.arg1 = undefined;
    s.callLocIdx = 953; s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["card"] = (s.tmp_4);
    s.lastBrkId = 1991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1991]) return breakpoint(s, 6, 1991, r0);
  case 6:
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 954; s.pc = 7; return s.tmp_0; }
    }
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1992]) return breakpoint(s, 8, 1992, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P25440_mk(s);
    r0 = s.arg0.fields["iconImage"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 955; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["icon"] = (s.tmp_1);
    s.lastBrkId = 1993;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1993]) return breakpoint(s, 10, 1993, r0);
  case 10:
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 2;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 956; s.pc = 11; return s.tmp_0; }
    }
  case 11:
    r0 = s.retval;
    s.lastBrkId = 1994;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1994]) return breakpoint(s, 12, 1994, r0);
  case 12:
    r0 = (s.arg0).fields["state"] = (2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_show__P26146.info = {"start":904,"length":264,"line":41,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"show","argumentNames":["this"]}

function scene_systemMenu_MenuOption_show__P26146_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_show__P26146, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function sprites_create__P25440(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___36761 = undefined;
    s.sprite___36764 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 973;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[973]) return breakpoint(s, 1, 973, r0);
  case 1:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 274; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___36761 = (r0);
    s.lastBrkId = 974;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[974]) return breakpoint(s, 3, 974, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(Sprite__C25504_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Sprite_constructor__P25551_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.callLocIdx = 275; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.sprite___36764 = (s.tmp_0);
    s.lastBrkId = 975;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[975]) return breakpoint(s, 5, 975, r0);
  case 5:
    s.tmp_0 = Sprite_setKind__P25571_mk(s);
    s.tmp_0.arg0 = s.sprite___36764;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 276; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 976;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[976]) return breakpoint(s, 7, 976, r0);
  case 7:
    s.tmp_0 = PhysicsEngine__C25666_v0_2_mk(s);
    r0 = s.scene___36761.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.sprite___36764;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C25666_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.addSprite;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 977;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[977]) return breakpoint(s, 9, 977, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P36779);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    r0 = pxsim_pxtcore_mkAction(1, sprites_create_inline__P36785);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.sprite___36764);
    s.tmp_2 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_3 = helpers_arrayFilter__P23481_mk(s);
    r0 = s.scene___36761.fields["createdHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 277; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 279; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 978;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[978]) return breakpoint(s, 12, 978, r0);
  case 12:
    r0 = s.sprite___36764;
    return leave(s, r0)
  default: oops()
} } }
sprites_create__P25440.info = {"start":890,"length":400,"line":35,"column":4,"endLine":47,"endColumn":5,"fileName":"pxt_modules/game/sprites.ts","functionName":"create","argumentNames":["img","kind"]}

function sprites_create__P25440_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_create__P25440, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___36761: undefined,
  sprite___36764: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function forEach_inline__P36779(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == s.caps[0]);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P36779.info = {"start":1195,"length":19,"line":43,"column":20,"endLine":43,"endColumn":39,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P36779_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P36779, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_create_inline__P36785(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 278; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 278; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 278; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 278; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_create_inline__P36785.info = {"start":1237,"length":22,"line":44,"column":21,"endLine":44,"endColumn":43,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["h"]}

function sprites_create_inline__P36785_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_create_inline__P36785, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_addSprite__P25668(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C25666_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_addSprite__P25668.info = {"start":124,"length":29,"line":8,"column":4,"endLine":8,"endColumn":33,"fileName":"pxt_modules/game/physics.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function PhysicsEngine_addSprite__P25668_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_addSprite__P25668, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_setKind__P25571(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.spritesByKind___36803 = undefined;
    s.overlapMap___36832 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1069]) return breakpoint(s, 16, 1069, r0);
  case 16:
    r0 = (s.arg1 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.arg1);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1070]) return breakpoint(s, 17, 1070, r0);
  case 17:
    { step = 15; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1071]) return breakpoint(s, 18, 1071, r0);
  case 18:
    s.tmp_3 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 363; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    r0 = r0.fields["spritesByKind"];
    s.spritesByKind___36803 = (r0);
    s.lastBrkId = 1072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1072]) return breakpoint(s, 20, 1072, r0);
  case 20:
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["_kind"];
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___36803, s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1073]) return breakpoint(s, 21, 1073, r0);
  case 21:
    s.tmp_4 = sprites_SpriteSet_remove__P25625_mk(s);
    r0 = s.arg0.fields["_kind"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___36803, s.tmp_5);
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.arg0;
    s.callLocIdx = 364; s.pc = 22; return s.tmp_4;
  case 22:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 1074;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1074]) return breakpoint(s, 23, 1074, r0);
  case 23:
    r0 = (s.arg1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1075;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1075]) return breakpoint(s, 24, 1075, r0);
  case 24:
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___36803, s.arg1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1076;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1076]) return breakpoint(s, 25, 1076, r0);
  case 25:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_SpriteSet__C25618_VT);
    s.tmp_4 = r0;
    s.tmp_5 = sprites_SpriteSet_constructor__P25620_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    s.callLocIdx = 365; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    r0 = pxsim_pxtrt.mapSetGeneric(s.spritesByKind___36803, s.arg1, s.tmp_4);
  case 9:
  case 10:
    s.lastBrkId = 1077;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1077]) return breakpoint(s, 27, 1077, r0);
  case 27:
    s.tmp_0 = sprites_SpriteSet_add__P25623_mk(s);
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___36803, s.arg1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 366; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
  case 11:
  case 12:
    s.lastBrkId = 1078;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1078]) return breakpoint(s, 29, 1078, r0);
  case 29:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 367; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    r0 = r0.fields["overlapMap"];
    s.overlapMap___36832 = (r0);
    s.lastBrkId = 1079;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1079]) return breakpoint(s, 31, 1079, r0);
  case 31:
    r0 = pxsim_pxtrt.mapGetGeneric(s.overlapMap___36832, s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1080;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1080]) return breakpoint(s, 32, 1080, r0);
  case 32:
    s.tmp_3 = r0 = s.overlapMap___36832;
    s.tmp_4 = r0 = s.arg1;
    r0 = pxsim_Array__mk();
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_3, s.tmp_4, s.tmp_5);
  case 13:
  case 14:
    s.lastBrkId = 1081;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1081]) return breakpoint(s, 33, 1081, r0);
  case 33:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.overlapMap___36832, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_kindsOverlappedWith"] = (s.tmp_1);
    s.lastBrkId = 1082;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1082]) return breakpoint(s, 34, 1082, r0);
  case 34:
    r0 = (s.arg0).fields["_kind"] = (s.arg1);
  case 15:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setKind__P25571.info = {"start":13942,"length":663,"line":497,"column":4,"endLine":517,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setKind","argumentNames":["this","value"]}

function Sprite_setKind__P25571_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setKind__P25571, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  spritesByKind___36803: undefined,
  overlapMap___36832: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_add__P25623(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C25618_VT)) failedCast(r0);
    s.lastBrkId = 1269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1269]) return breakpoint(s, 6, 1269, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1270]) return breakpoint(s, 7, 1270, r0);
  case 7:
    r0 = false;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1271]) return breakpoint(s, 8, 1271, r0);
  case 8:
    s.tmp_3 = sprites_SpriteSet_contains__P25626_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 534; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1272]) return breakpoint(s, 10, 1272, r0);
  case 10:
    r0 = false;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1273]) return breakpoint(s, 11, 1273, r0);
  case 11:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_4, s.arg1);
    s.lastBrkId = 1274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1274]) return breakpoint(s, 12, 1274, r0);
  case 12:
    r0 = true;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_add__P25623.info = {"start":1041,"length":263,"line":41,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"add","argumentNames":["this","sprite"]}

function sprites_SpriteSet_add__P25623_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_add__P25623, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_contains__P25626(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C25618_VT)) failedCast(r0);
    s.lastBrkId = 1280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1280]) return breakpoint(s, 1, 1280, r0);
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_1, s.arg1, undefined);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > -1);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_contains__P25626.info = {"start":2172,"length":100,"line":79,"column":8,"endLine":81,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"contains","argumentNames":["this","sprite"]}

function sprites_SpriteSet_contains__P25626_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_contains__P25626, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_constructor__P25620(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C25618_VT)) failedCast(r0);
    s.lastBrkId = 1267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1267]) return breakpoint(s, 1, 1267, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_constructor__P25620.info = {"start":485,"length":57,"line":19,"column":8,"endLine":21,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"inline","argumentNames":["this"]}

function sprites_SpriteSet_constructor__P25620_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_constructor__P25620, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite_constructor__P25551(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1001;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1001]) return breakpoint(s, 1, 1001, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_constructor__P25266_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 306; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1002;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1002]) return breakpoint(s, 3, 1002, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 307; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1003;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1003]) return breakpoint(s, 5, 1003, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 308; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1004;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1004]) return breakpoint(s, 7, 1004, r0);
  case 7:
    r0 = s.arg0.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1005;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1005]) return breakpoint(s, 8, 1005, r0);
  case 8:
    r0 = s.arg0.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1006;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1006]) return breakpoint(s, 9, 1006, r0);
  case 9:
    s.tmp_0 = Sprite_vx__P25522_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 309; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 1007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1007]) return breakpoint(s, 11, 1007, r0);
  case 11:
    s.tmp_0 = Sprite_vy__P25524_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 310; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 1008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1008]) return breakpoint(s, 13, 1008, r0);
  case 13:
    s.tmp_0 = Sprite_ax__P25526_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 311; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 1009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1009]) return breakpoint(s, 15, 1009, r0);
  case 15:
    s.tmp_0 = Sprite_ay__P25528_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 312; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 1010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1010]) return breakpoint(s, 17, 1010, r0);
  case 17:
    s.tmp_0 = Sprite_fx__P25530_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 313; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 1011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1011]) return breakpoint(s, 19, 1011, r0);
  case 19:
    s.tmp_0 = Sprite_fy__P25532_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 314; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1012]) return breakpoint(s, 21, 1012, r0);
  case 21:
    r0 = (s.arg0).fields["_sx"] = (256);
    s.lastBrkId = 1013;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1013]) return breakpoint(s, 22, 1013, r0);
  case 22:
    r0 = (s.arg0).fields["_sy"] = (256);
    s.lastBrkId = 1014;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1014]) return breakpoint(s, 23, 1014, r0);
  case 23:
    r0 = (s.arg0).fields["flags"] = (0);
    s.lastBrkId = 1015;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1015]) return breakpoint(s, 24, 1015, r0);
  case 24:
    s.tmp_0 = Sprite_setImage__P25554_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 315; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 1016;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1016]) return breakpoint(s, 26, 1016, r0);
  case 26:
    s.tmp_0 = Sprite_setKind__P25571_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 316; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 1017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1017]) return breakpoint(s, 28, 1017, r0);
  case 28:
    r0 = (s.arg0).fields["layer"] = (1);
    s.lastBrkId = 1018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1018]) return breakpoint(s, 29, 1018, r0);
  case 29:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 1019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1019]) return breakpoint(s, 30, 1019, r0);
  case 30:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_overlappers"] = (s.tmp_1);
    s.lastBrkId = 1020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1020]) return breakpoint(s, 31, 1020, r0);
  case 31:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_obstacles"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_constructor__P25551.info = {"start":7406,"length":678,"line":278,"column":4,"endLine":300,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["this","img"]}

function Sprite_constructor__P25551_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_constructor__P25551, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fy__P25532(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 994;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[994]) return breakpoint(s, 1, 994, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_3 = Math_max__P23501_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 302; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 303; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_fy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_fy__P25532.info = {"start":5109,"length":64,"line":191,"column":4,"endLine":193,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fy","argumentNames":["this","v"]}

function Sprite_fy__P25532_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fy__P25532, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fy__P25531(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 993;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[993]) return breakpoint(s, 1, 993, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_fy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 301; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_fy__P25531.info = {"start":4947,"length":60,"line":186,"column":4,"endLine":188,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fy","argumentNames":["this"]}
Sprite_fy__P25531.isGetter = true;

function Sprite_fy__P25531_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fy__P25531, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_fx__P25530(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[992]) return breakpoint(s, 1, 992, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_3 = Math_max__P23501_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 299; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 300; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_fx"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_fx__P25530.info = {"start":4766,"length":64,"line":181,"column":4,"endLine":183,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fx","argumentNames":["this","v"]}

function Sprite_fx__P25530_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fx__P25530, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fx__P25529(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[991]) return breakpoint(s, 1, 991, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_fx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 298; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_fx__P25529.info = {"start":4604,"length":60,"line":176,"column":4,"endLine":178,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fx","argumentNames":["this"]}
Sprite_fx__P25529.isGetter = true;

function Sprite_fx__P25529_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fx__P25529, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_ay__P25528(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[990]) return breakpoint(s, 1, 990, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 297; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_ay"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_ay__P25528.info = {"start":4435,"length":51,"line":170,"column":4,"endLine":172,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ay","argumentNames":["this","v"]}

function Sprite_ay__P25528_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ay__P25528, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_ay__P25527(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[989]) return breakpoint(s, 1, 989, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_ay"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 296; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_ay__P25527.info = {"start":4269,"length":60,"line":165,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ay","argumentNames":["this"]}
Sprite_ay__P25527.isGetter = true;

function Sprite_ay__P25527_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ay__P25527, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_ax__P25526(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[988]) return breakpoint(s, 1, 988, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 295; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_ax"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_ax__P25526.info = {"start":4096,"length":51,"line":159,"column":4,"endLine":161,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ax","argumentNames":["this","v"]}

function Sprite_ax__P25526_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ax__P25526, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_ax__P25525(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[987]) return breakpoint(s, 1, 987, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_ax"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 294; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_ax__P25525.info = {"start":3930,"length":60,"line":154,"column":4,"endLine":156,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ax","argumentNames":["this"]}
Sprite_ax__P25525.isGetter = true;

function Sprite_ax__P25525_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ax__P25525, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_vy__P25524(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[986]) return breakpoint(s, 1, 986, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 293; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_vy__P25524.info = {"start":3757,"length":51,"line":148,"column":4,"endLine":150,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vy","argumentNames":["this","v"]}

function Sprite_vy__P25524_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vy__P25524, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_vy__P25523(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[985]) return breakpoint(s, 1, 985, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_vy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 292; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_vy__P25523.info = {"start":3595,"length":60,"line":143,"column":4,"endLine":145,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vy","argumentNames":["this"]}
Sprite_vy__P25523.isGetter = true;

function Sprite_vy__P25523_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vy__P25523, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_vx__P25522(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[984]) return breakpoint(s, 1, 984, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P23520_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 291; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_vx__P25522.info = {"start":3426,"length":51,"line":137,"column":4,"endLine":139,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vx","argumentNames":["this","v"]}

function Sprite_vx__P25522_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vx__P25522, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_vx__P25521(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[983]) return breakpoint(s, 1, 983, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P23544_mk(s);
    r0 = s.arg0.fields["_vx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 290; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_vx__P25521.info = {"start":3264,"length":60,"line":132,"column":4,"endLine":134,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vx","argumentNames":["this"]}
Sprite_vx__P25521.isGetter = true;

function Sprite_vx__P25521_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vx__P25521, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_onShade__P26074(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1958]) return breakpoint(s, 4, 1958, r0);
  case 4:
    s.tmp_0 = game_init__P27847_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 941; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 1959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1959]) return breakpoint(s, 6, 1959, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1960]) return breakpoint(s, 7, 1960, r0);
  case 7:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1961]) return breakpoint(s, 8, 1961, r0);
  case 8:
    s.tmp_2 = scene_createRenderable__P25911_mk(s);
    s.tmp_2.arg0 = 80;
    s.tmp_2.arg1 = s.arg0;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 942; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onShade__P26074.info = {"start":8745,"length":145,"line":286,"column":4,"endLine":290,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"onShade","argumentNames":["a"]}

function game_onShade__P26074_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onShade__P26074, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_createRenderable__P25911(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.renderable___31385 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1841]) return breakpoint(s, 3, 1841, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Renderable__C25906_VT);
    s.tmp_0 = r0;
    s.tmp_1 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_1;
    { step = 2; continue; }
  case 1:
    r0 = renderable_inline__P31391;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = scene_Renderable_constructor__P25907_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.arg1;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = s.arg0;
    s.callLocIdx = 889; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.renderable___31385 = (s.tmp_0);
    s.lastBrkId = 1842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1842]) return breakpoint(s, 5, 1842, r0);
  case 5:
    r0 = s.renderable___31385;
    return leave(s, r0)
  default: oops()
} } }
scene_createRenderable__P25911.info = {"start":608,"length":339,"line":24,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/game/renderable.ts","functionName":"createRenderable","argumentNames":["z","handler","shouldBeVisible"]}

function scene_createRenderable__P25911_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_createRenderable__P25911, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  renderable___31385: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function renderable_inline__P31391(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
renderable_inline__P31391.info = {"start":875,"length":10,"line":31,"column":32,"endLine":31,"endColumn":42,"fileName":"pxt_modules/game/renderable.ts","functionName":"inline","argumentNames":[]}

function renderable_inline__P31391_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: renderable_inline__P31391, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_Renderable_constructor__P25907(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C25906_VT)) failedCast(r0);
    r0 = (s.arg0).fields["handler"] = (s.arg1);
    r0 = (s.arg0).fields["shouldBeVisible"] = (s.arg2);
    s.lastBrkId = 1838;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1838]) return breakpoint(s, 1, 1838, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_constructor__P25266_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 886; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable_constructor__P25907.info = {"start":83,"length":212,"line":2,"column":8,"endLine":8,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"inline","argumentNames":["this","handler","shouldBeVisible","z"]}

function scene_Renderable_constructor__P25907_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable_constructor__P25907, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_systemMenu_PauseMenu_constructor__P26153(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C26152_VT)) failedCast(r0);
    r0 = (s.arg0).fields["generator"] = (s.arg1);
    s.lastBrkId = 2024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2024]) return breakpoint(s, 3, 2024, r0);
  case 3:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = scene_systemMenu_buildMenuTheme__P26161_mk(s);
    r0 = pxsim_ImageMethods.width(globals.CARD_NORMAL___26168);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = undefined;
    s.tmp_1.arg3 = undefined;
    s.callLocIdx = 980; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.arg0).fields["theme"] = (s.tmp_2);
    s.lastBrkId = 2025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2025]) return breakpoint(s, 5, 2025, r0);
  case 5:
    r0 = (s.arg0).fields["scrollRow"] = (0);
    s.lastBrkId = 2026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2026]) return breakpoint(s, 6, 2026, r0);
  case 6:
    r0 = (s.arg0).fields["scrollOffset"] = (0);
    s.lastBrkId = 2027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2027]) return breakpoint(s, 7, 2027, r0);
  case 7:
    r0 = (s.arg0).fields["scrollTarget"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_constructor__P26153.info = {"start":3029,"length":257,"line":116,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["this","generator","theme"]}

function scene_systemMenu_PauseMenu_constructor__P26153_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_constructor__P26153, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_buildMenuTheme__P26161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cardsPerRow___37569 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2146]) return breakpoint(s, 5, 2146, r0);
  case 5:
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_0 = r0;
    r0 = (s.arg0 + s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_1);
    s.cardsPerRow___37569 = (r0);
    s.lastBrkId = 2147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2147]) return breakpoint(s, 6, 2147, r0);
  case 6:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.font8___25147;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.arg2 = (s.tmp_1);
    s.lastBrkId = 2148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2148]) return breakpoint(s, 7, 2148, r0);
  case 7:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_1 = image_doubledFont__P25150_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.callLocIdx = 1090; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg3 = (s.tmp_2);
    s.lastBrkId = 2149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2149]) return breakpoint(s, 9, 2149, r0);
  case 9:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardSpacing", s.arg1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardWidth", s.arg0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardsPerRow", s.cardsPerRow___37569);
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_3 = r0;
    r0 = (s.cardsPerRow___37569 * s.arg0);
    s.tmp_5 = r0;
    r0 = (s.cardsPerRow___37569 - 1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 * s.arg1);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "padding", s.tmp_1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "infoFont", s.arg2);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "headerFont", s.arg3);
    s.tmp_11 = if_charHeight_1_mk(s);
    s.tmp_11.arg0 = s.arg3;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "charHeight");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["charHeight"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["charHeight"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 1091; s.pc = 10; return s.tmp_11; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 + 2);
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + s.arg1);
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardsTop", s.tmp_8);
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_14 = r0;
    s.tmp_16 = if_charHeight_1_mk(s);
    s.tmp_16.arg0 = s.arg2;
    if (!s.tmp_16.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_16.arg0, "charHeight");
    } else {
      s.tmp_16.fn = s.tmp_16.arg0.vtable.iface["charHeight"];
      if (s.tmp_16.fn == null) { s.retval = s.tmp_16.arg0.fields["charHeight"]; }
      else if (!s.tmp_16.fn.isGetter) { s.retval = bind(s.tmp_16); }
     else { s.callLocIdx = 1092; s.pc = 11; return s.tmp_16; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = (s.tmp_14 - s.tmp_15);
    s.tmp_13 = r0;
    r0 = (s.tmp_13 - 2);
    s.tmp_12 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "infoTop", s.tmp_12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "headerText", "PAUSED");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "selectedCard", globals.CARD_SELECTED___26169);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "activeCard", globals.CARD_ACTIVE___26170);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "basicCard", globals.CARD_NORMAL___26168);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildMenuTheme__P26161.info = {"start":11654,"length":906,"line":356,"column":4,"endLine":375,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"buildMenuTheme","argumentNames":["cardWidth","cardSpacing","infoFont","headerFont"]}

function scene_systemMenu_buildMenuTheme__P26161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildMenuTheme__P26161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  cardsPerRow___37569: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function image_doubledFont__P25150(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 572;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[572]) return breakpoint(s, 1, 572, r0);
  case 1:
    s.tmp_0 = image_scaledFont__P25151_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 90; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
image_doubledFont__P25150.info = {"start":12008,"length":82,"line":146,"column":4,"endLine":148,"endColumn":5,"fileName":"pxt_modules/screen---st7735/text.ts","functionName":"doubledFont","argumentNames":["f"]}

function image_doubledFont__P25150_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_doubledFont__P25150, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function image_scaledFont__P25151(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[573]) return breakpoint(s, 6, 573, r0);
  case 6:
    r0 = (s.arg1 | 0);
    s.arg1 = (r0);
    s.lastBrkId = 574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[574]) return breakpoint(s, 7, 574, r0);
  case 7:
    r0 = (s.arg1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[575]) return breakpoint(s, 8, 575, r0);
  case 8:
    r0 = s.arg0;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 576;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[576]) return breakpoint(s, 9, 576, r0);
  case 9:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = s.arg0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 91; s.pc = 10; return s.tmp_4; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "charWidth", s.tmp_2);
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.arg0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 92; s.pc = 11; return s.tmp_7; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 * s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "charHeight", s.tmp_5);
    s.tmp_9 = if_data_1_mk(s);
    s.tmp_9.arg0 = s.arg0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "data");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["data"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["data"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 93; s.pc = 12; return s.tmp_9; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "data", s.tmp_8);
    s.tmp_11 = if_multiplier_1_mk(s);
    s.tmp_11.arg0 = s.arg0;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "multiplier");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["multiplier"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["multiplier"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 94; s.pc = 13; return s.tmp_11; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    if (!r0) { step = 3; continue; }
    s.tmp_12 = r0 = s.arg1;
    s.tmp_14 = if_multiplier_1_mk(s);
    s.tmp_14.arg0 = s.arg0;
    if (!s.tmp_14.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_14.arg0, "multiplier");
    } else {
      s.tmp_14.fn = s.tmp_14.arg0.vtable.iface["multiplier"];
      if (s.tmp_14.fn == null) { s.retval = s.tmp_14.arg0.fields["multiplier"]; }
      else if (!s.tmp_14.fn.isGetter) { s.retval = bind(s.tmp_14); }
     else { s.callLocIdx = 95; s.pc = 14; return s.tmp_14; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_12 * s.tmp_13);
    { step = 4; continue; }
  case 3:
    r0 = s.arg1;
  case 4:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "multiplier", s.tmp_15);
    r0 = s.tmp_1;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
image_scaledFont__P25151.info = {"start":12096,"length":331,"line":150,"column":4,"endLine":160,"endColumn":5,"fileName":"pxt_modules/screen---st7735/text.ts","functionName":"scaledFont","argumentNames":["f","size"]}

function image_scaledFont__P25151_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_scaledFont__P25151, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_pushScene__P26065(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.oldScene___37648 = undefined;
    s.lastBrkId = 1938;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1938]) return breakpoint(s, 5, 1938, r0);
  case 5:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 929; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.oldScene___37648 = (r0);
    s.lastBrkId = 1939;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1939]) return breakpoint(s, 7, 1939, r0);
  case 7:
    s.tmp_0 = particles_clearAll__P26238_mk(s);
    s.callLocIdx = 930; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 1940;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1940]) return breakpoint(s, 9, 1940, r0);
  case 9:
    s.tmp_0 = particles_disableAll__P26239_mk(s);
    s.callLocIdx = 931; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 1941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1941]) return breakpoint(s, 11, 1941, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(globals._sceneStack___27840);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1942]) return breakpoint(s, 12, 1942, r0);
  case 12:
    r0 = pxsim_Array__mk();
    globals._sceneStack___27840 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 1943;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1943]) return breakpoint(s, 13, 1943, r0);
  case 13:
    r0 = pxsim_Array__push(globals._sceneStack___27840, globals._scene___27839);
    s.lastBrkId = 1944;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1944]) return breakpoint(s, 14, 1944, r0);
  case 14:
    s.tmp_0 = game_init__P27847_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 932; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 1945;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1945]) return breakpoint(s, 16, 1945, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(globals._scenePushHandlers___27841);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1946;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1946]) return breakpoint(s, 17, 1946, r0);
  case 17:
    r0 = pxsim_pxtcore_mkAction(1, game_pushScene_inline__P37665);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.oldScene___37648);
    s.tmp_1 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_1.arg0 = globals._scenePushHandlers___27841;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 934; s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_pushScene__P26065.info = {"start":1660,"length":367,"line":62,"column":4,"endLine":73,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"pushScene","argumentNames":[]}

function game_pushScene__P26065_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_pushScene__P26065, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  oldScene___37648: undefined,
} }





function game_pushScene_inline__P37665(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 933; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_pushScene_inline__P37665.info = {"start":1991,"length":18,"line":71,"column":39,"endLine":71,"endColumn":57,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["cb"]}

function game_pushScene_inline__P37665_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_pushScene_inline__P37665, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_disableAll__P26239(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___37669 = undefined;
    s.lastBrkId = 2350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2350]) return breakpoint(s, 3, 2350, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P28188_mk(s);
    s.callLocIdx = 1173; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___37669 = (r0);
    s.lastBrkId = 2351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2351]) return breakpoint(s, 5, 2351, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___37669);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2352]) return breakpoint(s, 6, 2352, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_0.arg0 = s.sources___37669;
    s.tmp_0.arg1 = particles_disableAll_inline__P37675;
    s.callLocIdx = 1175; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2353]) return breakpoint(s, 8, 2353, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P28184_mk(s);
    s.callLocIdx = 1176; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_disableAll__P26239.info = {"start":12370,"length":195,"line":402,"column":4,"endLine":408,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"disableAll","argumentNames":[]}

function particles_disableAll__P26239_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_disableAll__P26239, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___37669: undefined,
} }





function particles_disableAll_inline__P37675(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_enabled__P26221_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1174; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
particles_disableAll_inline__P37675.info = {"start":12495,"length":22,"line":405,"column":28,"endLine":405,"endColumn":50,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_disableAll_inline__P37675_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_disableAll_inline__P37675, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_clearAll__P26238(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___37680 = undefined;
    s.lastBrkId = 2346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2346]) return breakpoint(s, 3, 2346, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P28188_mk(s);
    s.callLocIdx = 1169; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___37680 = (r0);
    s.lastBrkId = 2347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2347]) return breakpoint(s, 5, 2347, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___37680);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2348]) return breakpoint(s, 6, 2348, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_0.arg0 = s.sources___37680;
    s.tmp_0.arg1 = particles_clearAll_inline__P37686;
    s.callLocIdx = 1171; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2349]) return breakpoint(s, 8, 2349, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P28184_mk(s);
    s.callLocIdx = 1172; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_clearAll__P26238.info = {"start":12098,"length":185,"line":391,"column":4,"endLine":397,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"clearAll","argumentNames":[]}

function particles_clearAll__P26238_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_clearAll__P26238, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___37680: undefined,
} }





function particles_clearAll_inline__P37686(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_clear__P26223_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1170; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_clearAll_inline__P37686.info = {"start":12221,"length":14,"line":394,"column":28,"endLine":394,"endColumn":42,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_clearAll_inline__P37686_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_clearAll_inline__P37686, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_initScreen__P28106(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.brightness___37692 = undefined;
    s.lastBrkId = 2162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2162]) return breakpoint(s, 3, 2162, r0);
  case 3:
    s.tmp_0 = settings_readNumber__P25239_mk(s);
    s.tmp_0.arg0 = "#brightness";
    s.callLocIdx = 1099; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.brightness___37692 = (r0);
    s.lastBrkId = 2163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2163]) return breakpoint(s, 5, 2163, r0);
  case 5:
    r0 = (s.brightness___37692 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2164]) return breakpoint(s, 6, 2164, r0);
  case 6:
    s.tmp_1 = helpers_setScreenBrightness__P25137_mk(s);
    s.tmp_1.arg0 = globals.screen___25204;
    s.tmp_1.arg1 = s.brightness___37692;
    s.callLocIdx = 1100; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_initScreen__P28106.info = {"start":13388,"length":175,"line":405,"column":4,"endLine":409,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"initScreen","argumentNames":[]}

function scene_systemMenu_initScreen__P28106_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_initScreen__P28106, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  brightness___37692: undefined,
} }





function settings_readNumber__P25239(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___37703 = undefined;
    s.nums___37710 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 717;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[717]) return breakpoint(s, 8, 717, r0);
  case 8:
    s.tmp_0 = settings_readBuffer__P25236_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 132; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.buf___37703 = (r0);
    s.lastBrkId = 718;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[718]) return breakpoint(s, 10, 718, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.buf___37703);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 719;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[719]) return breakpoint(s, 11, 719, r0);
  case 11:
    r0 = undefined;
    { step = 7; continue; }
    { step = 6; continue; }
  case 1:
    s.lastBrkId = 720;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[720]) return breakpoint(s, 12, 720, r0);
  case 12:
    s.tmp_2 = msgpack_unpackNumberArray__P23554_mk(s);
    s.tmp_2.arg0 = s.buf___37703;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 133; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.nums___37710 = (r0);
    s.lastBrkId = 721;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[721]) return breakpoint(s, 14, 721, r0);
  case 14:
    s.tmp_0 = r0 = s.nums___37710;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__length(s.nums___37710);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 1);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[722]) return breakpoint(s, 15, 722, r0);
  case 15:
    r0 = pxsim_Array__getAt(s.nums___37710, 0);
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[723]) return breakpoint(s, 16, 723, r0);
  case 16:
    r0 = undefined;
    { step = 7; continue; }
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
settings_readNumber__P25239.info = {"start":3283,"length":313,"line":131,"column":4,"endLine":141,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readNumber","argumentNames":["key"]}

function settings_readNumber__P25239_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readNumber__P25239, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  buf___37703: undefined,
  nums___37710: undefined,
  arg0: undefined,
} }





function settings_readBuffer__P25236(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 712;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[712]) return breakpoint(s, 1, 712, r0);
  case 1:
    r0 = pxsim.settings._get(s.arg0);
    return leave(s, r0)
  default: oops()
} } }
settings_readBuffer__P25236.info = {"start":2694,"length":72,"line":103,"column":4,"endLine":105,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readBuffer","argumentNames":["key"]}

function settings_readBuffer__P25236_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readBuffer__P25236, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function msgpack_unpackNumberArray__P23554(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___37723 = undefined;
    s.fmt___37730 = undefined;
    s.v___37739 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[265]) return breakpoint(s, 12, 265, r0);
  case 12:
    r0 = pxsim_Array__mk();
    s.res___37723 = (r0);
    s.lastBrkId = 266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[266]) return breakpoint(s, 13, 266, r0);
  case 13:
  case 1:
    s.lastBrkId = 267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[267]) return breakpoint(s, 14, 267, r0);
  case 14:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[268]) return breakpoint(s, 15, 268, r0);
  case 15:
    s.tmp_3 = r0 = s.arg1;
    r0 = (s.tmp_3 + 1);
    s.arg1 = (r0);
    s.tmp_4 = msgpack_tagFormat__P27435_mk(s);
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.tmp_3);
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 22; s.pc = 16; return s.tmp_4;
  case 16:
    r0 = s.retval;
    s.fmt___37730 = (r0);
    s.lastBrkId = 269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[269]) return breakpoint(s, 17, 269, r0);
  case 17:
    r0 = (s.fmt___37730 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[270]) return breakpoint(s, 18, 270, r0);
  case 18:
    s.tmp_1 = r0 = s.arg0;
    r0 = (s.arg1 - 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_1, 6, s.tmp_2);
    s.v___37739 = (r0);
    s.lastBrkId = 271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[271]) return breakpoint(s, 19, 271, r0);
  case 19:
    r0 = (-31 <= s.v___37739);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.v___37739 <= 127);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[272]) return breakpoint(s, 20, 272, r0);
  case 20:
    r0 = pxsim_Array__push(s.res___37723, s.v___37739);
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[273]) return breakpoint(s, 21, 273, r0);
  case 21:
    r0 = null;
    { step = 11; continue; }
  case 5:
    { step = 7; continue; }
  case 6:
    s.lastBrkId = 274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[274]) return breakpoint(s, 22, 274, r0);
  case 22:
    s.tmp_0 = r0 = s.res___37723;
    r0 = pxsim.BufferMethods.getNumber(s.arg0, s.fmt___37730, s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[275]) return breakpoint(s, 23, 275, r0);
  case 23:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = pins_sizeOf__P23546_mk(s);
    s.tmp_2.arg0 = s.fmt___37730;
    s.callLocIdx = 23; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg1 = (r0);
  case 7:
    s.lastBrkId = 276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[276]) return breakpoint(s, 25, 276, r0);
  case 25:
  case 8:
    s.lastBrkId = 277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[277]) return breakpoint(s, 26, 277, r0);
  case 26:
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 193);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[278]) return breakpoint(s, 27, 278, r0);
  case 27:
    r0 = (s.arg1 + 1);
    s.arg1 = (r0);
    { step = 8; continue; }
  case 9:
    { step = 1; continue; }
  case 10:
    s.lastBrkId = 279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[279]) return breakpoint(s, 28, 279, r0);
  case 28:
    r0 = s.res___37723;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
msgpack_unpackNumberArray__P23554.info = {"start":2650,"length":669,"line":91,"column":4,"endLine":111,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"unpackNumberArray","argumentNames":["buf","offset"]}

function msgpack_unpackNumberArray__P23554_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_unpackNumberArray__P23554, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  res___37723: undefined,
  fmt___37730: undefined,
  v___37739: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_initVolume__P28105(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.vol___37784 = undefined;
    s.lastBrkId = 2159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2159]) return breakpoint(s, 3, 2159, r0);
  case 3:
    s.tmp_0 = settings_readNumber__P25239_mk(s);
    s.tmp_0.arg0 = "#volume";
    s.callLocIdx = 1097; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.vol___37784 = (r0);
    s.lastBrkId = 2160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2160]) return breakpoint(s, 5, 2160, r0);
  case 5:
    r0 = (s.vol___37784 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2161]) return breakpoint(s, 6, 2161, r0);
  case 6:
    s.tmp_1 = music_setVolume__P24981_mk(s);
    s.tmp_1.arg0 = s.vol___37784;
    s.callLocIdx = 1098; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_initVolume__P28105.info = {"start":13238,"length":144,"line":399,"column":4,"endLine":403,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"initVolume","argumentNames":[]}

function scene_systemMenu_initVolume__P28105_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_initVolume__P28105, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  vol___37784: undefined,
} }





function game_currentScene__P26061(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1922;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1922]) return breakpoint(s, 1, 1922, r0);
  case 1:
    s.tmp_0 = game_init__P27847_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 924; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1923;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1923]) return breakpoint(s, 3, 1923, r0);
  case 3:
    r0 = globals._scene___27839;
    return leave(s, r0)
  default: oops()
} } }
game_currentScene__P26061.info = {"start":667,"length":90,"line":22,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"currentScene","argumentNames":[]}

function game_currentScene__P26061_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_currentScene__P26061, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_addScenePopHandler__P26077(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1966]) return breakpoint(s, 5, 1966, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._scenePopHandlers___27842);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1967]) return breakpoint(s, 6, 1967, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals._scenePopHandlers___27842 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 1968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1968]) return breakpoint(s, 7, 1968, r0);
  case 7:
    r0 = pxsim_Array_.indexOf(globals._scenePopHandlers___27842, s.arg0, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1969]) return breakpoint(s, 8, 1969, r0);
  case 8:
    r0 = pxsim_Array__push(globals._scenePopHandlers___27842, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_addScenePopHandler__P26077.info = {"start":10273,"length":237,"line":325,"column":4,"endLine":329,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"addScenePopHandler","argumentNames":["handler"]}

function game_addScenePopHandler__P26077_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_addScenePopHandler__P26077, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_addScenePushHandler__P26075(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1962]) return breakpoint(s, 5, 1962, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._scenePushHandlers___27841);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1963]) return breakpoint(s, 6, 1963, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals._scenePushHandlers___27841 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 1964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1964]) return breakpoint(s, 7, 1964, r0);
  case 7:
    r0 = pxsim_Array_.indexOf(globals._scenePushHandlers___27841, s.arg0, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1965]) return breakpoint(s, 8, 1965, r0);
  case 8:
    r0 = pxsim_Array__push(globals._scenePushHandlers___27841, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_addScenePushHandler__P26075.info = {"start":9272,"length":242,"line":301,"column":4,"endLine":305,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"addScenePushHandler","argumentNames":["handler"]}

function game_addScenePushHandler__P26075_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_addScenePushHandler__P26075, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Fx8__P23520(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[209]) return breakpoint(s, 1, 209, r0);
  case 1:
    r0 = (s.arg0 * 256);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    return leave(s, r0)
  default: oops()
} } }
Fx8__P23520.info = {"start":42,"length":68,"line":4,"column":0,"endLine":6,"endColumn":1,"fileName":"pxt_modules/base/fixed.ts","functionName":"Fx8","argumentNames":["v"]}

function Fx8__P23520_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx8__P23520, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function SpriteKind_create__P25634(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1282]) return breakpoint(s, 3, 1282, r0);
  case 3:
    r0 = (globals.nextKind___27678 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1283]) return breakpoint(s, 4, 1283, r0);
  case 4:
    globals.nextKind___27678 = (1000);
  case 1:
  case 2:
    s.lastBrkId = 1284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1284]) return breakpoint(s, 5, 1284, r0);
  case 5:
    s.tmp_0 = r0 = globals.nextKind___27678;
    r0 = (s.tmp_0 + 1);
    globals.nextKind___27678 = (r0);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
SpriteKind_create__P25634.info = {"start":750,"length":112,"line":25,"column":4,"endLine":28,"endColumn":5,"fileName":"pxt_modules/game/spritekind.ts","functionName":"create","argumentNames":[]}

function SpriteKind_create__P25634_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: SpriteKind_create__P25634, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_constructor__P25361(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 843;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[843]) return breakpoint(s, 5, 843, r0);
  case 5:
    r0 = (s.arg0).fields["id"] = (s.arg1);
    s.lastBrkId = 844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[844]) return breakpoint(s, 6, 844, r0);
  case 6:
    r0 = (s.arg0).fields["_pressed"] = (false);
    s.lastBrkId = 845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[845]) return breakpoint(s, 7, 845, r0);
  case 7:
    r0 = (s.arg0).fields["repeatDelay"] = (undefined);
    s.lastBrkId = 846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[846]) return breakpoint(s, 8, 846, r0);
  case 8:
    r0 = (s.arg0).fields["repeatInterval"] = (undefined);
    s.lastBrkId = 847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[847]) return breakpoint(s, 9, 847, r0);
  case 9:
    r0 = (s.arg0).fields["_repeatCount"] = (0);
    s.lastBrkId = 848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[848]) return breakpoint(s, 10, 848, r0);
  case 10:
    r0 = (s.arg1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 849;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[849]) return breakpoint(s, 11, 849, r0);
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, controller_Button_inline__P37860);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    r0 = s.arg0.fields["id"];
    s.tmp_2 = r0;
    r0 = pxsim.control.internalOnEvent(2050, s.tmp_2, s.tmp_1, 16);
    s.lastBrkId = 850;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[850]) return breakpoint(s, 12, 850, r0);
  case 12:
    r0 = pxsim_pxtcore_mkAction(1, controller_Button_inline__P37867);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim.control.internalOnEvent(2051, s.tmp_1, s.tmp_0, 16);
    s.lastBrkId = 851;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[851]) return breakpoint(s, 13, 851, r0);
  case 13:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 852;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[852]) return breakpoint(s, 14, 852, r0);
  case 14:
    s.tmp_1 = controller_setupButton__P27667_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 195; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_constructor__P25361.info = {"start":2004,"length":864,"line":77,"column":8,"endLine":94,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","id","configKey"]}

function controller_Button_constructor__P25361_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_constructor__P25361, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_Button_inline__P37860(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_setPressed__P25368_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 193; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_inline__P37860.info = {"start":2627,"length":28,"line":88,"column":66,"endLine":88,"endColumn":94,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_inline__P37860_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_inline__P37860, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_inline__P37867(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_setPressed__P25368_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 194; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_inline__P37867.info = {"start":2729,"length":27,"line":89,"column":68,"endLine":89,"endColumn":95,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_inline__P37867_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_inline__P37867, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_setupButton__P27667(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[836]) return breakpoint(s, 1, 836, r0);
  case 1:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_setupButton__P27667.info = {"start":861,"length":93,"line":39,"column":4,"endLine":41,"endColumn":6,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"setupButton","argumentNames":["buttonId","key"]}

function controller_setupButton__P27667_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_setupButton__P27667, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_setPressed__P25368(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 868;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[868]) return breakpoint(s, 7, 868, r0);
  case 7:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 869;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[869]) return breakpoint(s, 8, 869, r0);
  case 8:
    s.tmp_2 = power_poke__P25105_mk(s);
    s.callLocIdx = 197; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 870;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[870]) return breakpoint(s, 10, 870, r0);
  case 10:
    r0 = s.arg0.fields["_owner"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 871;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[871]) return breakpoint(s, 11, 871, r0);
  case 11:
    s.tmp_1 = controller_Controller_connected__P25324_mk(s);
    r0 = s.arg0.fields["_owner"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = true;
    s.callLocIdx = 198; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 872;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[872]) return breakpoint(s, 13, 872, r0);
  case 13:
    r0 = (s.arg0).fields["_pressed"] = (s.arg1);
    s.lastBrkId = 873;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[873]) return breakpoint(s, 14, 873, r0);
  case 14:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 874;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[874]) return breakpoint(s, 15, 874, r0);
  case 15:
    r0 = (s.arg0).fields["_pressedElasped"] = (0);
    s.lastBrkId = 875;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[875]) return breakpoint(s, 16, 875, r0);
  case 16:
    s.tmp_0 = controller_Button_raiseButtonDown__P27651_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 199; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 876;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[876]) return breakpoint(s, 18, 876, r0);
  case 18:
    r0 = (s.arg0).fields["_repeatCount"] = (0);
    s.lastBrkId = 877;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[877]) return breakpoint(s, 19, 877, r0);
  case 19:
    s.tmp_0 = controller_Button_raiseButtonUp__P27650_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 200; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_setPressed__P25368.info = {"start":6774,"length":507,"line":201,"column":8,"endLine":215,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"setPressed","argumentNames":["this","pressed"]}

function controller_Button_setPressed__P25368_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_setPressed__P25368, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_raiseButtonDown__P27651(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[856]) return breakpoint(s, 3, 856, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___27661);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[857]) return breakpoint(s, 4, 857, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2049, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[858]) return breakpoint(s, 5, 858, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2053, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonDown__P27651.info = {"start":3088,"length":205,"line":103,"column":8,"endLine":108,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonDown","argumentNames":["this"]}

function controller_Button_raiseButtonDown__P27651_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonDown__P27651, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Button_raiseButtonUp__P27650(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[853]) return breakpoint(s, 3, 853, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___27661);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[854]) return breakpoint(s, 4, 854, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2048, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[855]) return breakpoint(s, 5, 855, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2052, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonUp__P27650.info = {"start":2878,"length":200,"line":96,"column":8,"endLine":101,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonUp","argumentNames":["this"]}

function controller_Button_raiseButtonUp__P27650_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonUp__P27650, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_connected__P25324(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 778;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[778]) return breakpoint(s, 5, 778, r0);
  case 5:
    r0 = s.arg0.fields["_connected"];
    s.tmp_1 = r0;
    r0 = (s.arg1 != s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 779;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[779]) return breakpoint(s, 6, 779, r0);
  case 6:
    r0 = (s.arg0).fields["_connected"] = (s.arg1);
    s.lastBrkId = 780;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[780]) return breakpoint(s, 7, 780, r0);
  case 7:
    r0 = s.arg0.fields["_connected"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 2;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_3 = controller_Controller_id__P25311_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 159; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_2, s.tmp_1);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_connected__P25324.info = {"start":6340,"length":261,"line":216,"column":8,"endLine":221,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"connected","argumentNames":["this","value"]}

function controller_Controller_connected__P25324_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_connected__P25324, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller_id__P25311(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 771;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[771]) return breakpoint(s, 1, 771, r0);
  case 1:
    r0 = s.arg0.fields["_id"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_id__P25311.info = {"start":2547,"length":49,"line":85,"column":8,"endLine":87,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"id","argumentNames":["this"]}
controller_Controller_id__P25311.isGetter = true;

function controller_Controller_id__P25311_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_id__P25311, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_Controller_connected__P25323(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C25304_VT)) failedCast(r0);
    s.lastBrkId = 777;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[777]) return breakpoint(s, 1, 777, r0);
  case 1:
    r0 = s.arg0.fields["_connected"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_connected__P25323.info = {"start":6267,"length":63,"line":212,"column":8,"endLine":214,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"connected","argumentNames":["this"]}
controller_Controller_connected__P25323.isGetter = true;

function controller_Controller_connected__P25323_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_connected__P25323, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function settings_initScopes__P27618(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.rn___37945 = undefined;
    s.lastBrkId = 701;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[701]) return breakpoint(s, 1, 701, r0);
  case 1:
    s.tmp_1 = settings_runNumber__P25229_mk(s);
    s.callLocIdx = 124; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.rn___37945 = (r0);
    s.lastBrkId = 702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[702]) return breakpoint(s, 3, 702, r0);
  case 3:
    s.tmp_0 = settings_writeNumber__P25234_mk(s);
    s.tmp_0.arg0 = globals.RUN_KEY___27606;
    s.tmp_0.arg1 = s.rn___37945;
    s.callLocIdx = 125; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[703]) return breakpoint(s, 5, 703, r0);
  case 5:
    r0 = pxsim.control.deviceSerialNumber();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2147483647);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.seedAddRandom(s.tmp_0);
    s.lastBrkId = 704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[704]) return breakpoint(s, 6, 704, r0);
  case 6:
    r0 = pxsim_pxtcore.seedAddRandom(s.rn___37945);
    s.lastBrkId = 705;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[705]) return breakpoint(s, 7, 705, r0);
  case 7:
    s.tmp_0 = settings_setScope__P27617_mk(s);
    r0 = pxsim_pxtcore.programName();
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 126; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_initScopes__P27618.info = {"start":1104,"length":230,"line":41,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"initScopes","argumentNames":[]}

function settings_initScopes__P27618_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_initScopes__P27618, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  rn___37945: undefined,
} }





function settings_setScope__P27617(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.currScope___37974 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[695]) return breakpoint(s, 7, 695, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 100);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[696]) return breakpoint(s, 8, 696, r0);
  case 8:
    r0 = pxsim_pxtrt.panic(922);
  case 3:
  case 4:
    s.lastBrkId = 697;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[697]) return breakpoint(s, 9, 697, r0);
  case 9:
    s.tmp_0 = settings_readString__P25237_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___27607;
    s.callLocIdx = 122; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.currScope___37974 = (r0);
    s.lastBrkId = 698;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[698]) return breakpoint(s, 11, 698, r0);
  case 11:
    r0 = (s.currScope___37974 != s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 699;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[699]) return breakpoint(s, 12, 699, r0);
  case 12:
    r0 = pxsim.settings._userClean();
    s.lastBrkId = 700;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[700]) return breakpoint(s, 13, 700, r0);
  case 13:
    s.tmp_0 = settings_writeString__P25232_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___27607;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 123; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_setScope__P27617.info = {"start":826,"length":272,"line":31,"column":4,"endLine":39,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"setScope","argumentNames":["scope"]}

function settings_setScope__P27617_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_setScope__P27617, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currScope___37974: undefined,
  arg0: undefined,
} }





function settings_readString__P25237(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___37995 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 713;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[713]) return breakpoint(s, 4, 713, r0);
  case 4:
    s.tmp_0 = settings_readBuffer__P25236_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 131; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.buf___37995 = (r0);
    s.lastBrkId = 714;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[714]) return breakpoint(s, 6, 714, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.buf___37995);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[715]) return breakpoint(s, 7, 715, r0);
  case 7:
    r0 = undefined;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 716;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[716]) return breakpoint(s, 8, 716, r0);
  case 8:
    r0 = pxsim.BufferMethods.toString(s.buf___37995);
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
settings_readString__P25237.info = {"start":2827,"length":177,"line":110,"column":4,"endLine":116,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readString","argumentNames":["key"]}

function settings_readString__P25237_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readString__P25237, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___37995: undefined,
  arg0: undefined,
} }





function settings_writeString__P25232(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 710;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[710]) return breakpoint(s, 1, 710, r0);
  case 1:
    s.tmp_0 = settings_writeBuffer__P25231_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 128; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeString__P25232.info = {"start":1895,"length":125,"line":75,"column":4,"endLine":77,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeString","argumentNames":["key","value"]}

function settings_writeString__P25232_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeString__P25232, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_runNumber__P25229(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 694;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[694]) return breakpoint(s, 3, 694, r0);
  case 3:
    s.tmp_1 = settings_readNumber__P25239_mk(s);
    s.tmp_1.arg0 = globals.RUN_KEY___27606;
    s.callLocIdx = 121; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
settings_runNumber__P25229.info = {"start":745,"length":75,"line":27,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"runNumber","argumentNames":[]}

function settings_runNumber__P25229_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_runNumber__P25229, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function control___screen_update__P25165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[663]) return breakpoint(s, 3, 663, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.__update___27584);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[664]) return breakpoint(s, 4, 664, r0);
  case 4:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = globals.__update___27584;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 111; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 665;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[665]) return breakpoint(s, 6, 665, r0);
  case 6:
    globals.__updated___27586 = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_update__P25165.info = {"start":90,"length":102,"line":4,"column":4,"endLine":8,"endColumn":5,"fileName":"pxt_modules/screen---st7735/frame.ts","functionName":"update","argumentNames":[]}

function control___screen_update__P25165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_update__P25165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function pause__P23784(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[474]) return breakpoint(s, 1, 474, r0);
  case 1:
    setupResume(s, 2);
    pxsim.loops.pause(s.arg0);
    checkResumeConsumed();
    return;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pause__P23784.info = {"start":246,"length":57,"line":7,"column":0,"endLine":9,"endColumn":1,"fileName":"pxt_modules/base/pause.ts","functionName":"pause","argumentNames":["ms"]}

function pause__P23784_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pause__P23784, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_SpriteSet_toString__P25629(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C25618_VT)) failedCast(r0);
    s.lastBrkId = 1281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1281]) return breakpoint(s, 1, 1281, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    s.tmp_4 = sprites_SpriteSet_length__P25621_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 536; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, " sprites");
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_toString__P25629.info = {"start":2586,"length":66,"line":97,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"toString","argumentNames":["this"]}

function sprites_SpriteSet_toString__P25629_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_toString__P25629, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function sprites_SpriteSet_length__P25621(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C25618_VT)) failedCast(r0);
    s.lastBrkId = 1268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1268]) return breakpoint(s, 1, 1268, r0);
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_SpriteSet_length__P25621.info = {"start":625,"length":65,"line":26,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"length","argumentNames":["this"]}
sprites_SpriteSet_length__P25621.isGetter = true;

function sprites_SpriteSet_length__P25621_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_length__P25621, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function music_Melody_toString__P24996(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C24987_VT)) failedCast(r0);
    s.lastBrkId = 508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[508]) return breakpoint(s, 1, 508, r0);
  case 1:
    r0 = s.arg0.fields["_text"];
    return leave(s, r0)
  default: oops()
} } }
music_Melody_toString__P24996.info = {"start":10021,"length":53,"line":310,"column":8,"endLine":312,"endColumn":9,"fileName":"pxt_modules/mixer---stm32/melody.ts","functionName":"toString","argumentNames":["this"]}

function music_Melody_toString__P24996_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_toString__P24996, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_SpriteMap_toString__P25609(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1266]) return breakpoint(s, 1, 1266, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    r0 = s.arg0.fields["buckets"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__length(s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, " buckets, ");
    s.tmp_1 = r0;
    s.tmp_10 = helpers_arrayFilter__P23481_mk(s);
    r0 = s.arg0.fields["buckets"];
    s.tmp_10.arg0 = r0;
    s.tmp_10.arg1 = length_inline__P38041;
    s.callLocIdx = 533; s.pc = 3; return s.tmp_10;
  case 3:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, " filled");
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_toString__P25609.info = {"start":4109,"length":123,"line":112,"column":8,"endLine":114,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"toString","argumentNames":["this"]}

function sprites_SpriteMap_toString__P25609_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_toString__P25609, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  arg0: undefined,
} }





function length_inline__P38041(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
length_inline__P38041.info = {"start":4196,"length":8,"line":113,"column":74,"endLine":113,"endColumn":82,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["b"]}

function length_inline__P38041_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: length_inline__P38041, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_moveSprite__P25696(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___38073 = undefined;
    s.maxDist___38081 = undefined;
    s.ms___38101 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1537]) return breakpoint(s, 13, 1537, r0);
  case 13:
    r0 = s.arg1.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1538]) return breakpoint(s, 14, 1538, r0);
  case 14:
    r0 = s.arg1.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1539]) return breakpoint(s, 15, 1539, r0);
  case 15:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 737; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1540]) return breakpoint(s, 17, 1540, r0);
  case 17:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg3;
    s.callLocIdx = 738; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1541]) return breakpoint(s, 19, 1541, r0);
  case 19:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 739; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___38073 = (r0);
    s.lastBrkId = 1542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1542]) return breakpoint(s, 21, 1542, r0);
  case 21:
    s.tmp_0 = r0 = s.tm___38073;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P25854_mk(s);
    s.tmp_1.arg0 = s.tm___38073;
    s.callLocIdx = 740; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1543]) return breakpoint(s, 23, 1543, r0);
  case 23:
    s.tmp_3 = Fx_toInt__P23543_mk(s);
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 741; s.pc = 24; return s.tmp_3;
  case 24:
    r0 = s.retval;
    s.maxDist___38081 = (r0);
    s.lastBrkId = 1544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1544]) return breakpoint(s, 25, 1544, r0);
  case 25:
    s.tmp_2 = Math_abs__P23499_mk(s);
    s.tmp_3 = Fx_toInt__P23543_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.callLocIdx = 742; s.pc = 27; return s.tmp_3;
  case 27:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 743; s.pc = 26; return s.tmp_2;
  case 26:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.maxDist___38081);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_5 = Math_abs__P23499_mk(s);
    s.tmp_6 = Fx_toInt__P23543_mk(s);
    s.tmp_6.arg0 = s.arg3;
    s.callLocIdx = 744; s.pc = 29; return s.tmp_6;
  case 29:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 745; s.pc = 28; return s.tmp_5;
  case 28:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 <= s.maxDist___38081);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1545]) return breakpoint(s, 30, 1545, r0);
  case 30:
    r0 = pxsim_pxtcore_mkClassInstance(MovingSprite__C25680_VT);
    s.tmp_8 = r0;
    s.tmp_9 = MovingSprite_constructor__P25681_mk(s);
    s.tmp_9.arg0 = s.tmp_8;
    s.tmp_9.arg1 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_9.arg2 = r0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_9.arg3 = r0;
    s.tmp_9.arg4 = s.arg2;
    s.tmp_9.arg5 = s.arg3;
    s.tmp_9.arg6 = s.arg2;
    s.tmp_9.arg7 = s.arg3;
    s.callLocIdx = 746; s.pc = 31; return s.tmp_9;
  case 31:
    r0 = s.retval;
    s.ms___38101 = (s.tmp_8);
    s.lastBrkId = 1546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1546]) return breakpoint(s, 32, 1546, r0);
  case 32:
    s.tmp_0 = ArcadePhysicsEngine_tilemapCollisions__P27714_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.ms___38101;
    s.tmp_0.arg2 = s.tm___38073;
    s.callLocIdx = 747; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    { step = 10; continue; }
  case 5:
    s.lastBrkId = 1547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1547]) return breakpoint(s, 34, 1547, r0);
  case 34:
    s.tmp_1 = tiles_TileMap_isOnWall__P25865_mk(s);
    s.tmp_1.arg0 = s.tm___38073;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 748; s.pc = 35; return s.tmp_1;
  case 35:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    s.tmp_4 = ArcadePhysicsEngine_canResolveClipping__P27716_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    s.tmp_4.arg2 = s.tm___38073;
    s.callLocIdx = 749; s.pc = 36; return s.tmp_4;
  case 36:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 7:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1548]) return breakpoint(s, 37, 1548, r0);
  case 37:
    s.tmp_6 = r0 = s.arg1;
    r0 = s.tmp_6.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 | 256);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["flags"] = (s.tmp_7);
    { step = 9; continue; }
  case 8:
    s.lastBrkId = 1549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1549]) return breakpoint(s, 38, 1549, r0);
  case 38:
    s.tmp_0 = r0 = s.arg1;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -257);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 9:
  case 10:
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_moveSprite__P25696.info = {"start":22609,"length":1208,"line":623,"column":4,"endLine":654,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"moveSprite","argumentNames":["this","s","dx","dy"]}

function ArcadePhysicsEngine_moveSprite__P25696_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_moveSprite__P25696, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tm___38073: undefined,
  maxDist___38081: undefined,
  ms___38101: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_canResolveClipping__P27716(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hbox___38146 = undefined;
    s.sz___38149 = undefined;
    s.maxMove___38154 = undefined;
    s.origY___38156 = undefined;
    s.origX___38159 = undefined;
    s.l___38162 = undefined;
    s.r___38167 = undefined;
    s.t___38172 = undefined;
    s.b___38177 = undefined;
    s.offset___38182 = undefined;
    s.offset___38207 = undefined;
    s.offset___38238 = undefined;
    s.offset___38263 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1550]) return breakpoint(s, 20, 1550, r0);
  case 20:
    s.tmp_3 = Sprite_isStatic__P25558_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 750; s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1551]) return breakpoint(s, 22, 1551, r0);
  case 22:
    s.tmp_4 = Sprite_setHitbox__P25557_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.callLocIdx = 751; s.pc = 23; return s.tmp_4;
  case 23:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1552]) return breakpoint(s, 24, 1552, r0);
  case 24:
    r0 = s.arg1.fields["_hitbox"];
    s.hbox___38146 = (r0);
    s.lastBrkId = 1553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1553]) return breakpoint(s, 25, 1553, r0);
  case 25:
    s.tmp_1 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.callLocIdx = 752; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (1 << s.tmp_0);
    s.sz___38149 = (r0);
    s.lastBrkId = 1554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1554]) return breakpoint(s, 27, 1554, r0);
  case 27:
    s.tmp_0 = ArcadePhysicsEngine_maxStep__P25688_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 753; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.maxMove___38154 = (r0);
    s.lastBrkId = 1555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1555]) return breakpoint(s, 29, 1555, r0);
  case 29:
    r0 = s.arg1.fields["_y"];
    s.origY___38156 = (r0);
    s.lastBrkId = 1556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1556]) return breakpoint(s, 30, 1556, r0);
  case 30:
    r0 = s.arg1.fields["_x"];
    s.origX___38159 = (r0);
    s.lastBrkId = 1557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1557]) return breakpoint(s, 31, 1557, r0);
  case 31:
    s.tmp_0 = Fx_toInt__P23543_mk(s);
    s.tmp_1 = game_Hitbox_left__P25382_mk(s);
    s.tmp_1.arg0 = s.hbox___38146;
    s.callLocIdx = 754; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 755; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.l___38162 = (r0);
    s.lastBrkId = 1558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1558]) return breakpoint(s, 34, 1558, r0);
  case 34:
    s.tmp_0 = Fx_toInt__P23543_mk(s);
    s.tmp_1 = game_Hitbox_right__P25384_mk(s);
    s.tmp_1.arg0 = s.hbox___38146;
    s.callLocIdx = 756; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 757; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.r___38167 = (r0);
    s.lastBrkId = 1559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1559]) return breakpoint(s, 37, 1559, r0);
  case 37:
    s.tmp_0 = Fx_toInt__P23543_mk(s);
    s.tmp_1 = game_Hitbox_top__P25383_mk(s);
    s.tmp_1.arg0 = s.hbox___38146;
    s.callLocIdx = 758; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 759; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    s.t___38172 = (r0);
    s.lastBrkId = 1560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1560]) return breakpoint(s, 40, 1560, r0);
  case 40:
    s.tmp_0 = Fx_toInt__P23543_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_1.arg0 = s.hbox___38146;
    s.callLocIdx = 760; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 761; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.b___38177 = (r0);
    s.lastBrkId = 1561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1561]) return breakpoint(s, 43, 1561, r0);
  case 43:
    r0 = (s.b___38177 + 1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.sz___38149);
    s.offset___38182 = (r0);
    s.lastBrkId = 1562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1562]) return breakpoint(s, 44, 1562, r0);
  case 44:
    r0 = (s.offset___38182 <= s.maxMove___38154);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1563;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1563]) return breakpoint(s, 45, 1563, r0);
  case 45:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_sub__P23530_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P23520_mk(s);
    s.tmp_4.arg0 = s.offset___38182;
    s.callLocIdx = 762; s.pc = 47; return s.tmp_4;
  case 47:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 763; s.pc = 46; return s.tmp_3;
  case 46:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_y"] = (s.tmp_2);
    s.lastBrkId = 1564;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1564]) return breakpoint(s, 48, 1564, r0);
  case 48:
    s.tmp_3 = tiles_TileMap_isOnWall__P25865_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 764; s.pc = 49; return s.tmp_3;
  case 49:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1565]) return breakpoint(s, 50, 1565, r0);
  case 50:
    r0 = true;
    { step = 19; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1566]) return breakpoint(s, 51, 1566, r0);
  case 51:
    r0 = (s.arg1).fields["_y"] = (s.origY___38156);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 1567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1567]) return breakpoint(s, 52, 1567, r0);
  case 52:
    r0 = (s.t___38172 / s.sz___38149);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.sz___38149);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.t___38172);
    s.offset___38207 = (r0);
    s.lastBrkId = 1568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1568]) return breakpoint(s, 53, 1568, r0);
  case 53:
    r0 = (s.offset___38207 <= s.maxMove___38154);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1569]) return breakpoint(s, 54, 1569, r0);
  case 54:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P23520_mk(s);
    s.tmp_4.arg0 = s.offset___38207;
    s.callLocIdx = 765; s.pc = 56; return s.tmp_4;
  case 56:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 766; s.pc = 55; return s.tmp_3;
  case 55:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_y"] = (s.tmp_2);
    s.lastBrkId = 1570;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1570]) return breakpoint(s, 57, 1570, r0);
  case 57:
    s.tmp_3 = tiles_TileMap_isOnWall__P25865_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 767; s.pc = 58; return s.tmp_3;
  case 58:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1571;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1571]) return breakpoint(s, 59, 1571, r0);
  case 59:
    r0 = true;
    { step = 19; continue; }
    { step = 8; continue; }
  case 7:
    s.lastBrkId = 1572;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1572]) return breakpoint(s, 60, 1572, r0);
  case 60:
    r0 = (s.arg1).fields["_y"] = (s.origY___38156);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 1573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1573]) return breakpoint(s, 61, 1573, r0);
  case 61:
    r0 = (s.r___38167 + 1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.sz___38149);
    s.offset___38238 = (r0);
    s.lastBrkId = 1574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1574]) return breakpoint(s, 62, 1574, r0);
  case 62:
    r0 = (s.offset___38238 <= s.maxMove___38154);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1575]) return breakpoint(s, 63, 1575, r0);
  case 63:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_sub__P23530_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P23520_mk(s);
    s.tmp_4.arg0 = s.offset___38238;
    s.callLocIdx = 768; s.pc = 65; return s.tmp_4;
  case 65:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 769; s.pc = 64; return s.tmp_3;
  case 64:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_x"] = (s.tmp_2);
    s.lastBrkId = 1576;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1576]) return breakpoint(s, 66, 1576, r0);
  case 66:
    s.tmp_3 = tiles_TileMap_isOnWall__P25865_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 770; s.pc = 67; return s.tmp_3;
  case 67:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1577]) return breakpoint(s, 68, 1577, r0);
  case 68:
    r0 = true;
    { step = 19; continue; }
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 1578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1578]) return breakpoint(s, 69, 1578, r0);
  case 69:
    r0 = (s.arg1).fields["_x"] = (s.origX___38159);
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 1579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1579]) return breakpoint(s, 70, 1579, r0);
  case 70:
    r0 = (s.l___38162 / s.sz___38149);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.sz___38149);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.l___38162);
    s.offset___38263 = (r0);
    s.lastBrkId = 1580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1580]) return breakpoint(s, 71, 1580, r0);
  case 71:
    r0 = (s.offset___38263 <= s.maxMove___38154);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1581]) return breakpoint(s, 72, 1581, r0);
  case 72:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P23520_mk(s);
    s.tmp_4.arg0 = s.offset___38263;
    s.callLocIdx = 771; s.pc = 74; return s.tmp_4;
  case 74:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 772; s.pc = 73; return s.tmp_3;
  case 73:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_x"] = (s.tmp_2);
    s.lastBrkId = 1582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1582]) return breakpoint(s, 75, 1582, r0);
  case 75:
    s.tmp_3 = tiles_TileMap_isOnWall__P25865_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 773; s.pc = 76; return s.tmp_3;
  case 76:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1583]) return breakpoint(s, 77, 1583, r0);
  case 77:
    r0 = true;
    { step = 19; continue; }
    { step = 16; continue; }
  case 15:
    s.lastBrkId = 1584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1584]) return breakpoint(s, 78, 1584, r0);
  case 78:
    r0 = (s.arg1).fields["_x"] = (s.origX___38159);
  case 16:
  case 17:
  case 18:
    s.lastBrkId = 1585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1585]) return breakpoint(s, 79, 1585, r0);
  case 79:
    r0 = false;
  case 19:
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_canResolveClipping__P27716.info = {"start":23913,"length":2135,"line":657,"column":4,"endLine":728,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"canResolveClipping","argumentNames":["this","s","tm"]}

function ArcadePhysicsEngine_canResolveClipping__P27716_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_canResolveClipping__P27716, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  hbox___38146: undefined,
  sz___38149: undefined,
  maxMove___38154: undefined,
  origY___38156: undefined,
  origX___38159: undefined,
  l___38162: undefined,
  r___38167: undefined,
  t___38172: undefined,
  b___38177: undefined,
  offset___38182: undefined,
  offset___38207: undefined,
  offset___38238: undefined,
  offset___38263: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_isStatic__P25558(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1050]) return breakpoint(s, 1, 1050, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.isStatic(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
Sprite_isStatic__P25558.info = {"start":10944,"length":57,"line":388,"column":4,"endLine":390,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isStatic","argumentNames":["this"]}

function Sprite_isStatic__P25558_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isStatic__P25558, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_Hitbox_bottom__P25385(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C25374_VT)) failedCast(r0);
    s.lastBrkId = 924;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[924]) return breakpoint(s, 1, 924, r0);
  case 1:
    s.tmp_0 = Fx_sub__P23530_mk(s);
    s.tmp_1 = Fx_add__P23528_mk(s);
    r0 = s.arg0.fields["height"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = game_Hitbox_top__P25383_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 221; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 222; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 223; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_bottom__P25385.info = {"start":803,"length":139,"line":33,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"bottom","argumentNames":["this"]}
game_Hitbox_bottom__P25385.isGetter = true;

function game_Hitbox_bottom__P25385_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_bottom__P25385, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_Hitbox_right__P25384(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C25374_VT)) failedCast(r0);
    s.lastBrkId = 923;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[923]) return breakpoint(s, 1, 923, r0);
  case 1:
    s.tmp_0 = Fx_sub__P23530_mk(s);
    s.tmp_1 = Fx_add__P23528_mk(s);
    r0 = s.arg0.fields["width"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = game_Hitbox_left__P25382_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 218; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 219; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 220; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_right__P25384.info = {"start":655,"length":138,"line":26,"column":8,"endLine":31,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"right","argumentNames":["this"]}
game_Hitbox_right__P25384.isGetter = true;

function game_Hitbox_right__P25384_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_right__P25384, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_Hitbox_top__P25383(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C25374_VT)) failedCast(r0);
    s.lastBrkId = 922;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[922]) return breakpoint(s, 1, 922, r0);
  case 1:
    s.tmp_0 = Fx_add__P23528_mk(s);
    r0 = s.arg0.fields["oy"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Fx_floor__P23539_mk(s);
    r0 = s.arg0.fields["parent"];
    r0 = r0.fields["_y"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 216; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 217; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_top__P25383.info = {"start":562,"length":83,"line":22,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"top","argumentNames":["this"]}
game_Hitbox_top__P25383.isGetter = true;

function game_Hitbox_top__P25383_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_top__P25383, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_Hitbox_left__P25382(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C25374_VT)) failedCast(r0);
    s.lastBrkId = 921;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[921]) return breakpoint(s, 1, 921, r0);
  case 1:
    s.tmp_0 = Fx_add__P23528_mk(s);
    r0 = s.arg0.fields["ox"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Fx_floor__P23539_mk(s);
    r0 = s.arg0.fields["parent"];
    r0 = r0.fields["_x"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 214; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 215; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_left__P25382.info = {"start":468,"length":84,"line":18,"column":8,"endLine":20,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"left","argumentNames":["this"]}
game_Hitbox_left__P25382.isGetter = true;

function game_Hitbox_left__P25382_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_left__P25382, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions__P27714(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___38405 = undefined;
    s.hbox___38430 = undefined;
    s.tileScale___38433 = undefined;
    s.tileSize___38436 = undefined;
    s.xDiff___38440 = undefined;
    s.yDiff___38447 = undefined;
    s.right___38463 = undefined;
    s.x0___38467 = undefined;
    s.collidedTiles___38482 = undefined;
    s.y___38484 = undefined;
    s.y0___38498 = undefined;
    s.obstacle___38514 = undefined;
    s.collisionDirection___38541 = undefined;
    s.tile___38567 = undefined;
    s.unnamed380___U14 = undefined;
    s.unnamed381___U15 = undefined;
    s.down___38651 = undefined;
    s.y0___38655 = undefined;
    s.collidedTiles___38670 = undefined;
    s.x___38672 = undefined;
    s.x0___38682 = undefined;
    s.obstacle___38696 = undefined;
    s.collisionDirection___38723 = undefined;
    s.tile___38749 = undefined;
    s.unnamed382___U24 = undefined;
    s.unnamed383___U25 = undefined;
    s.overlappedTiles___38836 = undefined;
    s.x___38838 = undefined;
    s.x0___38848 = undefined;
    s.y___38858 = undefined;
    s.y0___38868 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1436]) return breakpoint(s, 93, 1436, r0);
  case 93:
    r0 = s.arg1.fields["sprite"];
    s.s___38405 = (r0);
    s.lastBrkId = 1437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1437]) return breakpoint(s, 94, 1437, r0);
  case 94:
    r0 = s.s___38405.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 256);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1438]) return breakpoint(s, 95, 1438, r0);
  case 95:
    s.tmp_5 = tiles_TileMap_isOnWall__P25865_mk(s);
    s.tmp_5.arg0 = s.arg2;
    s.tmp_5.arg1 = s.s___38405;
    s.callLocIdx = 634; s.pc = 96; return s.tmp_5;
  case 96:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1439]) return breakpoint(s, 97, 1439, r0);
  case 97:
    s.tmp_6 = r0 = s.s___38405;
    r0 = s.tmp_6.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & -257);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["flags"] = (s.tmp_7);
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 1440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1440]) return breakpoint(s, 98, 1440, r0);
  case 98:
    s.tmp_3 = Sprite_isStatic__P25558_mk(s);
    s.tmp_3.arg0 = s.s___38405;
    s.callLocIdx = 635; s.pc = 99; return s.tmp_3;
  case 99:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1441]) return breakpoint(s, 100, 1441, r0);
  case 100:
    s.tmp_4 = Sprite_setHitbox__P25557_mk(s);
    s.tmp_4.arg0 = s.s___38405;
    s.callLocIdx = 636; s.pc = 101; return s.tmp_4;
  case 101:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1442]) return breakpoint(s, 102, 1442, r0);
  case 102:
    r0 = s.s___38405.fields["_hitbox"];
    s.hbox___38430 = (r0);
    s.lastBrkId = 1443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1443]) return breakpoint(s, 103, 1443, r0);
  case 103:
    s.tmp_0 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_0.arg0 = s.arg2;
    s.callLocIdx = 637; s.pc = 104; return s.tmp_0;
  case 104:
    r0 = s.retval;
    s.tileScale___38433 = (r0);
    s.lastBrkId = 1444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1444]) return breakpoint(s, 105, 1444, r0);
  case 105:
    r0 = (1 << s.tileScale___38433);
    s.tileSize___38436 = (r0);
    s.lastBrkId = 1445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1445]) return breakpoint(s, 106, 1445, r0);
  case 106:
    s.tmp_0 = Fx_sub__P23530_mk(s);
    r0 = s.s___38405.fields["_x"];
    s.tmp_0.arg0 = r0;
    r0 = s.s___38405.fields["_lastX"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 638; s.pc = 107; return s.tmp_0;
  case 107:
    r0 = s.retval;
    s.xDiff___38440 = (r0);
    s.lastBrkId = 1446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1446]) return breakpoint(s, 108, 1446, r0);
  case 108:
    s.tmp_0 = Fx_sub__P23530_mk(s);
    r0 = s.s___38405.fields["_y"];
    s.tmp_0.arg0 = r0;
    r0 = s.s___38405.fields["_lastY"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 639; s.pc = 109; return s.tmp_0;
  case 109:
    r0 = s.retval;
    s.yDiff___38447 = (r0);
    s.lastBrkId = 1447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1447]) return breakpoint(s, 110, 1447, r0);
  case 110:
    r0 = s.s___38405.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 2818);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 79; continue; }
    s.lastBrkId = 1448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1448]) return breakpoint(s, 111, 1448, r0);
  case 111:
    r0 = (s.xDiff___38440 !== 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 41; continue; }
    s.lastBrkId = 1449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1449]) return breakpoint(s, 112, 1449, r0);
  case 112:
    r0 = (s.xDiff___38440 > 0);
    s.right___38463 = (r0);
    s.lastBrkId = 1450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1450]) return breakpoint(s, 113, 1450, r0);
  case 113:
    r0 = pxsim_numops_toBoolDecr(s.right___38463);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = Fx_add__P23528_mk(s);
    s.tmp_1 = game_Hitbox_right__P25384_mk(s);
    s.tmp_1.arg0 = s.hbox___38430;
    s.callLocIdx = 640; s.pc = 115; return s.tmp_1;
  case 115:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 641; s.pc = 114; return s.tmp_0;
  case 114:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    s.tmp_2 = Fx_sub__P23530_mk(s);
    s.tmp_3 = game_Hitbox_left__P25382_mk(s);
    s.tmp_3.arg0 = s.hbox___38430;
    s.callLocIdx = 642; s.pc = 117; return s.tmp_3;
  case 117:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 256;
    s.callLocIdx = 643; s.pc = 116; return s.tmp_2;
  case 116:
    r0 = s.retval;
  case 8:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = Fx_toIntShifted__P23527_mk(s);
    s.tmp_6 = Fx_add__P23528_mk(s);
    s.tmp_6.arg0 = s.tmp_4;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 644; s.pc = 119; return s.tmp_6;
  case 119:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___38433;
    s.callLocIdx = 645; s.pc = 118; return s.tmp_5;
  case 118:
    r0 = s.retval;
    s.x0___38467 = (r0);
    s.lastBrkId = 1451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1451]) return breakpoint(s, 120, 1451, r0);
  case 120:
    r0 = pxsim_Array__mk();
    s.collidedTiles___38482 = (r0);
    s.lastBrkId = 1452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1452]) return breakpoint(s, 121, 1452, r0);
  case 121:
    s.tmp_0 = Fx_sub__P23530_mk(s);
    s.tmp_1 = game_Hitbox_top__P25383_mk(s);
    s.tmp_1.arg0 = s.hbox___38430;
    s.callLocIdx = 646; s.pc = 123; return s.tmp_1;
  case 123:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.yDiff___38447;
    s.callLocIdx = 647; s.pc = 122; return s.tmp_0;
  case 122:
    r0 = s.retval;
    s.y___38484 = (r0);
    s.lastBrkId = 1453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1453]) return breakpoint(s, 124, 1453, r0);
  case 124:
  case 9:
    s.lastBrkId = 1454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1454]) return breakpoint(s, 125, 1454, r0);
  case 125:
    s.tmp_1 = r0 = s.y___38484;
    s.tmp_3 = Fx_iadd__P23529_mk(s);
    s.tmp_3.arg0 = s.tileSize___38436;
    s.tmp_4 = Fx_sub__P23530_mk(s);
    s.tmp_5 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_5.arg0 = s.hbox___38430;
    s.callLocIdx = 648; s.pc = 128; return s.tmp_5;
  case 128:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.yDiff___38447;
    s.callLocIdx = 649; s.pc = 127; return s.tmp_4;
  case 127:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 650; s.pc = 126; return s.tmp_3;
  case 126:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1455]) return breakpoint(s, 129, 1455, r0);
  case 129:
    s.tmp_6 = Fx_toIntShifted__P23527_mk(s);
    s.tmp_7 = Fx_add__P23528_mk(s);
    s.tmp_8 = Fx_min__P23537_mk(s);
    s.tmp_8.arg0 = s.y___38484;
    s.tmp_9 = Fx_sub__P23530_mk(s);
    s.tmp_10 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_10.arg0 = s.hbox___38430;
    s.callLocIdx = 651; s.pc = 134; return s.tmp_10;
  case 134:
    r0 = s.retval;
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = s.yDiff___38447;
    s.callLocIdx = 652; s.pc = 133; return s.tmp_9;
  case 133:
    r0 = s.retval;
    s.tmp_8.arg1 = r0;
    s.callLocIdx = 653; s.pc = 132; return s.tmp_8;
  case 132:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = 128;
    s.callLocIdx = 654; s.pc = 131; return s.tmp_7;
  case 131:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tileScale___38433;
    s.callLocIdx = 655; s.pc = 130; return s.tmp_6;
  case 130:
    r0 = s.retval;
    s.y0___38498 = (r0);
    s.lastBrkId = 1456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1456]) return breakpoint(s, 135, 1456, r0);
  case 135:
    s.tmp_1 = tiles_TileMap_isObstacle__P25863_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.x0___38467;
    s.tmp_1.arg2 = s.y0___38498;
    s.callLocIdx = 656; s.pc = 136; return s.tmp_1;
  case 136:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1457]) return breakpoint(s, 137, 1457, r0);
  case 137:
    s.tmp_2 = tiles_TileMap_getObstacle__P25864_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___38467;
    s.tmp_2.arg2 = s.y0___38498;
    s.callLocIdx = 657; s.pc = 138; return s.tmp_2;
  case 138:
    r0 = s.retval;
    s.obstacle___38514 = (r0);
    s.lastBrkId = 1458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1458]) return breakpoint(s, 139, 1458, r0);
  case 139:
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapCollisions_inline__P38522);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.obstacle___38514);
    s.tmp_4 = helpers_arraySome__P23478_mk(s);
    s.tmp_4.arg0 = s.collidedTiles___38482;
    s.tmp_4.arg1 = s.tmp_0;
    s.callLocIdx = 658; s.pc = 140; return s.tmp_4;
  case 140:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1459]) return breakpoint(s, 141, 1459, r0);
  case 141:
    r0 = pxsim_Array__push(s.collidedTiles___38482, s.obstacle___38514);
  case 10:
  case 11:
  case 12:
  case 13:
    s.lastBrkId = 1460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1460]) return breakpoint(s, 142, 1460, r0);
  case 142:
    s.tmp_0 = Fx_iadd__P23529_mk(s);
    s.tmp_0.arg0 = s.tileSize___38436;
    s.tmp_0.arg1 = s.y___38484;
    s.callLocIdx = 659; s.pc = 143; return s.tmp_0;
  case 143:
    r0 = s.retval;
    s.y___38484 = (r0);
    { step = 9; continue; }
  case 14:
    s.lastBrkId = 1461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1461]) return breakpoint(s, 144, 1461, r0);
  case 144:
    r0 = pxsim_Array__length(s.collidedTiles___38482);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 39; continue; }
    s.lastBrkId = 1462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1462]) return breakpoint(s, 145, 1462, r0);
  case 145:
    r0 = pxsim_numops_toBoolDecr(s.right___38463);
    if (!r0) { step = 15; continue; }
    r0 = 2;
    { step = 16; continue; }
  case 15:
    r0 = 0;
  case 16:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.collisionDirection___38541 = (s.tmp_1);
    s.lastBrkId = 1463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1463]) return breakpoint(s, 146, 1463, r0);
  case 146:
    r0 = pxsim_numops_toBoolDecr(s.right___38463);
    if (!r0) { step = 17; continue; }
    s.tmp_0 = Fx_sub__P23530_mk(s);
    s.tmp_1 = Fx8__P23520_mk(s);
    r0 = (s.x0___38467 << s.tileScale___38433);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 660; s.pc = 148; return s.tmp_1;
  case 148:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.hbox___38430.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 661; s.pc = 147; return s.tmp_0;
  case 147:
    r0 = s.retval;
    { step = 18; continue; }
  case 17:
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = (s.x0___38467 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 << s.tileScale___38433);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 662; s.pc = 149; return s.tmp_2;
  case 149:
    r0 = s.retval;
  case 18:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.s___38405;
    s.tmp_7 = Fx_sub__P23530_mk(s);
    s.tmp_7.arg0 = s.tmp_4;
    r0 = s.hbox___38430.fields["ox"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 663; s.pc = 150; return s.tmp_7;
  case 150:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_x"] = (s.tmp_6);
    s.lastBrkId = 1464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1464]) return breakpoint(s, 151, 1464, r0);
  case 151:
    s.tile___38567 = (undefined);
    s.unnamed380___U14 = (s.collidedTiles___38482);
    s.unnamed381___U15 = (0);
    s.lastBrkId = 1465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1465]) return breakpoint(s, 152, 1465, r0);
  case 152:
  case 19:
    s.tmp_0 = r0 = s.unnamed381___U15;
    r0 = pxsim_Array__length(s.unnamed380___U14);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 22; continue; }
    r0 = pxsim_Array__getAt(s.unnamed380___U14, s.unnamed381___U15);
    s.tile___38567 = (r0);
    s.lastBrkId = 1466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1466]) return breakpoint(s, 153, 1466, r0);
  case 153:
    r0 = s.s___38405.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1467]) return breakpoint(s, 154, 1467, r0);
  case 154:
    s.tmp_6 = Sprite_registerObstacle__P25589_mk(s);
    s.tmp_6.arg0 = s.s___38405;
    s.tmp_6.arg1 = s.collisionDirection___38541;
    s.tmp_6.arg2 = s.tile___38567;
    s.tmp_6.arg3 = s.arg2;
    s.callLocIdx = 664; s.pc = 155; return s.tmp_6;
  case 155:
    r0 = s.retval;
  case 20:
  case 21:
    r0 = (s.unnamed381___U15 + 1);
    s.unnamed381___U15 = (r0);
    { step = 19; continue; }
  case 22:
    s.unnamed380___U14 = (undefined);
    s.lastBrkId = 1468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1468]) return breakpoint(s, 156, 1468, r0);
  case 156:
    r0 = s.s___38405.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 1469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1469]) return breakpoint(s, 157, 1469, r0);
  case 157:
    s.tmp_2 = Sprite_destroy__P25591_mk(s);
    s.tmp_2.arg0 = s.s___38405;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 665; s.pc = 158; return s.tmp_2;
  case 158:
    r0 = s.retval;
    { step = 38; continue; }
  case 23:
    s.lastBrkId = 1470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1470]) return breakpoint(s, 159, 1470, r0);
  case 159:
    r0 = s.s___38405.fields["_vx"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["cachedVx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 34; continue; }
    s.lastBrkId = 1471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1471]) return breakpoint(s, 160, 1471, r0);
  case 160:
    r0 = s.s___38405.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 32);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 32; continue; }
    s.lastBrkId = 1472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1472]) return breakpoint(s, 161, 1472, r0);
  case 161:
    r0 = pxsim_numops_toBoolDecr(s.right___38463);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (r0) { step = 24; continue; }
    r0 = s.tmp_5;
    { step = 25; continue; }
  case 24:
    s.tmp_8 = Sprite_vx__P25521_mk(s);
    s.tmp_8.arg0 = s.s___38405;
    s.callLocIdx = 666; s.pc = 162; return s.tmp_8;
  case 162:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 < 0);
  case 25:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (!r0) { step = 26; continue; }
    r0 = s.tmp_9;
    { step = 29; continue; }
  case 26:
    s.tmp_10 = r0 = s.right___38463;
    r0 = pxsim_numops_toBool(s.tmp_10);
    if (r0) { step = 27; continue; }
    r0 = s.tmp_10;
    { step = 28; continue; }
  case 27:
    s.tmp_12 = Sprite_vx__P25521_mk(s);
    s.tmp_12.arg0 = s.s___38405;
    s.callLocIdx = 667; s.pc = 163; return s.tmp_12;
  case 163:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 > 0);
  case 28:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = s.tmp_13;
  case 29:
    // jmp value (already in r0)
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_14);
    if (!r0) { step = 30; continue; }
    s.lastBrkId = 1473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1473]) return breakpoint(s, 164, 1473, r0);
  case 164:
    s.tmp_15 = r0 = s.s___38405;
    s.tmp_17 = Fx_neg__P23526_mk(s);
    r0 = s.s___38405.fields["_vx"];
    s.tmp_17.arg0 = r0;
    s.callLocIdx = 668; s.pc = 165; return s.tmp_17;
  case 165:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = (s.tmp_15).fields["_vx"] = (s.tmp_16);
    s.lastBrkId = 1474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1474]) return breakpoint(s, 166, 1474, r0);
  case 166:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P23526_mk(s);
    r0 = s.arg1.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 669; s.pc = 167; return s.tmp_2;
  case 167:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["xStep"] = (s.tmp_1);
    s.lastBrkId = 1475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1475]) return breakpoint(s, 168, 1475, r0);
  case 168:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P23526_mk(s);
    r0 = s.arg1.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 670; s.pc = 169; return s.tmp_2;
  case 169:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dx"] = (s.tmp_1);
  case 30:
  case 31:
    { step = 33; continue; }
  case 32:
    s.lastBrkId = 1476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1476]) return breakpoint(s, 170, 1476, r0);
  case 170:
    r0 = (s.arg1).fields["dx"] = (0);
    s.lastBrkId = 1477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1477]) return breakpoint(s, 171, 1477, r0);
  case 171:
    r0 = (s.s___38405).fields["_vx"] = (0);
  case 33:
    { step = 37; continue; }
  case 34:
    s.lastBrkId = 1478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1478]) return breakpoint(s, 172, 1478, r0);
  case 172:
    s.tmp_2 = Math_sign__P23500_mk(s);
    s.tmp_3 = Fx_toInt__P23543_mk(s);
    r0 = s.s___38405.fields["_vx"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 671; s.pc = 174; return s.tmp_3;
  case 174:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 672; s.pc = 173; return s.tmp_2;
  case 173:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = Math_sign__P23500_mk(s);
    s.tmp_6 = Fx_toInt__P23543_mk(s);
    r0 = s.arg1.fields["cachedVx"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 673; s.pc = 176; return s.tmp_6;
  case 176:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 674; s.pc = 175; return s.tmp_5;
  case 175:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_1 === s.tmp_4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 35; continue; }
    s.lastBrkId = 1479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1479]) return breakpoint(s, 177, 1479, r0);
  case 177:
    r0 = (s.arg1).fields["dx"] = (0);
  case 35:
  case 36:
  case 37:
  case 38:
  case 39:
  case 40:
  case 41:
  case 42:
    s.lastBrkId = 1480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1480]) return breakpoint(s, 178, 1480, r0);
  case 178:
    r0 = (s.yDiff___38447 !== 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 77; continue; }
    s.lastBrkId = 1481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1481]) return breakpoint(s, 179, 1481, r0);
  case 179:
    r0 = (s.yDiff___38447 > 0);
    s.down___38651 = (r0);
    s.lastBrkId = 1482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1482]) return breakpoint(s, 180, 1482, r0);
  case 180:
    r0 = pxsim_numops_toBoolDecr(s.down___38651);
    if (!r0) { step = 43; continue; }
    s.tmp_0 = Fx_add__P23528_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_1.arg0 = s.hbox___38430;
    s.callLocIdx = 675; s.pc = 182; return s.tmp_1;
  case 182:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 676; s.pc = 181; return s.tmp_0;
  case 181:
    r0 = s.retval;
    { step = 44; continue; }
  case 43:
    s.tmp_2 = Fx_sub__P23530_mk(s);
    s.tmp_3 = game_Hitbox_top__P25383_mk(s);
    s.tmp_3.arg0 = s.hbox___38430;
    s.callLocIdx = 677; s.pc = 184; return s.tmp_3;
  case 184:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 256;
    s.callLocIdx = 678; s.pc = 183; return s.tmp_2;
  case 183:
    r0 = s.retval;
  case 44:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = Fx_toIntShifted__P23527_mk(s);
    s.tmp_6 = Fx_add__P23528_mk(s);
    s.tmp_6.arg0 = s.tmp_4;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 679; s.pc = 186; return s.tmp_6;
  case 186:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___38433;
    s.callLocIdx = 680; s.pc = 185; return s.tmp_5;
  case 185:
    r0 = s.retval;
    s.y0___38655 = (r0);
    s.lastBrkId = 1483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1483]) return breakpoint(s, 187, 1483, r0);
  case 187:
    r0 = pxsim_Array__mk();
    s.collidedTiles___38670 = (r0);
    s.lastBrkId = 1484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1484]) return breakpoint(s, 188, 1484, r0);
  case 188:
    s.tmp_0 = game_Hitbox_left__P25382_mk(s);
    s.tmp_0.arg0 = s.hbox___38430;
    s.callLocIdx = 681; s.pc = 189; return s.tmp_0;
  case 189:
    r0 = s.retval;
    s.x___38672 = (r0);
    s.lastBrkId = 1485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1485]) return breakpoint(s, 190, 1485, r0);
  case 190:
  case 45:
    s.lastBrkId = 1486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1486]) return breakpoint(s, 191, 1486, r0);
  case 191:
    s.tmp_1 = r0 = s.x___38672;
    s.tmp_3 = Fx_iadd__P23529_mk(s);
    s.tmp_3.arg0 = s.tileSize___38436;
    s.tmp_4 = game_Hitbox_right__P25384_mk(s);
    s.tmp_4.arg0 = s.hbox___38430;
    s.callLocIdx = 682; s.pc = 193; return s.tmp_4;
  case 193:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 683; s.pc = 192; return s.tmp_3;
  case 192:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 50; continue; }
    s.lastBrkId = 1487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1487]) return breakpoint(s, 194, 1487, r0);
  case 194:
    s.tmp_5 = Fx_toIntShifted__P23527_mk(s);
    s.tmp_6 = Fx_add__P23528_mk(s);
    s.tmp_7 = Fx_min__P23537_mk(s);
    s.tmp_7.arg0 = s.x___38672;
    s.tmp_8 = game_Hitbox_right__P25384_mk(s);
    s.tmp_8.arg0 = s.hbox___38430;
    s.callLocIdx = 684; s.pc = 198; return s.tmp_8;
  case 198:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 685; s.pc = 197; return s.tmp_7;
  case 197:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 686; s.pc = 196; return s.tmp_6;
  case 196:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___38433;
    s.callLocIdx = 687; s.pc = 195; return s.tmp_5;
  case 195:
    r0 = s.retval;
    s.x0___38682 = (r0);
    s.lastBrkId = 1488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1488]) return breakpoint(s, 199, 1488, r0);
  case 199:
    s.tmp_1 = tiles_TileMap_isObstacle__P25863_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.x0___38682;
    s.tmp_1.arg2 = s.y0___38655;
    s.callLocIdx = 688; s.pc = 200; return s.tmp_1;
  case 200:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 48; continue; }
    s.lastBrkId = 1489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1489]) return breakpoint(s, 201, 1489, r0);
  case 201:
    s.tmp_2 = tiles_TileMap_getObstacle__P25864_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___38682;
    s.tmp_2.arg2 = s.y0___38655;
    s.callLocIdx = 689; s.pc = 202; return s.tmp_2;
  case 202:
    r0 = s.retval;
    s.obstacle___38696 = (r0);
    s.lastBrkId = 1490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1490]) return breakpoint(s, 203, 1490, r0);
  case 203:
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapCollisions_inline__P38704);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.obstacle___38696);
    s.tmp_4 = helpers_arraySome__P23478_mk(s);
    s.tmp_4.arg0 = s.collidedTiles___38670;
    s.tmp_4.arg1 = s.tmp_0;
    s.callLocIdx = 690; s.pc = 204; return s.tmp_4;
  case 204:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 46; continue; }
    s.lastBrkId = 1491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1491]) return breakpoint(s, 205, 1491, r0);
  case 205:
    r0 = pxsim_Array__push(s.collidedTiles___38670, s.obstacle___38696);
  case 46:
  case 47:
  case 48:
  case 49:
    s.lastBrkId = 1492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1492]) return breakpoint(s, 206, 1492, r0);
  case 206:
    s.tmp_0 = Fx_iadd__P23529_mk(s);
    s.tmp_0.arg0 = s.tileSize___38436;
    s.tmp_0.arg1 = s.x___38672;
    s.callLocIdx = 691; s.pc = 207; return s.tmp_0;
  case 207:
    r0 = s.retval;
    s.x___38672 = (r0);
    { step = 45; continue; }
  case 50:
    s.lastBrkId = 1493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1493]) return breakpoint(s, 208, 1493, r0);
  case 208:
    r0 = pxsim_Array__length(s.collidedTiles___38670);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 75; continue; }
    s.lastBrkId = 1494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1494]) return breakpoint(s, 209, 1494, r0);
  case 209:
    r0 = pxsim_numops_toBoolDecr(s.down___38651);
    if (!r0) { step = 51; continue; }
    r0 = 3;
    { step = 52; continue; }
  case 51:
    r0 = 1;
  case 52:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.collisionDirection___38723 = (s.tmp_1);
    s.lastBrkId = 1495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1495]) return breakpoint(s, 210, 1495, r0);
  case 210:
    r0 = pxsim_numops_toBoolDecr(s.down___38651);
    if (!r0) { step = 53; continue; }
    s.tmp_0 = Fx_sub__P23530_mk(s);
    s.tmp_1 = Fx8__P23520_mk(s);
    r0 = (s.y0___38655 << s.tileScale___38433);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 692; s.pc = 212; return s.tmp_1;
  case 212:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.hbox___38430.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 693; s.pc = 211; return s.tmp_0;
  case 211:
    r0 = s.retval;
    { step = 54; continue; }
  case 53:
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = (s.y0___38655 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 << s.tileScale___38433);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 694; s.pc = 213; return s.tmp_2;
  case 213:
    r0 = s.retval;
  case 54:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.s___38405;
    s.tmp_7 = Fx_sub__P23530_mk(s);
    s.tmp_7.arg0 = s.tmp_4;
    r0 = s.hbox___38430.fields["oy"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 695; s.pc = 214; return s.tmp_7;
  case 214:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_y"] = (s.tmp_6);
    s.lastBrkId = 1496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1496]) return breakpoint(s, 215, 1496, r0);
  case 215:
    s.tile___38749 = (undefined);
    s.unnamed382___U24 = (s.collidedTiles___38670);
    s.unnamed383___U25 = (0);
    s.lastBrkId = 1497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1497]) return breakpoint(s, 216, 1497, r0);
  case 216:
  case 55:
    s.tmp_0 = r0 = s.unnamed383___U25;
    r0 = pxsim_Array__length(s.unnamed382___U24);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 58; continue; }
    r0 = pxsim_Array__getAt(s.unnamed382___U24, s.unnamed383___U25);
    s.tile___38749 = (r0);
    s.lastBrkId = 1498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1498]) return breakpoint(s, 217, 1498, r0);
  case 217:
    r0 = s.s___38405.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 56; continue; }
    s.lastBrkId = 1499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1499]) return breakpoint(s, 218, 1499, r0);
  case 218:
    s.tmp_6 = Sprite_registerObstacle__P25589_mk(s);
    s.tmp_6.arg0 = s.s___38405;
    s.tmp_6.arg1 = s.collisionDirection___38723;
    s.tmp_6.arg2 = s.tile___38749;
    s.tmp_6.arg3 = s.arg2;
    s.callLocIdx = 696; s.pc = 219; return s.tmp_6;
  case 219:
    r0 = s.retval;
  case 56:
  case 57:
    r0 = (s.unnamed383___U25 + 1);
    s.unnamed383___U25 = (r0);
    { step = 55; continue; }
  case 58:
    s.unnamed382___U24 = (undefined);
    s.lastBrkId = 1500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1500]) return breakpoint(s, 220, 1500, r0);
  case 220:
    r0 = s.s___38405.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 59; continue; }
    s.lastBrkId = 1501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1501]) return breakpoint(s, 221, 1501, r0);
  case 221:
    s.tmp_2 = Sprite_destroy__P25591_mk(s);
    s.tmp_2.arg0 = s.s___38405;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 697; s.pc = 222; return s.tmp_2;
  case 222:
    r0 = s.retval;
    { step = 74; continue; }
  case 59:
    s.lastBrkId = 1502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1502]) return breakpoint(s, 223, 1502, r0);
  case 223:
    r0 = s.s___38405.fields["_vy"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["cachedVy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 70; continue; }
    s.lastBrkId = 1503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1503]) return breakpoint(s, 224, 1503, r0);
  case 224:
    r0 = s.s___38405.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 32);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 68; continue; }
    s.lastBrkId = 1504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1504]) return breakpoint(s, 225, 1504, r0);
  case 225:
    r0 = pxsim_numops_toBoolDecr(s.down___38651);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (r0) { step = 60; continue; }
    r0 = s.tmp_5;
    { step = 61; continue; }
  case 60:
    s.tmp_8 = Sprite_vy__P25523_mk(s);
    s.tmp_8.arg0 = s.s___38405;
    s.callLocIdx = 698; s.pc = 226; return s.tmp_8;
  case 226:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 < 0);
  case 61:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (!r0) { step = 62; continue; }
    r0 = s.tmp_9;
    { step = 65; continue; }
  case 62:
    s.tmp_10 = r0 = s.down___38651;
    r0 = pxsim_numops_toBool(s.tmp_10);
    if (r0) { step = 63; continue; }
    r0 = s.tmp_10;
    { step = 64; continue; }
  case 63:
    s.tmp_12 = Sprite_vy__P25523_mk(s);
    s.tmp_12.arg0 = s.s___38405;
    s.callLocIdx = 699; s.pc = 227; return s.tmp_12;
  case 227:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 > 0);
  case 64:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = s.tmp_13;
  case 65:
    // jmp value (already in r0)
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_14);
    if (!r0) { step = 66; continue; }
    s.lastBrkId = 1505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1505]) return breakpoint(s, 228, 1505, r0);
  case 228:
    s.tmp_15 = r0 = s.s___38405;
    s.tmp_17 = Fx_neg__P23526_mk(s);
    r0 = s.s___38405.fields["_vy"];
    s.tmp_17.arg0 = r0;
    s.callLocIdx = 700; s.pc = 229; return s.tmp_17;
  case 229:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = (s.tmp_15).fields["_vy"] = (s.tmp_16);
    s.lastBrkId = 1506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1506]) return breakpoint(s, 230, 1506, r0);
  case 230:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P23526_mk(s);
    r0 = s.arg1.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 701; s.pc = 231; return s.tmp_2;
  case 231:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["yStep"] = (s.tmp_1);
    s.lastBrkId = 1507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1507]) return breakpoint(s, 232, 1507, r0);
  case 232:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P23526_mk(s);
    r0 = s.arg1.fields["dy"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 702; s.pc = 233; return s.tmp_2;
  case 233:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dy"] = (s.tmp_1);
  case 66:
  case 67:
    { step = 69; continue; }
  case 68:
    s.lastBrkId = 1508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1508]) return breakpoint(s, 234, 1508, r0);
  case 234:
    r0 = (s.arg1).fields["dy"] = (0);
    s.lastBrkId = 1509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1509]) return breakpoint(s, 235, 1509, r0);
  case 235:
    r0 = (s.s___38405).fields["_vy"] = (0);
  case 69:
    { step = 73; continue; }
  case 70:
    s.lastBrkId = 1510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1510]) return breakpoint(s, 236, 1510, r0);
  case 236:
    s.tmp_2 = Math_sign__P23500_mk(s);
    s.tmp_3 = Fx_toInt__P23543_mk(s);
    r0 = s.s___38405.fields["_vy"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 703; s.pc = 238; return s.tmp_3;
  case 238:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 704; s.pc = 237; return s.tmp_2;
  case 237:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = Math_sign__P23500_mk(s);
    s.tmp_6 = Fx_toInt__P23543_mk(s);
    r0 = s.arg1.fields["cachedVy"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 705; s.pc = 240; return s.tmp_6;
  case 240:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 706; s.pc = 239; return s.tmp_5;
  case 239:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_1 === s.tmp_4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 71; continue; }
    s.lastBrkId = 1511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1511]) return breakpoint(s, 241, 1511, r0);
  case 241:
    r0 = (s.arg1).fields["dy"] = (0);
  case 71:
  case 72:
  case 73:
  case 74:
  case 75:
  case 76:
  case 77:
  case 78:
  case 79:
  case 80:
    s.lastBrkId = 1512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1512]) return breakpoint(s, 242, 1512, r0);
  case 242:
    r0 = s.s___38405.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 1538);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 91; continue; }
    s.lastBrkId = 1513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1513]) return breakpoint(s, 243, 1513, r0);
  case 243:
    r0 = pxsim_Array__mk();
    s.overlappedTiles___38836 = (r0);
    s.lastBrkId = 1514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1514]) return breakpoint(s, 244, 1514, r0);
  case 244:
    s.tmp_0 = game_Hitbox_left__P25382_mk(s);
    s.tmp_0.arg0 = s.hbox___38430;
    s.callLocIdx = 707; s.pc = 245; return s.tmp_0;
  case 245:
    r0 = s.retval;
    s.x___38838 = (r0);
    s.lastBrkId = 1515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1515]) return breakpoint(s, 246, 1515, r0);
  case 246:
  case 81:
    s.lastBrkId = 1516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1516]) return breakpoint(s, 247, 1516, r0);
  case 247:
    s.tmp_1 = r0 = s.x___38838;
    s.tmp_3 = Fx_iadd__P23529_mk(s);
    s.tmp_3.arg0 = s.tileSize___38436;
    s.tmp_4 = game_Hitbox_right__P25384_mk(s);
    s.tmp_4.arg0 = s.hbox___38430;
    s.callLocIdx = 708; s.pc = 249; return s.tmp_4;
  case 249:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 709; s.pc = 248; return s.tmp_3;
  case 248:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 88; continue; }
    s.lastBrkId = 1517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1517]) return breakpoint(s, 250, 1517, r0);
  case 250:
    s.tmp_5 = Fx_toIntShifted__P23527_mk(s);
    s.tmp_6 = Fx_add__P23528_mk(s);
    s.tmp_7 = Fx_min__P23537_mk(s);
    s.tmp_7.arg0 = s.x___38838;
    s.tmp_8 = game_Hitbox_right__P25384_mk(s);
    s.tmp_8.arg0 = s.hbox___38430;
    s.callLocIdx = 710; s.pc = 254; return s.tmp_8;
  case 254:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 711; s.pc = 253; return s.tmp_7;
  case 253:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 712; s.pc = 252; return s.tmp_6;
  case 252:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___38433;
    s.callLocIdx = 713; s.pc = 251; return s.tmp_5;
  case 251:
    r0 = s.retval;
    s.x0___38848 = (r0);
    s.lastBrkId = 1518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1518]) return breakpoint(s, 255, 1518, r0);
  case 255:
    s.tmp_0 = game_Hitbox_top__P25383_mk(s);
    s.tmp_0.arg0 = s.hbox___38430;
    s.callLocIdx = 714; s.pc = 256; return s.tmp_0;
  case 256:
    r0 = s.retval;
    s.y___38858 = (r0);
    s.lastBrkId = 1519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1519]) return breakpoint(s, 257, 1519, r0);
  case 257:
  case 82:
    s.lastBrkId = 1520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1520]) return breakpoint(s, 258, 1520, r0);
  case 258:
    s.tmp_1 = r0 = s.y___38858;
    s.tmp_3 = Fx_iadd__P23529_mk(s);
    s.tmp_3.arg0 = s.tileSize___38436;
    s.tmp_4 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_4.arg0 = s.hbox___38430;
    s.callLocIdx = 715; s.pc = 260; return s.tmp_4;
  case 260:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 716; s.pc = 259; return s.tmp_3;
  case 259:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 87; continue; }
    s.lastBrkId = 1521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1521]) return breakpoint(s, 261, 1521, r0);
  case 261:
    s.tmp_5 = Fx_toIntShifted__P23527_mk(s);
    s.tmp_6 = Fx_add__P23528_mk(s);
    s.tmp_7 = Fx_min__P23537_mk(s);
    s.tmp_7.arg0 = s.y___38858;
    s.tmp_8 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_8.arg0 = s.hbox___38430;
    s.callLocIdx = 717; s.pc = 265; return s.tmp_8;
  case 265:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 718; s.pc = 264; return s.tmp_7;
  case 264:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 719; s.pc = 263; return s.tmp_6;
  case 263:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___38433;
    s.callLocIdx = 720; s.pc = 262; return s.tmp_5;
  case 262:
    r0 = s.retval;
    s.y0___38868 = (r0);
    s.lastBrkId = 1522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1522]) return breakpoint(s, 266, 1522, r0);
  case 266:
    s.tmp_3 = tiles_TileMap_isObstacle__P25863_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.x0___38848;
    s.tmp_3.arg2 = s.y0___38868;
    s.callLocIdx = 721; s.pc = 267; return s.tmp_3;
  case 267:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 83; continue; }
    r0 = s.tmp_0;
    { step = 84; continue; }
  case 83:
    r0 = s.s___38405.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & 2048);
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 84:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    if (!r0) { step = 85; continue; }
    s.lastBrkId = 1523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1523]) return breakpoint(s, 268, 1523, r0);
  case 268:
    s.tmp_10 = r0 = s.overlappedTiles___38836;
    s.tmp_12 = tiles_TileMap_getTile__P25856_mk(s);
    s.tmp_12.arg0 = s.arg2;
    s.tmp_12.arg1 = s.x0___38848;
    s.tmp_12.arg2 = s.y0___38868;
    s.callLocIdx = 722; s.pc = 269; return s.tmp_12;
  case 269:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_Array__push(s.tmp_10, s.tmp_11);
  case 85:
  case 86:
    s.lastBrkId = 1524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1524]) return breakpoint(s, 270, 1524, r0);
  case 270:
    s.tmp_0 = Fx_iadd__P23529_mk(s);
    s.tmp_0.arg0 = s.tileSize___38436;
    s.tmp_0.arg1 = s.y___38858;
    s.callLocIdx = 723; s.pc = 271; return s.tmp_0;
  case 271:
    r0 = s.retval;
    s.y___38858 = (r0);
    { step = 82; continue; }
  case 87:
    s.lastBrkId = 1525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1525]) return breakpoint(s, 272, 1525, r0);
  case 272:
    s.tmp_0 = Fx_iadd__P23529_mk(s);
    s.tmp_0.arg0 = s.tileSize___38436;
    s.tmp_0.arg1 = s.x___38838;
    s.callLocIdx = 724; s.pc = 273; return s.tmp_0;
  case 273:
    r0 = s.retval;
    s.x___38838 = (r0);
    { step = 81; continue; }
  case 88:
    s.lastBrkId = 1526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1526]) return breakpoint(s, 274, 1526, r0);
  case 274:
    r0 = pxsim_Array__length(s.overlappedTiles___38836);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 89; continue; }
    s.lastBrkId = 1527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1527]) return breakpoint(s, 275, 1527, r0);
  case 275:
    s.tmp_1 = ArcadePhysicsEngine_tilemapOverlaps__P27715_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.s___38405;
    s.tmp_1.arg2 = s.overlappedTiles___38836;
    s.callLocIdx = 725; s.pc = 276; return s.tmp_1;
  case 276:
    r0 = s.retval;
  case 89:
  case 90:
  case 91:
  case 92:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions__P27714.info = {"start":11722,"length":9572,"line":348,"column":4,"endLine":587,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"tilemapCollisions","argumentNames":["this","movingSprite","tm"]}

function ArcadePhysicsEngine_tilemapCollisions__P27714_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions__P27714, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  s___38405: undefined,
  hbox___38430: undefined,
  tileScale___38433: undefined,
  tileSize___38436: undefined,
  xDiff___38440: undefined,
  yDiff___38447: undefined,
  right___38463: undefined,
  x0___38467: undefined,
  collidedTiles___38482: undefined,
  y___38484: undefined,
  y0___38498: undefined,
  obstacle___38514: undefined,
  collisionDirection___38541: undefined,
  tile___38567: undefined,
  unnamed380___U14: undefined,
  unnamed381___U15: undefined,
  down___38651: undefined,
  y0___38655: undefined,
  collidedTiles___38670: undefined,
  x___38672: undefined,
  x0___38682: undefined,
  obstacle___38696: undefined,
  collisionDirection___38723: undefined,
  tile___38749: undefined,
  unnamed382___U24: undefined,
  unnamed383___U25: undefined,
  overlappedTiles___38836: undefined,
  x___38838: undefined,
  x0___38848: undefined,
  y___38858: undefined,
  y0___38868: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions_inline__P38522(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["tileIndex"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["tileIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions_inline__P38522.info = {"start":13940,"length":39,"line":410,"column":48,"endLine":410,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["o"]}

function ArcadePhysicsEngine_tilemapCollisions_inline__P38522_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions_inline__P38522, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions_inline__P38704(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["tileIndex"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["tileIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions_inline__P38704.info = {"start":17420,"length":39,"line":491,"column":48,"endLine":491,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["o"]}

function ArcadePhysicsEngine_tilemapCollisions_inline__P38704_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions_inline__P38704, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps__P27715(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.alreadyHandled___38915 = undefined;
    s.tile___38918 = undefined;
    s.unnamed384___U2 = undefined;
    s.unnamed385___U3 = undefined;
    s.tileOverlapHandlers___38939 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1528]) return breakpoint(s, 8, 1528, r0);
  case 8:
    r0 = pxsim_Array__mk();
    s.alreadyHandled___38915 = (r0);
    s.lastBrkId = 1529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1529]) return breakpoint(s, 9, 1529, r0);
  case 9:
    s.tile___38918 = (undefined);
    s.unnamed384___U2 = (s.arg2);
    s.unnamed385___U3 = (0);
    s.lastBrkId = 1530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1530]) return breakpoint(s, 10, 1530, r0);
  case 10:
  case 1:
    s.tmp_0 = r0 = s.unnamed385___U3;
    r0 = pxsim_Array__length(s.unnamed384___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_Array__getAt(s.unnamed384___U2, s.unnamed385___U3);
    s.tile___38918 = (r0);
    s.lastBrkId = 1531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1531]) return breakpoint(s, 11, 1531, r0);
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapOverlaps_inline__P38922);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.tile___38918);
    s.tmp_4 = helpers_arraySome__P23478_mk(s);
    s.tmp_4.arg0 = s.alreadyHandled___38915;
    s.tmp_4.arg1 = s.tmp_2;
    s.callLocIdx = 730; s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1532]) return breakpoint(s, 13, 1532, r0);
  case 13:
    { step = 6; continue; }
  case 2:
  case 3:
    s.lastBrkId = 1533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1533]) return breakpoint(s, 14, 1533, r0);
  case 14:
    r0 = pxsim_Array__push(s.alreadyHandled___38915, s.tile___38918);
    s.lastBrkId = 1534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1534]) return breakpoint(s, 15, 1534, r0);
  case 15:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 731; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    r0 = r0.fields["tileOverlapHandlers"];
    s.tileOverlapHandlers___38939 = (r0);
    s.lastBrkId = 1535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1535]) return breakpoint(s, 17, 1535, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.tileOverlapHandlers___38939);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1536]) return breakpoint(s, 18, 1536, r0);
  case 18:
    r0 = pxsim_pxtcore_mkAction(2, forEach_inline__P38947);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.tile___38918);
    r0 = pxsim_pxtcore_mkAction(2, ArcadePhysicsEngine_tilemapOverlaps_inline__P38963);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 1, s.tile___38918);
    s.tmp_2 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_3 = helpers_arrayFilter__P23481_mk(s);
    s.tmp_3.arg0 = s.tileOverlapHandlers___38939;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 734; s.pc = 20; return s.tmp_3;
  case 20:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 736; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = (s.unnamed385___U3 + 1);
    s.unnamed385___U3 = (r0);
    { step = 1; continue; }
  case 7:
    s.unnamed384___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps__P27715.info = {"start":21571,"length":707,"line":595,"column":4,"endLine":611,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"tilemapOverlaps","argumentNames":["this","sprite","overlappedTiles"]}

function ArcadePhysicsEngine_tilemapOverlaps__P27715_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps__P27715, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  alreadyHandled___38915: undefined,
  tile___38918: undefined,
  unnamed384___U2: undefined,
  unnamed385___U3: undefined,
  tileOverlapHandlers___38939: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps_inline__P38922(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_2 = tiles_Location_column__P25803_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 726; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_Location_column__P25803_mk(s);
    s.tmp_4.arg0 = s.caps[0];
    s.callLocIdx = 727; s.pc = 4; return s.tmp_4;
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 === s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_6 = tiles_Location_row__P25804_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 728; s.pc = 5; return s.tmp_6;
  case 5:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = tiles_Location_row__P25804_mk(s);
    s.tmp_8.arg0 = s.caps[0];
    s.callLocIdx = 729; s.pc = 6; return s.tmp_8;
  case 6:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_5 === s.tmp_7);
  case 2:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps_inline__P38922.info = {"start":21786,"length":51,"line":599,"column":36,"endLine":599,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["l"]}

function ArcadePhysicsEngine_tilemapOverlaps_inline__P38922_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps_inline__P38922, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function forEach_inline__P38947(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteKind"];
    s.tmp_1 = r0;
    s.tmp_3 = Sprite_kind__P25570_mk(s);
    s.tmp_3.arg0 = s.caps[0];
    s.callLocIdx = 732; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["tileKind"];
    s.tmp_4 = r0;
    s.tmp_6 = tiles_getTileImage__P25875_mk(s);
    s.tmp_6.arg0 = s.caps[1];
    s.callLocIdx = 733; s.pc = 4; return s.tmp_6;
  case 4:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.equals(s.tmp_4, s.tmp_5);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P38947.info = {"start":22106,"length":81,"line":607,"column":28,"endLine":607,"endColumn":109,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P38947_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P38947, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps_inline__P38963(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 735; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 735; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 735; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 735; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps_inline__P38963.info = {"start":22218,"length":28,"line":608,"column":29,"endLine":608,"endColumn":57,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function ArcadePhysicsEngine_tilemapOverlaps_inline__P38963_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps_inline__P38963, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function tiles_getTileImage__P25875(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___38971 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1796;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1796]) return breakpoint(s, 6, 1796, r0);
  case 6:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 866; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___38971 = (r0);
    s.lastBrkId = 1797;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1797]) return breakpoint(s, 8, 1797, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___38971.fields["tileMap"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1798;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1798]) return breakpoint(s, 9, 1798, r0);
  case 9:
    r0 = pxsim.image.ofBuffer(_hex38981);
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1799;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1799]) return breakpoint(s, 10, 1799, r0);
  case 10:
    s.tmp_5 = tiles_TileMap_getTileImage__P25866_mk(s);
    r0 = s.scene___38971.fields["tileMap"];
    s.tmp_5.arg0 = r0;
    s.tmp_6 = tiles_Location_tileSet__P25811_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 867; s.pc = 12; return s.tmp_6;
  case 12:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 868; s.pc = 11; return s.tmp_5;
  case 11:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_getTileImage__P25875.info = {"start":21815,"length":207,"line":672,"column":4,"endLine":676,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["loc"]}

function tiles_getTileImage__P25875_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_getTileImage__P25875, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  scene___38971: undefined,
  arg0: undefined,
} }

const _hex38981 = pxsim.BufferMethods.createBufferFromHex("8704000000000000")




function tiles_TileMap_getTileImage__P25866(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1794;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1794]) return breakpoint(s, 1, 1794, r0);
  case 1:
    s.tmp_0 = tiles_TileMapData_getTileImage__P25833_mk(s);
    s.tmp_1 = tiles_TileMap_data__P25847_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 863; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 864; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTileImage__P25866.info = {"start":17461,"length":96,"line":552,"column":8,"endLine":554,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["this","index"]}

function tiles_TileMap_getTileImage__P25866_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTileImage__P25866, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_getTileImage__P25833(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.size___31320 = undefined;
    s.cachedImage___31324 = undefined;
    s.originalImage___31330 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C25824_VT)) failedCast(r0);
    s.lastBrkId = 1705;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1705]) return breakpoint(s, 9, 1705, r0);
  case 9:
    s.tmp_1 = tiles_TileMapData_scale__P25828_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 800; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (1 << s.tmp_0);
    s.size___31320 = (r0);
    s.lastBrkId = 1706;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1706]) return breakpoint(s, 11, 1706, r0);
  case 11:
    r0 = s.arg0.fields["cachedTileView"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.arg1);
    s.cachedImage___31324 = (r0);
    s.lastBrkId = 1707;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1707]) return breakpoint(s, 12, 1707, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.cachedImage___31324);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1708;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1708]) return breakpoint(s, 13, 1708, r0);
  case 13:
    r0 = s.arg0.fields["tileset"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.arg1);
    s.originalImage___31330 = (r0);
    s.lastBrkId = 1709;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1709]) return breakpoint(s, 14, 1709, r0);
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.originalImage___31330);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1710;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1710]) return breakpoint(s, 15, 1710, r0);
  case 15:
    r0 = pxsim_ImageMethods.width(s.originalImage___31330);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.size___31320);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_ImageMethods.height(s.originalImage___31330);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 <= s.size___31320);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1711;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1711]) return breakpoint(s, 16, 1711, r0);
  case 16:
    s.cachedImage___31324 = (s.originalImage___31330);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1712;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1712]) return breakpoint(s, 17, 1712, r0);
  case 17:
    r0 = pxsim.image.create(s.size___31320, s.size___31320);
    s.cachedImage___31324 = (r0);
    s.lastBrkId = 1713;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1713]) return breakpoint(s, 18, 1713, r0);
  case 18:
    r0 = pxsim_ImageMethods.drawImage(s.cachedImage___31324, s.originalImage___31330, 0, 0);
  case 4:
    s.lastBrkId = 1714;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1714]) return breakpoint(s, 19, 1714, r0);
  case 19:
    r0 = s.arg0.fields["cachedTileView"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.cachedImage___31324);
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 1715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1715]) return breakpoint(s, 20, 1715, r0);
  case 20:
    r0 = s.cachedImage___31324;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTileImage__P25833.info = {"start":7318,"length":717,"line":251,"column":8,"endLine":268,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["this","index"]}

function tiles_TileMapData_getTileImage__P25833_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTileImage__P25833, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  size___31320: undefined,
  cachedImage___31324: undefined,
  originalImage___31330: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_Location_tileSet__P25811(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C25800_VT)) failedCast(r0);
    s.lastBrkId = 1689;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1689]) return breakpoint(s, 1, 1689, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_getTileIndex__P25857_mk(s);
    s.tmp_1 = tiles_Location_tileMap__P25802_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 795; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_col"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["_row"];
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 796; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_tileSet__P25811.info = {"start":2323,"length":101,"line":86,"column":8,"endLine":88,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"tileSet","argumentNames":["this"]}
tiles_Location_tileSet__P25811.isGetter = true;

function tiles_Location_tileSet__P25811_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_tileSet__P25811, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function tiles_TileMap_getTileIndex__P25857(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1733;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1733]) return breakpoint(s, 1, 1733, r0);
  case 1:
    s.tmp_0 = tiles_TileMapData_getTile__P25830_mk(s);
    s.tmp_1 = tiles_TileMap_data__P25847_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 818; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 819; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTileIndex__P25857.info = {"start":11142,"length":105,"line":383,"column":8,"endLine":385,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileIndex","argumentNames":["this","col","row"]}

function tiles_TileMap_getTileIndex__P25857_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTileIndex__P25857, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_Location_tileMap__P25802(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C25800_VT)) failedCast(r0);
    s.lastBrkId = 1680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1680]) return breakpoint(s, 1, 1680, r0);
  case 1:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 786; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_tileMap__P25802.info = {"start":491,"length":73,"line":24,"column":8,"endLine":26,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"tileMap","argumentNames":["this"]}
tiles_Location_tileMap__P25802.isGetter = true;

function tiles_Location_tileMap__P25802_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_tileMap__P25802, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function tiles_Location_row__P25804(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C25800_VT)) failedCast(r0);
    s.lastBrkId = 1682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1682]) return breakpoint(s, 1, 1682, r0);
  case 1:
    r0 = s.arg0.fields["_row"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_row__P25804.info = {"start":877,"length":51,"line":38,"column":8,"endLine":40,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"row","argumentNames":["this"]}
tiles_Location_row__P25804.isGetter = true;

function tiles_Location_row__P25804_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_row__P25804, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_Location_column__P25803(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C25800_VT)) failedCast(r0);
    s.lastBrkId = 1681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1681]) return breakpoint(s, 1, 1681, r0);
  case 1:
    r0 = s.arg0.fields["_col"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_column__P25803.info = {"start":695,"length":54,"line":31,"column":8,"endLine":33,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"column","argumentNames":["this"]}
tiles_Location_column__P25803.isGetter = true;

function tiles_Location_column__P25803_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_column__P25803, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMap_getObstacle__P25864(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.index___39138 = undefined;
    s.tile___39150 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1775;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1775]) return breakpoint(s, 3, 1775, r0);
  case 3:
    s.tmp_1 = tiles_TileMapData_isOutsideMap__P25836_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.callLocIdx = 843; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = tiles_TileMapData_getTile__P25830_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg1;
    s.tmp_2.arg2 = s.arg2;
    s.callLocIdx = 844; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.index___39138 = (s.tmp_3);
    s.lastBrkId = 1776;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1776]) return breakpoint(s, 6, 1776, r0);
  case 6:
    s.tmp_0 = tiles_TileMapData_getTileImage__P25833_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___39138;
    s.callLocIdx = 845; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tile___39150 = (r0);
    s.lastBrkId = 1777;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1777]) return breakpoint(s, 8, 1777, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_StaticObstacle__C25653_VT);
    s.tmp_0 = r0;
    s.tmp_1 = sprites_StaticObstacle_constructor__P25659_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.tile___39150;
    s.tmp_2 = r0 = s.arg2;
    s.tmp_4 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 846; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1.arg2 = r0;
    s.tmp_5 = r0 = s.arg1;
    s.tmp_7 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 847; s.pc = 11; return s.tmp_7;
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 << s.tmp_6);
    s.tmp_1.arg3 = r0;
    s.tmp_8 = tiles_TileMap_layer__P25852_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 848; s.pc = 12; return s.tmp_8;
  case 12:
    r0 = s.retval;
    s.tmp_1.arg4 = r0;
    s.tmp_1.arg5 = s.index___39138;
    s.callLocIdx = 849; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getObstacle__P25864.info = {"start":16404,"length":410,"line":521,"column":8,"endLine":531,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getObstacle","argumentNames":["this","col","row"]}

function tiles_TileMap_getObstacle__P25864_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getObstacle__P25864, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  index___39138: undefined,
  tile___39150: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_layer__P25852(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1730]) return breakpoint(s, 1, 1730, r0);
  case 1:
    r0 = s.arg0.fields["_layer"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_layer__P25852.info = {"start":9931,"length":63,"line":341,"column":8,"endLine":343,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"layer","argumentNames":["this"]}
tiles_TileMap_layer__P25852.isGetter = true;

function tiles_TileMap_layer__P25852_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_layer__P25852, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_StaticObstacle_constructor__P25659(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C25653_VT)) failedCast(r0);
    s.lastBrkId = 1288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1288]) return breakpoint(s, 1, 1288, r0);
  case 1:
    r0 = (s.arg0).fields["image"] = (s.arg1);
    s.lastBrkId = 1289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1289]) return breakpoint(s, 2, 1289, r0);
  case 2:
    r0 = (s.arg0).fields["layer"] = (s.arg4);
    s.lastBrkId = 1290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1290]) return breakpoint(s, 3, 1290, r0);
  case 3:
    r0 = (s.arg0).fields["top"] = (s.arg2);
    s.lastBrkId = 1291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1291]) return breakpoint(s, 4, 1291, r0);
  case 4:
    r0 = (s.arg0).fields["left"] = (s.arg3);
    s.lastBrkId = 1292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1292]) return breakpoint(s, 5, 1292, r0);
  case 5:
    r0 = (s.arg0).fields["tileIndex"] = (s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_constructor__P25659.info = {"start":563,"length":261,"line":28,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"inline","argumentNames":["this","image","top","left","layer","tileIndex"]}

function sprites_StaticObstacle_constructor__P25659_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_constructor__P25659, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function tiles_TileMap_isObstacle__P25863(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1770;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1770]) return breakpoint(s, 6, 1770, r0);
  case 6:
    s.tmp_3 = tiles_TileMap_enabled__P25854_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 840; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1771;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1771]) return breakpoint(s, 8, 1771, r0);
  case 8:
    r0 = false;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1772;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1772]) return breakpoint(s, 9, 1772, r0);
  case 9:
    s.tmp_5 = tiles_TileMapData_isOutsideMap__P25836_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg1;
    s.tmp_5.arg2 = s.arg2;
    s.callLocIdx = 841; s.pc = 10; return s.tmp_5;
  case 10:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1773;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1773]) return breakpoint(s, 11, 1773, r0);
  case 11:
    r0 = true;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1774;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1774]) return breakpoint(s, 12, 1774, r0);
  case 12:
    s.tmp_6 = tiles_TileMapData_isWall__P25835_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.arg1;
    s.tmp_6.arg2 = s.arg2;
    s.callLocIdx = 842; s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isObstacle__P25863.info = {"start":16183,"length":211,"line":514,"column":8,"endLine":519,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isObstacle","argumentNames":["this","col","row"]}

function tiles_TileMap_isObstacle__P25863_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isObstacle__P25863, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_getTile__P25856(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1732]) return breakpoint(s, 1, 1732, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(tiles_Location__C25800_VT);
    s.tmp_0 = r0;
    s.tmp_1 = tiles_Location_constructor__P25801_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg0;
    s.callLocIdx = 817; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTile__P25856.info = {"start":11021,"length":111,"line":379,"column":8,"endLine":381,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTile","argumentNames":["this","col","row"]}

function tiles_TileMap_getTile__P25856_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTile__P25856, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_Location_constructor__P25801(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C25800_VT)) failedCast(r0);
    s.lastBrkId = 1678;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1678]) return breakpoint(s, 1, 1678, r0);
  case 1:
    r0 = (s.arg0).fields["_col"] = (s.arg1);
    s.lastBrkId = 1679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1679]) return breakpoint(s, 2, 1679, r0);
  case 2:
    r0 = (s.arg0).fields["_row"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_Location_constructor__P25801.info = {"start":360,"length":121,"line":19,"column":8,"endLine":22,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","col","row","map"]}

function tiles_Location_constructor__P25801_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_constructor__P25801, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_registerObstacle__P25589(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.collisionHandlers___39051 = undefined;
    s.wallCollisionHandlers___39058 = undefined;
    s.wallHandlersToRun___39083 = undefined;
    s.asTileLocation___39096 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1168]) return breakpoint(s, 9, 1168, r0);
  case 9:
    r0 = s.arg0.fields["_obstacles"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.arg2);
    s.lastBrkId = 1169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1169]) return breakpoint(s, 10, 1169, r0);
  case 10:
    s.tmp_1 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 461; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    r0 = r0.fields["collisionHandlers"];
    s.tmp_0 = r0;
    s.tmp_3 = if_tileIndex_1_mk(s);
    s.tmp_3.arg0 = s.arg2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "tileIndex");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["tileIndex"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["tileIndex"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 462; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_2);
    s.collisionHandlers___39051 = (r0);
    s.lastBrkId = 1170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1170]) return breakpoint(s, 13, 1170, r0);
  case 13:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 463; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    r0 = r0.fields["wallCollisionHandlers"];
    s.wallCollisionHandlers___39058 = (r0);
    s.lastBrkId = 1171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1171]) return breakpoint(s, 15, 1171, r0);
  case 15:
    r0 = pxsim_numops_toBoolDecr(s.collisionHandlers___39051);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1172]) return breakpoint(s, 16, 1172, r0);
  case 16:
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P39066);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, Sprite_registerObstacle_inline__P39072);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_3 = helpers_arrayFilter__P23481_mk(s);
    s.tmp_3.arg0 = s.collisionHandlers___39051;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 465; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 467; s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1173]) return breakpoint(s, 19, 1173, r0);
  case 19:
    r0 = pxsim_numops_toBoolDecr(s.wallCollisionHandlers___39058);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1174]) return breakpoint(s, 20, 1174, r0);
  case 20:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_1 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 468; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg3 = (s.tmp_2);
    s.lastBrkId = 1175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1175]) return breakpoint(s, 22, 1175, r0);
  case 22:
    r0 = pxsim_pxtcore_mkAction(1, wallHandlersToRun_inline__P39085);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayFilter__P23481_mk(s);
    s.tmp_1.arg0 = s.wallCollisionHandlers___39058;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 470; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.wallHandlersToRun___39083 = (r0);
    s.lastBrkId = 1176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1176]) return breakpoint(s, 24, 1176, r0);
  case 24:
    r0 = pxsim_Array__length(s.wallHandlersToRun___39083);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1177]) return breakpoint(s, 25, 1177, r0);
  case 25:
    s.tmp_1 = tiles_TileMap_getTile__P25856_mk(s);
    s.tmp_1.arg0 = s.arg3;
    s.tmp_3 = if_left_1_mk(s);
    s.tmp_3.arg0 = s.arg2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "left");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["left"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["left"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 471; s.pc = 27; return s.tmp_3; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_5.arg0 = s.arg3;
    s.callLocIdx = 472; s.pc = 28; return s.tmp_5;
  case 28:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_2 >> s.tmp_4);
    s.tmp_1.arg1 = r0;
    s.tmp_7 = if_top_1_mk(s);
    s.tmp_7.arg0 = s.arg2;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "top");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["top"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["top"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 473; s.pc = 29; return s.tmp_7; }
    }
  case 29:
    r0 = s.retval;
    s.tmp_6 = r0;
    s.tmp_9 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_9.arg0 = s.arg3;
    s.callLocIdx = 474; s.pc = 30; return s.tmp_9;
  case 30:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_6 >> s.tmp_8);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 475; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.asTileLocation___39096 = (r0);
    s.lastBrkId = 1178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1178]) return breakpoint(s, 31, 1178, r0);
  case 31:
    r0 = pxsim_pxtcore_mkAction(2, Sprite_registerObstacle_inline__P39112);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.asTileLocation___39096);
    s.tmp_1 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_1.arg0 = s.wallHandlersToRun___39083;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 477; s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle__P25589.info = {"start":28620,"length":965,"line":922,"column":4,"endLine":942,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"registerObstacle","argumentNames":["this","direction","other","tm"]}

function Sprite_registerObstacle__P25589_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle__P25589, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  collisionHandlers___39051: undefined,
  wallCollisionHandlers___39058: undefined,
  wallHandlersToRun___39083: undefined,
  asTileLocation___39096: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function forEach_inline__P39066(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P25570_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 464; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P39066.info = {"start":29018,"length":26,"line":929,"column":24,"endLine":929,"endColumn":50,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P39066_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P39066, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite_registerObstacle_inline__P39072(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 466; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 466; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 466; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 466; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle_inline__P39072.info = {"start":29071,"length":20,"line":930,"column":25,"endLine":930,"endColumn":45,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite_registerObstacle_inline__P39072_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle_inline__P39072, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function wallHandlersToRun_inline__P39085(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteKind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P25570_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 469; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
wallHandlersToRun_inline__P39085.info = {"start":29277,"length":32,"line":935,"column":24,"endLine":935,"endColumn":56,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function wallHandlersToRun_inline__P39085_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: wallHandlersToRun_inline__P39085, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite_registerObstacle_inline__P39112(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 476; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 476; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 476; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 476; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle_inline__P39112.info = {"start":29517,"length":36,"line":939,"column":29,"endLine":939,"endColumn":65,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite_registerObstacle_inline__P39112_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle_inline__P39112, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_iadd__P23529(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[213]) return breakpoint(s, 1, 213, r0);
  case 1:
    r0 = (s.arg0 << 8);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_iadd__P23529.info = {"start":634,"length":110,"line":23,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"iadd","argumentNames":["a","b"]}

function Fx_iadd__P23529_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_iadd__P23529, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_toIntShifted__P23527(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[211]) return breakpoint(s, 1, 211, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 >> s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
Fx_toIntShifted__P23527.info = {"start":404,"length":102,"line":17,"column":4,"endLine":19,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toIntShifted","argumentNames":["a","n"]}

function Fx_toIntShifted__P23527_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toIntShifted__P23527, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_sign__P23500(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[198]) return breakpoint(s, 6, 198, r0);
  case 6:
    r0 = (s.arg0 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[199]) return breakpoint(s, 7, 199, r0);
  case 7:
    r0 = 0;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[200]) return breakpoint(s, 8, 200, r0);
  case 8:
    r0 = (s.arg0 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[201]) return breakpoint(s, 9, 201, r0);
  case 9:
    r0 = 1;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[202]) return breakpoint(s, 10, 202, r0);
  case 10:
    r0 = -1;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_sign__P23500.info = {"start":16330,"length":125,"line":546,"column":4,"endLine":550,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"sign","argumentNames":["x"]}

function Math_sign__P23500_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_sign__P23500, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function helpers_arraySome__P23478(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___39120 = undefined;
    s.i___39123 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 66;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[66]) return breakpoint(s, 6, 66, r0);
  case 6:
    r0 = pxsim_Array__length(s.arg0);
    s.len___39120 = (r0);
    s.lastBrkId = 67;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[67]) return breakpoint(s, 7, 67, r0);
  case 7:
    s.i___39123 = (0);
    s.lastBrkId = 68;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[68]) return breakpoint(s, 8, 68, r0);
  case 8:
  case 1:
    s.lastBrkId = 69;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[69]) return breakpoint(s, 9, 69, r0);
  case 9:
    r0 = (s.i___39123 < s.len___39120);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 70;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[70]) return breakpoint(s, 10, 70, r0);
  case 10:
    s.tmp_2 = lambda_3_mk(s);
    s.tmp_2.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___39123);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.i___39123;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 4; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 71;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[71]) return breakpoint(s, 12, 71, r0);
  case 12:
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    s.lastBrkId = 72;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[72]) return breakpoint(s, 13, 72, r0);
  case 13:
    r0 = (s.i___39123 + 1);
    s.i___39123 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 73;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[73]) return breakpoint(s, 14, 73, r0);
  case 14:
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySome__P23478.info = {"start":6833,"length":296,"line":238,"column":4,"endLine":244,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySome","argumentNames":["arr","callbackfn"]}

function helpers_arraySome__P23478_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySome__P23478, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___39120: undefined,
  i___39123: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_isOnWall__P25865(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hbox___38331 = undefined;
    s.left___38334 = undefined;
    s.right___38340 = undefined;
    s.top___38346 = undefined;
    s.bottom___38352 = undefined;
    s.col___38358 = undefined;
    s.row___38364 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1778;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1778]) return breakpoint(s, 8, 1778, r0);
  case 8:
    r0 = s.arg1.fields["_hitbox"];
    s.hbox___38331 = (r0);
    s.lastBrkId = 1779;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1779]) return breakpoint(s, 9, 1779, r0);
  case 9:
    s.tmp_0 = Fx_toIntShifted__P23527_mk(s);
    s.tmp_1 = game_Hitbox_left__P25382_mk(s);
    s.tmp_1.arg0 = s.hbox___38331;
    s.callLocIdx = 850; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 851; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 852; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.left___38334 = (r0);
    s.lastBrkId = 1780;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1780]) return breakpoint(s, 13, 1780, r0);
  case 13:
    s.tmp_0 = Fx_toIntShifted__P23527_mk(s);
    s.tmp_1 = game_Hitbox_right__P25384_mk(s);
    s.tmp_1.arg0 = s.hbox___38331;
    s.callLocIdx = 853; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 854; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 855; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.right___38340 = (r0);
    s.lastBrkId = 1781;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1781]) return breakpoint(s, 17, 1781, r0);
  case 17:
    s.tmp_0 = Fx_toIntShifted__P23527_mk(s);
    s.tmp_1 = game_Hitbox_top__P25383_mk(s);
    s.tmp_1.arg0 = s.hbox___38331;
    s.callLocIdx = 856; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 857; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 858; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.top___38346 = (r0);
    s.lastBrkId = 1782;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1782]) return breakpoint(s, 21, 1782, r0);
  case 21:
    s.tmp_0 = Fx_toIntShifted__P23527_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_1.arg0 = s.hbox___38331;
    s.callLocIdx = 859; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 860; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 861; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.bottom___38352 = (r0);
    s.lastBrkId = 1783;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1783]) return breakpoint(s, 25, 1783, r0);
  case 25:
    s.col___38358 = (s.left___38334);
    s.lastBrkId = 1784;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1784]) return breakpoint(s, 26, 1784, r0);
  case 26:
  case 1:
    s.lastBrkId = 1785;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1785]) return breakpoint(s, 27, 1785, r0);
  case 27:
    r0 = (s.col___38358 <= s.right___38340);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1786;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1786]) return breakpoint(s, 28, 1786, r0);
  case 28:
    s.row___38364 = (s.top___38346);
    s.lastBrkId = 1787;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1787]) return breakpoint(s, 29, 1787, r0);
  case 29:
  case 2:
    s.lastBrkId = 1788;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1788]) return breakpoint(s, 30, 1788, r0);
  case 30:
    r0 = (s.row___38364 <= s.bottom___38352);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1789;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1789]) return breakpoint(s, 31, 1789, r0);
  case 31:
    s.tmp_2 = tiles_TileMap_isObstacle__P25863_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.col___38358;
    s.tmp_2.arg2 = s.row___38364;
    s.callLocIdx = 862; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1790;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1790]) return breakpoint(s, 33, 1790, r0);
  case 33:
    r0 = true;
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1791]) return breakpoint(s, 34, 1791, r0);
  case 34:
    r0 = (s.row___38364 + 1);
    s.row___38364 = (r0);
    { step = 2; continue; }
  case 5:
    s.lastBrkId = 1792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1792]) return breakpoint(s, 35, 1792, r0);
  case 35:
    r0 = (s.col___38358 + 1);
    s.col___38358 = (r0);
    { step = 1; continue; }
  case 6:
    s.lastBrkId = 1793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1793]) return breakpoint(s, 36, 1793, r0);
  case 36:
    r0 = false;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isOnWall__P25865.info = {"start":16824,"length":627,"line":533,"column":8,"endLine":550,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isOnWall","argumentNames":["this","s"]}

function tiles_TileMap_isOnWall__P25865_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isOnWall__P25865, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  hbox___38331: undefined,
  left___38334: undefined,
  right___38340: undefined,
  top___38346: undefined,
  bottom___38352: undefined,
  col___38358: undefined,
  row___38364: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function MovingSprite_constructor__P25681(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, MovingSprite__C25680_VT)) failedCast(r0);
    r0 = (s.arg0).fields["sprite"] = (s.arg1);
    r0 = (s.arg0).fields["cachedVx"] = (s.arg2);
    r0 = (s.arg0).fields["cachedVy"] = (s.arg3);
    r0 = (s.arg0).fields["dx"] = (s.arg4);
    r0 = (s.arg0).fields["dy"] = (s.arg5);
    r0 = (s.arg0).fields["xStep"] = (s.arg6);
    r0 = (s.arg0).fields["yStep"] = (s.arg7);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
MovingSprite_constructor__P25681.info = {"start":949,"length":313,"line":33,"column":4,"endLine":44,"endColumn":9,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this","sprite","cachedVx","cachedVy","dx","dy","xStep","yStep"]}

function MovingSprite_constructor__P25681_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: MovingSprite_constructor__P25681, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
} }





function ArcadePhysicsEngine_move__P25694(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dtMs___39202 = undefined;
    s.dt2___39208 = undefined;
    s.scene___39212 = undefined;
    s.tileMap___39215 = undefined;
    s.movingSprites___39218 = undefined;
    s.MAX_STEP_COUNT___39249 = undefined;
    s.overlapHandlers___39261 = undefined;
    s.selected___39268 = undefined;
    s.buffers___39269 = undefined;
    s.count___39273 = undefined;
    s.currMovers___39283 = undefined;
    s.remainingMovers___39290 = undefined;
    s.ms___39295 = undefined;
    s.unnamed374___U13 = undefined;
    s.unnamed375___U14 = undefined;
    s.s___39297 = undefined;
    s.stepX___39390 = undefined;
    s.stepY___39404 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1317]) return breakpoint(s, 47, 1317, r0);
  case 47:
    s.tmp_0 = Math_min__P23502_mk(s);
    s.tmp_0.arg0 = 100;
    r0 = (s.arg1 * 1000);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 558; s.pc = 48; return s.tmp_0;
  case 48:
    r0 = s.retval;
    s.dtMs___39202 = (r0);
    s.lastBrkId = 1318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1318]) return breakpoint(s, 49, 1318, r0);
  case 49:
    r0 = pxsim.Math_.idiv(s.dtMs___39202, 2);
    s.dt2___39208 = (r0);
    s.lastBrkId = 1319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1319]) return breakpoint(s, 50, 1319, r0);
  case 50:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 559; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
    s.scene___39212 = (r0);
    s.lastBrkId = 1320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1320]) return breakpoint(s, 52, 1320, r0);
  case 52:
    r0 = s.scene___39212.fields["tileMap"];
    s.tileMap___39215 = (r0);
    s.lastBrkId = 1321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1321]) return breakpoint(s, 53, 1321, r0);
  case 53:
    r0 = pxsim_pxtcore_mkAction(3, movingSprites_inline__P39220);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.dtMs___39202);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.dt2___39208);
    s.tmp_1 = helpers_arrayMap__P23477_mk(s);
    r0 = s.arg0.fields["sprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 561; s.pc = 54; return s.tmp_1;
  case 54:
    r0 = s.retval;
    s.movingSprites___39218 = (r0);
    s.lastBrkId = 1322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1322]) return breakpoint(s, 55, 1322, r0);
  case 55:
    s.tmp_0 = helpers_arrayForEach__P23480_mk(s);
    r0 = s.arg0.fields["sprites"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = ArcadePhysicsEngine_move_inline__P39232;
    s.callLocIdx = 565; s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    s.lastBrkId = 1325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1325]) return breakpoint(s, 57, 1325, r0);
  case 57:
    s.tmp_0 = sprites_SpriteMap_clear__P25607_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 566; s.pc = 58; return s.tmp_0;
  case 58:
    r0 = s.retval;
    s.lastBrkId = 1326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1326]) return breakpoint(s, 59, 1326, r0);
  case 59:
    s.tmp_0 = sprites_SpriteMap_resizeBuckets__P25606_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["sprites"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 567; s.pc = 60; return s.tmp_0;
  case 60:
    r0 = s.retval;
    s.lastBrkId = 1327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1327]) return breakpoint(s, 61, 1327, r0);
  case 61:
    s.tmp_0 = Fx_toInt__P23543_mk(s);
    s.tmp_1 = Fx_idiv__P23534_mk(s);
    s.tmp_2 = Fx_imul__P23532_mk(s);
    s.tmp_3 = Fx_div__P23533_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 568; s.pc = 65; return s.tmp_3;
  case 65:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.dtMs___39202;
    s.callLocIdx = 569; s.pc = 64; return s.tmp_2;
  case 64:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 570; s.pc = 63; return s.tmp_1;
  case 63:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 571; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
    s.MAX_STEP_COUNT___39249 = (r0);
    s.lastBrkId = 1328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1328]) return breakpoint(s, 66, 1328, r0);
  case 66:
    s.tmp_0 = helpers_arraySlice__P23486_mk(s);
    r0 = s.scene___39212.fields["overlapHandlers"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 572; s.pc = 67; return s.tmp_0;
  case 67:
    r0 = s.retval;
    s.overlapHandlers___39261 = (r0);
    s.lastBrkId = 1329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1329]) return breakpoint(s, 68, 1329, r0);
  case 68:
    s.selected___39268 = (0);
    s.lastBrkId = 1330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1330]) return breakpoint(s, 69, 1330, r0);
  case 69:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.movingSprites___39218);
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.buffers___39269 = (s.tmp_0);
    s.lastBrkId = 1331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1331]) return breakpoint(s, 70, 1331, r0);
  case 70:
    s.count___39273 = (0);
    s.lastBrkId = 1332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1332]) return breakpoint(s, 71, 1332, r0);
  case 71:
  case 1:
    s.lastBrkId = 1333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1333]) return breakpoint(s, 72, 1333, r0);
  case 72:
    r0 = (s.count___39273 < s.MAX_STEP_COUNT___39249);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__getAt(s.buffers___39269, s.selected___39268);
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 46; continue; }
    s.lastBrkId = 1334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1334]) return breakpoint(s, 73, 1334, r0);
  case 73:
    r0 = pxsim_Array__getAt(s.buffers___39269, s.selected___39268);
    s.currMovers___39283 = (r0);
    s.lastBrkId = 1335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1335]) return breakpoint(s, 74, 1335, r0);
  case 74:
    r0 = (s.selected___39268 ^ 1);
    s.selected___39268 = (r0);
    s.lastBrkId = 1336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1336]) return breakpoint(s, 75, 1336, r0);
  case 75:
    r0 = pxsim_Array__getAt(s.buffers___39269, s.selected___39268);
    s.remainingMovers___39290 = (r0);
    s.lastBrkId = 1337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1337]) return breakpoint(s, 76, 1337, r0);
  case 76:
    s.ms___39295 = (undefined);
    s.unnamed374___U13 = (s.currMovers___39283);
    s.unnamed375___U14 = (0);
    s.lastBrkId = 1338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1338]) return breakpoint(s, 77, 1338, r0);
  case 77:
  case 4:
    s.tmp_0 = r0 = s.unnamed375___U14;
    r0 = pxsim_Array__length(s.unnamed374___U13);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 43; continue; }
    r0 = pxsim_Array__getAt(s.unnamed374___U13, s.unnamed375___U14);
    s.ms___39295 = (r0);
    s.lastBrkId = 1339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1339]) return breakpoint(s, 78, 1339, r0);
  case 78:
    r0 = s.ms___39295.fields["sprite"];
    s.s___39297 = (r0);
    s.lastBrkId = 1340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1340]) return breakpoint(s, 79, 1340, r0);
  case 79:
    r0 = s.ms___39295.fields["cachedVx"];
    s.tmp_1 = r0;
    r0 = s.s___39297.fields["_vx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1341]) return breakpoint(s, 80, 1341, r0);
  case 80:
    r0 = s.s___39297.fields["_vx"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1342]) return breakpoint(s, 81, 1342, r0);
  case 81:
    r0 = (s.ms___39295).fields["dx"] = (0);
    { step = 14; continue; }
  case 5:
    s.lastBrkId = 1343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1343]) return breakpoint(s, 82, 1343, r0);
  case 82:
    r0 = s.s___39297.fields["_vx"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = s.ms___39295.fields["cachedVx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 7:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 8; continue; }
    r0 = s.tmp_3;
    { step = 11; continue; }
  case 8:
    r0 = s.s___39297.fields["_vx"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_4;
    { step = 10; continue; }
  case 9:
    r0 = s.ms___39295.fields["cachedVx"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
  case 10:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 11:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1344]) return breakpoint(s, 83, 1344, r0);
  case 83:
    s.tmp_9 = r0 = s.ms___39295;
    s.tmp_11 = Fx_neg__P23526_mk(s);
    r0 = s.ms___39295.fields["dx"];
    s.tmp_11.arg0 = r0;
    s.callLocIdx = 573; s.pc = 84; return s.tmp_11;
  case 84:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9).fields["dx"] = (s.tmp_10);
    s.lastBrkId = 1345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1345]) return breakpoint(s, 85, 1345, r0);
  case 85:
    s.tmp_0 = r0 = s.ms___39295;
    s.tmp_2 = Fx_neg__P23526_mk(s);
    r0 = s.ms___39295.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 574; s.pc = 86; return s.tmp_2;
  case 86:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["xStep"] = (s.tmp_1);
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 1346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1346]) return breakpoint(s, 87, 1346, r0);
  case 87:
    r0 = s.s___39297.fields["_vx"];
    s.tmp_0 = r0;
    r0 = (s.ms___39295).fields["cachedVx"] = (s.tmp_0);
  case 15:
  case 16:
    s.lastBrkId = 1347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1347]) return breakpoint(s, 88, 1347, r0);
  case 88:
    r0 = s.ms___39295.fields["cachedVy"];
    s.tmp_1 = r0;
    r0 = s.s___39297.fields["_vy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    s.lastBrkId = 1348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1348]) return breakpoint(s, 89, 1348, r0);
  case 89:
    r0 = s.s___39297.fields["_vy"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1349]) return breakpoint(s, 90, 1349, r0);
  case 90:
    r0 = (s.ms___39295).fields["dy"] = (0);
    { step = 26; continue; }
  case 17:
    s.lastBrkId = 1350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1350]) return breakpoint(s, 91, 1350, r0);
  case 91:
    r0 = s.s___39297.fields["_vy"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    r0 = s.ms___39295.fields["cachedVy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 19:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 20; continue; }
    r0 = s.tmp_3;
    { step = 23; continue; }
  case 20:
    r0 = s.s___39297.fields["_vy"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 21; continue; }
    r0 = s.tmp_4;
    { step = 22; continue; }
  case 21:
    r0 = s.ms___39295.fields["cachedVy"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
  case 22:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 23:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1351]) return breakpoint(s, 92, 1351, r0);
  case 92:
    s.tmp_9 = r0 = s.ms___39295;
    s.tmp_11 = Fx_neg__P23526_mk(s);
    r0 = s.ms___39295.fields["dy"];
    s.tmp_11.arg0 = r0;
    s.callLocIdx = 575; s.pc = 93; return s.tmp_11;
  case 93:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9).fields["dy"] = (s.tmp_10);
    s.lastBrkId = 1352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1352]) return breakpoint(s, 94, 1352, r0);
  case 94:
    s.tmp_0 = r0 = s.ms___39295;
    s.tmp_2 = Fx_neg__P23526_mk(s);
    r0 = s.ms___39295.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 576; s.pc = 95; return s.tmp_2;
  case 95:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["yStep"] = (s.tmp_1);
  case 24:
  case 25:
  case 26:
    s.lastBrkId = 1353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1353]) return breakpoint(s, 96, 1353, r0);
  case 96:
    r0 = s.s___39297.fields["_vy"];
    s.tmp_0 = r0;
    r0 = (s.ms___39295).fields["cachedVy"] = (s.tmp_0);
  case 27:
  case 28:
    s.lastBrkId = 1354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1354]) return breakpoint(s, 97, 1354, r0);
  case 97:
    s.tmp_2 = Fx_abs__P23536_mk(s);
    r0 = s.ms___39295.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 577; s.pc = 98; return s.tmp_2;
  case 98:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_abs__P23536_mk(s);
    r0 = s.ms___39295.fields["dx"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 578; s.pc = 99; return s.tmp_4;
  case 99:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 29; continue; }
    r0 = s.ms___39295.fields["dx"];
    { step = 30; continue; }
  case 29:
    r0 = s.ms___39295.fields["xStep"];
  case 30:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.stepX___39390 = (s.tmp_5);
    s.lastBrkId = 1355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1355]) return breakpoint(s, 100, 1355, r0);
  case 100:
    s.tmp_2 = Fx_abs__P23536_mk(s);
    r0 = s.ms___39295.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 579; s.pc = 101; return s.tmp_2;
  case 101:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_abs__P23536_mk(s);
    r0 = s.ms___39295.fields["dy"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 580; s.pc = 102; return s.tmp_4;
  case 102:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    r0 = s.ms___39295.fields["dy"];
    { step = 32; continue; }
  case 31:
    r0 = s.ms___39295.fields["yStep"];
  case 32:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.stepY___39404 = (s.tmp_5);
    s.lastBrkId = 1356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1356]) return breakpoint(s, 103, 1356, r0);
  case 103:
    s.tmp_0 = r0 = s.ms___39295;
    s.tmp_2 = Fx_sub__P23530_mk(s);
    r0 = s.ms___39295.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepX___39390;
    s.callLocIdx = 581; s.pc = 104; return s.tmp_2;
  case 104:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dx"] = (s.tmp_1);
    s.lastBrkId = 1357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1357]) return breakpoint(s, 105, 1357, r0);
  case 105:
    s.tmp_0 = r0 = s.ms___39295;
    s.tmp_2 = Fx_sub__P23530_mk(s);
    r0 = s.ms___39295.fields["dy"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepY___39404;
    s.callLocIdx = 582; s.pc = 106; return s.tmp_2;
  case 106:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dy"] = (s.tmp_1);
    s.lastBrkId = 1358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1358]) return breakpoint(s, 107, 1358, r0);
  case 107:
    r0 = s.s___39297.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.s___39297).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1359]) return breakpoint(s, 108, 1359, r0);
  case 108:
    r0 = s.s___39297.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.s___39297).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1360]) return breakpoint(s, 109, 1360, r0);
  case 109:
    s.tmp_0 = r0 = s.s___39297;
    s.tmp_2 = Fx_add__P23528_mk(s);
    r0 = s.s___39297.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepX___39390;
    s.callLocIdx = 583; s.pc = 110; return s.tmp_2;
  case 110:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1361]) return breakpoint(s, 111, 1361, r0);
  case 111:
    s.tmp_0 = r0 = s.s___39297;
    s.tmp_2 = Fx_add__P23528_mk(s);
    r0 = s.s___39297.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepY___39404;
    s.callLocIdx = 584; s.pc = 112; return s.tmp_2;
  case 112:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1362]) return breakpoint(s, 113, 1362, r0);
  case 113:
    r0 = s.s___39297.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 33; continue; }
    s.lastBrkId = 1363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1363]) return breakpoint(s, 114, 1363, r0);
  case 114:
    s.tmp_4 = sprites_SpriteMap_insertAABB__P25608_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.s___39297;
    s.callLocIdx = 585; s.pc = 115; return s.tmp_4;
  case 115:
    r0 = s.retval;
  case 33:
  case 34:
    s.lastBrkId = 1364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1364]) return breakpoint(s, 116, 1364, r0);
  case 116:
    s.tmp_0 = r0 = s.tileMap___39215;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 35; continue; }
    r0 = s.tmp_0;
    { step = 36; continue; }
  case 35:
    s.tmp_1 = tiles_TileMap_enabled__P25854_mk(s);
    s.tmp_1.arg0 = s.tileMap___39215;
    s.callLocIdx = 586; s.pc = 117; return s.tmp_1;
  case 117:
    r0 = s.retval;
  case 36:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 37; continue; }
    s.lastBrkId = 1365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1365]) return breakpoint(s, 118, 1365, r0);
  case 118:
    s.tmp_3 = ArcadePhysicsEngine_tilemapCollisions__P27714_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.ms___39295;
    s.tmp_3.arg2 = s.tileMap___39215;
    s.callLocIdx = 587; s.pc = 119; return s.tmp_3;
  case 119:
    r0 = s.retval;
  case 37:
  case 38:
    s.lastBrkId = 1366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1366]) return breakpoint(s, 120, 1366, r0);
  case 120:
    s.tmp_2 = Fx_abs__P23536_mk(s);
    r0 = s.ms___39295.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 588; s.pc = 121; return s.tmp_2;
  case 121:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > globals.MIN_MOVE_GAP___25676);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 39; continue; }
    r0 = s.tmp_0;
    { step = 40; continue; }
  case 39:
    s.tmp_4 = Fx_abs__P23536_mk(s);
    r0 = s.ms___39295.fields["dy"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 589; s.pc = 122; return s.tmp_4;
  case 122:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > globals.MIN_MOVE_GAP___25676);
  case 40:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 41; continue; }
    s.lastBrkId = 1367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1367]) return breakpoint(s, 123, 1367, r0);
  case 123:
    r0 = pxsim_Array__push(s.remainingMovers___39290, s.ms___39295);
  case 41:
  case 42:
    r0 = (s.unnamed375___U14 + 1);
    s.unnamed375___U14 = (r0);
    { step = 4; continue; }
  case 43:
    s.unnamed374___U13 = (undefined);
    s.lastBrkId = 1368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1368]) return breakpoint(s, 124, 1368, r0);
  case 124:
    s.tmp_0 = ArcadePhysicsEngine_spriteCollisions__P27713_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.currMovers___39283;
    s.tmp_0.arg2 = s.overlapHandlers___39261;
    s.callLocIdx = 590; s.pc = 125; return s.tmp_0;
  case 125:
    r0 = s.retval;
    s.lastBrkId = 1369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1369]) return breakpoint(s, 126, 1369, r0);
  case 126:
  case 44:
    s.lastBrkId = 1370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1370]) return breakpoint(s, 127, 1370, r0);
  case 127:
    r0 = pxsim_Array__length(s.currMovers___39283);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 45; continue; }
    s.lastBrkId = 1371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1371]) return breakpoint(s, 128, 1371, r0);
  case 128:
    r0 = pxsim_Array_.pop(s.currMovers___39283);
    { step = 44; continue; }
  case 45:
    s.lastBrkId = 1372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1372]) return breakpoint(s, 129, 1372, r0);
  case 129:
    r0 = (s.count___39273 + 1);
    s.count___39273 = (r0);
    { step = 1; continue; }
  case 46:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_move__P25694.info = {"start":2822,"length":3809,"line":112,"column":4,"endLine":208,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"move","argumentNames":["this","dt"]}

function ArcadePhysicsEngine_move__P25694_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_move__P25694, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  dtMs___39202: undefined,
  dt2___39208: undefined,
  scene___39212: undefined,
  tileMap___39215: undefined,
  movingSprites___39218: undefined,
  MAX_STEP_COUNT___39249: undefined,
  overlapHandlers___39261: undefined,
  selected___39268: undefined,
  buffers___39269: undefined,
  count___39273: undefined,
  currMovers___39283: undefined,
  remainingMovers___39290: undefined,
  ms___39295: undefined,
  unnamed374___U13: undefined,
  unnamed375___U14: undefined,
  s___39297: undefined,
  stepX___39390: undefined,
  stepY___39404: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function movingSprites_inline__P39220(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = ArcadePhysicsEngine_createMovingSprite__P27712_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.caps[1];
    s.tmp_0.arg3 = s.caps[2];
    s.callLocIdx = 560; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
movingSprites_inline__P39220.info = {"start":3181,"length":52,"line":121,"column":17,"endLine":121,"endColumn":69,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["sprite"]}

function movingSprites_inline__P39220_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: movingSprites_inline__P39220, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_move_inline__P39232(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1323]) return breakpoint(s, 5, 1323, r0);
  case 5:
    s.tmp_1 = Sprite_vx__P25521_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 562; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Sprite_vy__P25523_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 563; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1324]) return breakpoint(s, 8, 1324, r0);
  case 8:
    s.tmp_4 = Sprite_clearObstacles__P25588_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 564; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_move_inline__P39232.info = {"start":3316,"length":66,"line":124,"column":29,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["s"]}

function ArcadePhysicsEngine_move_inline__P39232_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_move_inline__P39232, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions__P27713(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ms___39505 = undefined;
    s.unnamed376___U1 = undefined;
    s.unnamed377___U2 = undefined;
    s.sprite___39507 = undefined;
    s.overSprites___39514 = undefined;
    s.overlapper___39522 = undefined;
    s.unnamed378___U6 = undefined;
    s.unnamed379___U7 = undefined;
    s.thisKind___39528 = undefined;
    s.otherKind___39532 = undefined;
    s.higher___39545 = undefined;
    s.lower___39554 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1410]) return breakpoint(s, 22, 1410, r0);
  case 22:
    s.lastBrkId = 1411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1411]) return breakpoint(s, 23, 1411, r0);
  case 23:
    r0 = pxsim_Array__length(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1412]) return breakpoint(s, 24, 1412, r0);
  case 24:
    { step = 21; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1413]) return breakpoint(s, 25, 1413, r0);
  case 25:
    s.ms___39505 = (undefined);
    s.unnamed376___U1 = (s.arg1);
    s.unnamed377___U2 = (0);
    s.lastBrkId = 1414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1414]) return breakpoint(s, 26, 1414, r0);
  case 26:
  case 3:
    s.tmp_0 = r0 = s.unnamed377___U2;
    r0 = pxsim_Array__length(s.unnamed376___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 20; continue; }
    r0 = pxsim_Array__getAt(s.unnamed376___U1, s.unnamed377___U2);
    s.ms___39505 = (r0);
    s.lastBrkId = 1415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1415]) return breakpoint(s, 27, 1415, r0);
  case 27:
    r0 = s.ms___39505.fields["sprite"];
    s.sprite___39507 = (r0);
    s.lastBrkId = 1416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1416]) return breakpoint(s, 28, 1416, r0);
  case 28:
    r0 = s.sprite___39507.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4610);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1417]) return breakpoint(s, 29, 1417, r0);
  case 29:
    { step = 19; continue; }
  case 4:
  case 5:
    s.lastBrkId = 1418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1418]) return breakpoint(s, 30, 1418, r0);
  case 30:
    s.tmp_2 = sprites_SpriteMap_overlaps__P25604_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_2.arg0 = r0;
    r0 = s.ms___39505.fields["sprite"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 628; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.overSprites___39514 = (r0);
    s.lastBrkId = 1419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1419]) return breakpoint(s, 32, 1419, r0);
  case 32:
    s.overlapper___39522 = (undefined);
    s.unnamed378___U6 = (s.overSprites___39514);
    s.unnamed379___U7 = (0);
    s.lastBrkId = 1420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1420]) return breakpoint(s, 33, 1420, r0);
  case 33:
  case 6:
    s.tmp_0 = r0 = s.unnamed379___U7;
    r0 = pxsim_Array__length(s.unnamed378___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 18; continue; }
    r0 = pxsim_Array__getAt(s.unnamed378___U6, s.unnamed379___U7);
    s.overlapper___39522 = (r0);
    s.lastBrkId = 1421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1421]) return breakpoint(s, 34, 1421, r0);
  case 34:
    r0 = s.overlapper___39522.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1422]) return breakpoint(s, 35, 1422, r0);
  case 35:
    { step = 17; continue; }
  case 7:
  case 8:
    s.lastBrkId = 1423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1423]) return breakpoint(s, 36, 1423, r0);
  case 36:
    s.tmp_4 = Sprite_kind__P25570_mk(s);
    s.tmp_4.arg0 = s.sprite___39507;
    s.callLocIdx = 629; s.pc = 37; return s.tmp_4;
  case 37:
    r0 = s.retval;
    s.thisKind___39528 = (r0);
    s.lastBrkId = 1424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1424]) return breakpoint(s, 38, 1424, r0);
  case 38:
    s.tmp_0 = Sprite_kind__P25570_mk(s);
    s.tmp_0.arg0 = s.overlapper___39522;
    s.callLocIdx = 630; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.otherKind___39532 = (r0);
    s.lastBrkId = 1425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1425]) return breakpoint(s, 40, 1425, r0);
  case 40:
    r0 = s.sprite___39507.fields["_kindsOverlappedWith"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_2, s.otherKind___39532, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1426]) return breakpoint(s, 41, 1426, r0);
  case 41:
    { step = 17; continue; }
  case 9:
  case 10:
    s.lastBrkId = 1427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1427]) return breakpoint(s, 42, 1427, r0);
  case 42:
    r0 = s.sprite___39507.fields["id"];
    s.tmp_4 = r0;
    r0 = s.overlapper___39522.fields["id"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 > s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 11; continue; }
    r0 = s.sprite___39507;
    { step = 12; continue; }
  case 11:
    r0 = s.overlapper___39522;
  case 12:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    s.higher___39545 = (s.tmp_6);
    s.lastBrkId = 1428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1428]) return breakpoint(s, 43, 1428, r0);
  case 43:
    r0 = (s.higher___39545 === s.sprite___39507);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    r0 = s.overlapper___39522;
    { step = 14; continue; }
  case 13:
    r0 = s.sprite___39507;
  case 14:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.lower___39554 = (s.tmp_1);
    s.lastBrkId = 1429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1429]) return breakpoint(s, 44, 1429, r0);
  case 44:
    r0 = s.higher___39545.fields["_overlappers"];
    s.tmp_2 = r0;
    r0 = s.lower___39554.fields["id"];
    s.tmp_3 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_2, s.tmp_3, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1430]) return breakpoint(s, 45, 1430, r0);
  case 45:
    r0 = pxsim_pxtcore_mkAction(2, forEach_inline__P39574);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 0, s.thisKind___39528);
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 1, s.otherKind___39532);
    r0 = pxsim_pxtcore_mkAction(5, ArcadePhysicsEngine_spriteCollisions_inline__P39598);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 0, s.higher___39545);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 1, s.lower___39554);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 2, s.sprite___39507);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 3, s.overlapper___39522);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 4, s.thisKind___39528);
    s.tmp_6 = helpers_arrayForEach__P23480_mk(s);
    s.tmp_7 = helpers_arrayFilter__P23481_mk(s);
    s.tmp_7.arg0 = s.arg2;
    s.tmp_7.arg1 = s.tmp_4;
    s.callLocIdx = 631; s.pc = 47; return s.tmp_7;
  case 47:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    s.callLocIdx = 633; s.pc = 46; return s.tmp_6;
  case 46:
    r0 = s.retval;
  case 15:
  case 16:
  case 17:
    r0 = (s.unnamed379___U7 + 1);
    s.unnamed379___U7 = (r0);
    { step = 6; continue; }
  case 18:
    s.unnamed378___U6 = (undefined);
  case 19:
    r0 = (s.unnamed377___U2 + 1);
    s.unnamed377___U2 = (r0);
    { step = 3; continue; }
  case 20:
    s.unnamed376___U1 = (undefined);
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions__P27713.info = {"start":9448,"length":2268,"line":302,"column":4,"endLine":346,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"spriteCollisions","argumentNames":["this","movedSprites","handlers"]}

function ArcadePhysicsEngine_spriteCollisions__P27713_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions__P27713, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  ms___39505: undefined,
  unnamed376___U1: undefined,
  unnamed377___U2: undefined,
  sprite___39507: undefined,
  overSprites___39514: undefined,
  overlapper___39522: undefined,
  unnamed378___U6: undefined,
  unnamed379___U7: undefined,
  thisKind___39528: undefined,
  otherKind___39532: undefined,
  higher___39545: undefined,
  lower___39554: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function forEach_inline__P39574(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["otherKind"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === s.caps[1]);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 3:
    r0 = s.arg0.fields["kind"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 === s.caps[1]);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_4;
    { step = 5; continue; }
  case 4:
    r0 = s.arg0.fields["otherKind"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 === s.caps[0]);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.tmp_8;
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P39574.info = {"start":10817,"length":137,"line":328,"column":32,"endLine":329,"endColumn":81,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P39574_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P39574, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions_inline__P39598(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1431]) return breakpoint(s, 1, 1431, r0);
  case 1:
    r0 = s.caps[0].fields["_overlappers"];
    s.tmp_0 = r0;
    r0 = s.caps[1].fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 1432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1432]) return breakpoint(s, 2, 1432, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(6, ArcadePhysicsEngine_spriteCollisions_inline__P39608);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.caps[2]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.caps[3]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.caps[4]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.caps[0]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 5, s.caps[1]);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions_inline__P39598.info = {"start":11014,"length":652,"line":331,"column":33,"endLine":342,"endColumn":25,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function ArcadePhysicsEngine_spriteCollisions_inline__P39598_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions_inline__P39598, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions_inline__P39608(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1433]) return breakpoint(s, 7, 1433, r0);
  case 7:
    r0 = s.caps[0].fields["flags"];
    s.tmp_4 = r0;
    r0 = s.caps[1].fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 | s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1434]) return breakpoint(s, 8, 1434, r0);
  case 8:
    r0 = s.caps[2].fields["kind"];
    s.tmp_7 = r0;
    r0 = (s.caps[3] === s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 1; continue; }
    r0 = s.caps[0];
    { step = 2; continue; }
  case 1:
    r0 = s.caps[1];
  case 2:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.caps[2].fields["kind"];
    s.tmp_10 = r0;
    r0 = (s.caps[3] === s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    if (!r0) { step = 3; continue; }
    r0 = s.caps[1];
    { step = 4; continue; }
  case 3:
    r0 = s.caps[0];
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    s.tmp_12 = if_handler_3_mk(s);
    s.tmp_12.arg0 = s.caps[2];
    s.tmp_12.arg1 = s.tmp_8;
    s.tmp_12.arg2 = s.tmp_11;
    if (!s.tmp_12.arg0.vtable.iface) {
      setupLambda(s.tmp_12, pxsim_pxtrt.mapGetByString(s.tmp_12.arg0, "handler"), 3);
      s.callLocIdx = 632; s.pc = 9; return s.tmp_12;
    } else {
      s.tmp_12.fn = s.tmp_12.arg0.vtable.iface["handler"];
      if (s.tmp_12.fn == null) { setupLambda(s.tmp_12, s.tmp_12.arg0.fields["handler"], 3); s.callLocIdx = 632; s.pc = 9; return s.tmp_12; }
      else if (s.tmp_12.fn.isGetter) { s.tmp_12.stage2Call = true; s.callLocIdx = 632; s.pc = 9; return s.tmp_12;; }
     else { s.callLocIdx = 632; s.pc = 9; return s.tmp_12; }
    }
  case 9:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1435]) return breakpoint(s, 10, 1435, r0);
  case 10:
    r0 = s.caps[4].fields["_overlappers"];
    s.tmp_0 = r0;
    r0 = s.caps[5].fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions_inline__P39608.info = {"start":11135,"length":503,"line":333,"column":50,"endLine":341,"endColumn":29,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":[]}

function ArcadePhysicsEngine_spriteCollisions_inline__P39608_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions_inline__P39608, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
} }





function sprites_SpriteMap_overlaps__P25604(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___39642 = undefined;
    s.o___39646 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1204]) return breakpoint(s, 1, 1204, r0);
  case 1:
    s.tmp_0 = sprites_SpriteMap_neighbors__P25603_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 506; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.n___39642 = (r0);
    s.lastBrkId = 1205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1205]) return breakpoint(s, 3, 1205, r0);
  case 3:
    r0 = pxsim_pxtcore_mkAction(1, o_inline__P39648);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayFilter__P23481_mk(s);
    s.tmp_1.arg0 = s.n___39642;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 508; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.o___39646 = (r0);
    s.lastBrkId = 1206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1206]) return breakpoint(s, 5, 1206, r0);
  case 5:
    r0 = s.o___39646;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_overlaps__P25604.info = {"start":923,"length":189,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"overlaps","argumentNames":["this","sprite"]}

function sprites_SpriteMap_overlaps__P25604_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_overlaps__P25604, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  n___39642: undefined,
  o___39646: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function o_inline__P39648(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_overlapsWith__P25583_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 507; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
o_inline__P39648.info = {"start":1037,"length":41,"line":32,"column":31,"endLine":32,"endColumn":72,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["neighbor"]}

function o_inline__P39648_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: o_inline__P39648, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_neighbors__P25603(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___39896 = undefined;
    s.layer___39898 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1196]) return breakpoint(s, 1, 1196, r0);
  case 1:
    r0 = pxsim_Array__mk();
    s.n___39896 = (r0);
    s.lastBrkId = 1197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1197]) return breakpoint(s, 2, 1197, r0);
  case 2:
    r0 = s.arg1.fields["layer"];
    s.layer___39898 = (r0);
    s.lastBrkId = 1198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1198]) return breakpoint(s, 3, 1198, r0);
  case 3:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P27677_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_left__P25562_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 494; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_top__P25566_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 495; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___39898;
    s.tmp_0.arg4 = s.n___39896;
    s.callLocIdx = 496; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 1199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1199]) return breakpoint(s, 7, 1199, r0);
  case 7:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P27677_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_left__P25562_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 497; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_bottom__P25568_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 498; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___39898;
    s.tmp_0.arg4 = s.n___39896;
    s.callLocIdx = 499; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 1200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1200]) return breakpoint(s, 11, 1200, r0);
  case 11:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P27677_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_right__P25564_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 500; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_top__P25566_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 501; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___39898;
    s.tmp_0.arg4 = s.n___39896;
    s.callLocIdx = 502; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 1201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1201]) return breakpoint(s, 15, 1201, r0);
  case 15:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P27677_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_right__P25564_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 503; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_bottom__P25568_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 504; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___39898;
    s.tmp_0.arg4 = s.n___39896;
    s.callLocIdx = 505; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 1202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1202]) return breakpoint(s, 19, 1202, r0);
  case 19:
    r0 = pxsim_Array_.removeElement(s.n___39896, s.arg1);
    s.lastBrkId = 1203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1203]) return breakpoint(s, 20, 1203, r0);
  case 20:
    r0 = s.n___39896;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_neighbors__P25603.info = {"start":376,"length":442,"line":15,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"neighbors","argumentNames":["this","sprite"]}

function sprites_SpriteMap_neighbors__P25603_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_neighbors__P25603, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  n___39896: undefined,
  layer___39898: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_mergeAtKey__P27677(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.k___39947 = undefined;
    s.bucket___39952 = undefined;
    s.sprite___39959 = undefined;
    s.unnamed372___U3 = undefined;
    s.unnamed373___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1259]) return breakpoint(s, 9, 1259, r0);
  case 9:
    s.tmp_0 = sprites_SpriteMap_key__P27675_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 532; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.k___39947 = (r0);
    s.lastBrkId = 1260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1260]) return breakpoint(s, 11, 1260, r0);
  case 11:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___39947);
    s.bucket___39952 = (r0);
    s.lastBrkId = 1261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1261]) return breakpoint(s, 12, 1261, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.bucket___39952);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1262]) return breakpoint(s, 13, 1262, r0);
  case 13:
    s.sprite___39959 = (undefined);
    s.unnamed372___U3 = (s.bucket___39952);
    s.unnamed373___U4 = (0);
    s.lastBrkId = 1263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1263]) return breakpoint(s, 14, 1263, r0);
  case 14:
  case 1:
    s.tmp_0 = r0 = s.unnamed373___U4;
    r0 = pxsim_Array__length(s.unnamed372___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed372___U3, s.unnamed373___U4);
    s.sprite___39959 = (r0);
    s.lastBrkId = 1264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1264]) return breakpoint(s, 15, 1264, r0);
  case 15:
    r0 = s.sprite___39959.fields["layer"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & s.arg3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array_.indexOf(s.arg4, s.sprite___39959, undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 < 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1265]) return breakpoint(s, 16, 1265, r0);
  case 16:
    r0 = pxsim_Array__push(s.arg4, s.sprite___39959);
  case 4:
  case 5:
    r0 = (s.unnamed373___U4 + 1);
    s.unnamed373___U4 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed372___U3 = (undefined);
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_mergeAtKey__P27677.info = {"start":3715,"length":384,"line":101,"column":8,"endLine":110,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"mergeAtKey","argumentNames":["this","x","y","layer","n"]}

function sprites_SpriteMap_mergeAtKey__P27677_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_mergeAtKey__P27677, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  k___39947: undefined,
  bucket___39952: undefined,
  sprite___39959: undefined,
  unnamed372___U3: undefined,
  unnamed373___U4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function sprites_SpriteMap_key__P27675(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.xi___39980 = undefined;
    s.yi___39992 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1237]) return breakpoint(s, 1, 1237, r0);
  case 1:
    s.tmp_0 = Math_clamp__P23498_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg0.fields["columnCount"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg1, s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 520; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.xi___39980 = (r0);
    s.lastBrkId = 1238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1238]) return breakpoint(s, 3, 1238, r0);
  case 3:
    s.tmp_0 = Math_clamp__P23498_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg0.fields["rowCount"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg2, s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 521; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.yi___39992 = (r0);
    s.lastBrkId = 1239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1239]) return breakpoint(s, 5, 1239, r0);
  case 5:
    s.tmp_0 = r0 = s.xi___39980;
    r0 = s.arg0.fields["columnCount"];
    s.tmp_2 = r0;
    r0 = (s.yi___39992 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_key__P27675.info = {"start":2592,"length":270,"line":76,"column":8,"endLine":80,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"key","argumentNames":["this","x","y"]}

function sprites_SpriteMap_key__P27675_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_key__P27675, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  xi___39980: undefined,
  yi___39992: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_bottom__P25568(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1066]) return breakpoint(s, 1, 1066, r0);
  case 1:
    s.tmp_1 = Sprite_top__P25566_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 359; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_height__P25561_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 360; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_bottom__P25568.info = {"start":13153,"length":59,"line":468,"column":4,"endLine":470,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"bottom","argumentNames":["this"]}
Sprite_bottom__P25568.isGetter = true;

function Sprite_bottom__P25568_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_bottom__P25568, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Sprite_right__P25564(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1061]) return breakpoint(s, 1, 1061, r0);
  case 1:
    s.tmp_1 = Sprite_left__P25562_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 351; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_width__P25560_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 352; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_right__P25564.info = {"start":12319,"length":57,"line":438,"column":4,"endLine":440,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"right","argumentNames":["this"]}
Sprite_right__P25564.isGetter = true;

function Sprite_right__P25564_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_right__P25564, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Sprite_overlapsWith__P25583(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.A___39712 = undefined;
    s.B___39713 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1148]) return breakpoint(s, 24, 1148, r0);
  case 24:
    s.lastBrkId = 1149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1149]) return breakpoint(s, 25, 1149, r0);
  case 25:
    r0 = (s.arg1 == s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1150]) return breakpoint(s, 26, 1150, r0);
  case 26:
    r0 = false;
    { step = 23; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1151]) return breakpoint(s, 27, 1151, r0);
  case 27:
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 4610);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1152]) return breakpoint(s, 28, 1152, r0);
  case 28:
    r0 = false;
    { step = 23; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1153]) return breakpoint(s, 29, 1153, r0);
  case 29:
    r0 = s.arg1.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 4610);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1154]) return breakpoint(s, 30, 1154, r0);
  case 30:
    r0 = false;
    { step = 23; continue; }
  case 5:
  case 6:
    s.lastBrkId = 1155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1155]) return breakpoint(s, 31, 1155, r0);
  case 31:
    s.tmp_8 = game_Hitbox_overlapsWith__P25388_mk(s);
    r0 = s.arg1.fields["_hitbox"];
    s.tmp_8.arg0 = r0;
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_8.arg1 = r0;
    s.callLocIdx = 431; s.pc = 32; return s.tmp_8;
  case 32:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1156]) return breakpoint(s, 33, 1156, r0);
  case 33:
    r0 = false;
    { step = 23; continue; }
  case 7:
  case 8:
    s.lastBrkId = 1157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1157]) return breakpoint(s, 34, 1157, r0);
  case 34:
    s.tmp_12 = Sprite_isScaled__P27674_mk(s);
    s.tmp_12.arg0 = s.arg0;
    s.callLocIdx = 432; s.pc = 35; return s.tmp_12;
  case 35:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_11);
    s.tmp_10 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_9;
    { step = 10; continue; }
  case 9:
    s.tmp_15 = Sprite_isScaled__P27674_mk(s);
    s.tmp_15.arg0 = s.arg1;
    s.callLocIdx = 433; s.pc = 36; return s.tmp_15;
  case 36:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_14);
    s.tmp_13 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_13);
  case 10:
    // jmp value (already in r0)
    s.tmp_16 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_16);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1158]) return breakpoint(s, 37, 1158, r0);
  case 37:
    r0 = s.arg1.fields["_image"];
    s.tmp_17 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_18 = r0;
    s.tmp_21 = Sprite_left__P25562_mk(s);
    s.tmp_21.arg0 = s.arg0;
    s.callLocIdx = 434; s.pc = 38; return s.tmp_21;
  case 38:
    r0 = s.retval;
    s.tmp_20 = r0;
    s.tmp_23 = Sprite_left__P25562_mk(s);
    s.tmp_23.arg0 = s.arg1;
    s.callLocIdx = 435; s.pc = 39; return s.tmp_23;
  case 39:
    r0 = s.retval;
    s.tmp_22 = r0;
    r0 = (s.tmp_20 - s.tmp_22);
    s.tmp_19 = r0;
    s.tmp_26 = Sprite_top__P25566_mk(s);
    s.tmp_26.arg0 = s.arg0;
    s.callLocIdx = 436; s.pc = 40; return s.tmp_26;
  case 40:
    r0 = s.retval;
    s.tmp_25 = r0;
    s.tmp_28 = Sprite_top__P25566_mk(s);
    s.tmp_28.arg0 = s.arg1;
    s.callLocIdx = 437; s.pc = 41; return s.tmp_28;
  case 41:
    r0 = s.retval;
    s.tmp_27 = r0;
    r0 = (s.tmp_25 - s.tmp_27);
    s.tmp_24 = r0;
    r0 = pxsim_ImageMethods.overlapsWith(s.tmp_17, s.tmp_18, s.tmp_19, s.tmp_24);
    { step = 23; continue; }
    { step = 22; continue; }
  case 11:
    s.lastBrkId = 1159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1159]) return breakpoint(s, 42, 1159, r0);
  case 42:
    s.tmp_31 = Sprite_sx__P25533_mk(s);
    s.tmp_31.arg0 = s.arg0;
    s.callLocIdx = 438; s.pc = 43; return s.tmp_31;
  case 43:
    r0 = s.retval;
    s.tmp_30 = r0;
    r0 = (s.tmp_30 == 0);
    s.tmp_29 = r0;
    r0 = pxsim_numops_toBool(s.tmp_29);
    if (!r0) { step = 12; continue; }
    r0 = s.tmp_29;
    { step = 13; continue; }
  case 12:
    s.tmp_33 = Sprite_sy__P25535_mk(s);
    s.tmp_33.arg0 = s.arg0;
    s.callLocIdx = 439; s.pc = 44; return s.tmp_33;
  case 44:
    r0 = s.retval;
    s.tmp_32 = r0;
    r0 = (s.tmp_32 == 0);
  case 13:
    // jmp value (already in r0)
    s.tmp_34 = r0;
    r0 = pxsim_numops_toBool(s.tmp_34);
    if (!r0) { step = 14; continue; }
    r0 = s.tmp_34;
    { step = 15; continue; }
  case 14:
    s.tmp_36 = Sprite_sx__P25533_mk(s);
    s.tmp_36.arg0 = s.arg1;
    s.callLocIdx = 440; s.pc = 45; return s.tmp_36;
  case 45:
    r0 = s.retval;
    s.tmp_35 = r0;
    r0 = (s.tmp_35 == 0);
  case 15:
    // jmp value (already in r0)
    s.tmp_37 = r0;
    r0 = pxsim_numops_toBool(s.tmp_37);
    if (!r0) { step = 16; continue; }
    r0 = s.tmp_37;
    { step = 17; continue; }
  case 16:
    s.tmp_39 = Sprite_sy__P25535_mk(s);
    s.tmp_39.arg0 = s.arg1;
    s.callLocIdx = 441; s.pc = 46; return s.tmp_39;
  case 46:
    r0 = s.retval;
    s.tmp_38 = r0;
    r0 = (s.tmp_38 == 0);
  case 17:
    // jmp value (already in r0)
    s.tmp_40 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_40);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 1160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1160]) return breakpoint(s, 47, 1160, r0);
  case 47:
    r0 = false;
    { step = 23; continue; }
  case 18:
  case 19:
    s.lastBrkId = 1161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1161]) return breakpoint(s, 48, 1161, r0);
  case 48:
    s.tmp_44 = Sprite_sx__P25533_mk(s);
    s.tmp_44.arg0 = s.arg0;
    s.callLocIdx = 442; s.pc = 49; return s.tmp_44;
  case 49:
    r0 = s.retval;
    s.tmp_43 = r0;
    s.tmp_46 = Sprite_sy__P25535_mk(s);
    s.tmp_46.arg0 = s.arg0;
    s.callLocIdx = 443; s.pc = 50; return s.tmp_46;
  case 50:
    r0 = s.retval;
    s.tmp_45 = r0;
    r0 = (s.tmp_43 * s.tmp_45);
    s.tmp_42 = r0;
    s.tmp_49 = Sprite_sx__P25533_mk(s);
    s.tmp_49.arg0 = s.arg1;
    s.callLocIdx = 444; s.pc = 51; return s.tmp_49;
  case 51:
    r0 = s.retval;
    s.tmp_48 = r0;
    s.tmp_51 = Sprite_sy__P25535_mk(s);
    s.tmp_51.arg0 = s.arg1;
    s.callLocIdx = 445; s.pc = 52; return s.tmp_51;
  case 52:
    r0 = s.retval;
    s.tmp_50 = r0;
    r0 = (s.tmp_48 * s.tmp_50);
    s.tmp_47 = r0;
    r0 = (s.tmp_42 < s.tmp_47);
    s.tmp_41 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_41);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1162]) return breakpoint(s, 53, 1162, r0);
  case 53:
    s.A___39712 = (s.arg0);
    s.lastBrkId = 1163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1163]) return breakpoint(s, 54, 1163, r0);
  case 54:
    s.B___39713 = (s.arg1);
    { step = 21; continue; }
  case 20:
    s.lastBrkId = 1164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1164]) return breakpoint(s, 55, 1164, r0);
  case 55:
    s.A___39712 = (s.arg1);
    s.lastBrkId = 1165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1165]) return breakpoint(s, 56, 1165, r0);
  case 56:
    s.B___39713 = (s.arg0);
  case 21:
    s.lastBrkId = 1166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1166]) return breakpoint(s, 57, 1166, r0);
  case 57:
    s.tmp_0 = helpers_imageBlit__P25127_mk(s);
    s.tmp_1 = Sprite_image__P25553_mk(s);
    s.tmp_1.arg0 = s.A___39712;
    s.callLocIdx = 446; s.pc = 59; return s.tmp_1;
  case 59:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_4 = Sprite_left__P25562_mk(s);
    s.tmp_4.arg0 = s.B___39713;
    s.callLocIdx = 447; s.pc = 60; return s.tmp_4;
  case 60:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_left__P25562_mk(s);
    s.tmp_6.arg0 = s.A___39712;
    s.callLocIdx = 448; s.pc = 61; return s.tmp_6;
  case 61:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2 = r0;
    s.tmp_8 = Sprite_sx__P25533_mk(s);
    s.tmp_8.arg0 = s.A___39712;
    s.callLocIdx = 449; s.pc = 62; return s.tmp_8;
  case 62:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_2 / s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_11 = Sprite_top__P25566_mk(s);
    s.tmp_11.arg0 = s.B___39713;
    s.callLocIdx = 450; s.pc = 63; return s.tmp_11;
  case 63:
    r0 = s.retval;
    s.tmp_10 = r0;
    s.tmp_13 = Sprite_top__P25566_mk(s);
    s.tmp_13.arg0 = s.A___39712;
    s.callLocIdx = 451; s.pc = 64; return s.tmp_13;
  case 64:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = (s.tmp_10 - s.tmp_12);
    s.tmp_9 = r0;
    s.tmp_15 = Sprite_sy__P25535_mk(s);
    s.tmp_15.arg0 = s.A___39712;
    s.callLocIdx = 452; s.pc = 65; return s.tmp_15;
  case 65:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = (s.tmp_9 / s.tmp_14);
    s.tmp_0.arg2 = r0;
    s.tmp_17 = Sprite_width__P25560_mk(s);
    s.tmp_17.arg0 = s.B___39713;
    s.callLocIdx = 453; s.pc = 66; return s.tmp_17;
  case 66:
    r0 = s.retval;
    s.tmp_16 = r0;
    s.tmp_19 = Sprite_sx__P25533_mk(s);
    s.tmp_19.arg0 = s.A___39712;
    s.callLocIdx = 454; s.pc = 67; return s.tmp_19;
  case 67:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = (s.tmp_16 / s.tmp_18);
    s.tmp_0.arg3 = r0;
    s.tmp_21 = Sprite_height__P25561_mk(s);
    s.tmp_21.arg0 = s.B___39713;
    s.callLocIdx = 455; s.pc = 68; return s.tmp_21;
  case 68:
    r0 = s.retval;
    s.tmp_20 = r0;
    s.tmp_23 = Sprite_sy__P25535_mk(s);
    s.tmp_23.arg0 = s.A___39712;
    s.callLocIdx = 456; s.pc = 69; return s.tmp_23;
  case 69:
    r0 = s.retval;
    s.tmp_22 = r0;
    r0 = (s.tmp_20 / s.tmp_22);
    s.tmp_0.arg4 = r0;
    s.tmp_24 = Sprite_image__P25553_mk(s);
    s.tmp_24.arg0 = s.B___39713;
    s.callLocIdx = 457; s.pc = 70; return s.tmp_24;
  case 70:
    r0 = s.retval;
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = 0;
    s.tmp_0.arg7 = 0;
    s.tmp_26 = Sprite_image__P25553_mk(s);
    s.tmp_26.arg0 = s.B___39713;
    s.callLocIdx = 458; s.pc = 71; return s.tmp_26;
  case 71:
    r0 = s.retval;
    s.tmp_25 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_25);
    s.tmp_0.arg8 = r0;
    s.tmp_28 = Sprite_image__P25553_mk(s);
    s.tmp_28.arg0 = s.B___39713;
    s.callLocIdx = 459; s.pc = 72; return s.tmp_28;
  case 72:
    r0 = s.retval;
    s.tmp_27 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_27);
    s.tmp_0.arg9 = r0;
    s.tmp_0.arg10 = true;
    s.tmp_0.arg11 = true;
    s.callLocIdx = 460; s.pc = 58; return s.tmp_0;
  case 58:
    r0 = s.retval;
    { step = 23; continue; }
  case 22:
    r0 = undefined;
  case 23:
    return leave(s, r0)
  default: oops()
} } }
Sprite_overlapsWith__P25583.info = {"start":24447,"length":1575,"line":797,"column":4,"endLine":844,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"overlapsWith","argumentNames":["this","other"]}

function Sprite_overlapsWith__P25583_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_overlapsWith__P25583, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  tmp_27: undefined,
  tmp_28: undefined,
  tmp_29: undefined,
  tmp_30: undefined,
  tmp_31: undefined,
  tmp_32: undefined,
  tmp_33: undefined,
  tmp_34: undefined,
  tmp_35: undefined,
  tmp_36: undefined,
  tmp_37: undefined,
  tmp_38: undefined,
  tmp_39: undefined,
  tmp_40: undefined,
  tmp_41: undefined,
  tmp_42: undefined,
  tmp_43: undefined,
  tmp_44: undefined,
  tmp_45: undefined,
  tmp_46: undefined,
  tmp_47: undefined,
  tmp_48: undefined,
  tmp_49: undefined,
  tmp_50: undefined,
  tmp_51: undefined,
  A___39712: undefined,
  B___39713: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_isScaled__P27674(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1055]) return breakpoint(s, 3, 1055, r0);
  case 3:
    r0 = s.arg0.fields["_sx"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== 256);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_sy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== 256);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
Sprite_isScaled__P27674.info = {"start":11267,"length":100,"line":402,"column":4,"endLine":404,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isScaled","argumentNames":["this"]}

function Sprite_isScaled__P27674_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isScaled__P27674, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_Hitbox_overlapsWith__P25388(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C25374_VT)) failedCast(r0);
    s.lastBrkId = 927;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[927]) return breakpoint(s, 18, 927, r0);
  case 18:
    s.tmp_1 = game_Hitbox_contains__P25387_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = game_Hitbox_left__P25382_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 229; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.tmp_3 = game_Hitbox_top__P25383_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 230; s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 231; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 928;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[928]) return breakpoint(s, 22, 928, r0);
  case 22:
    r0 = true;
    { step = 17; continue; }
  case 1:
  case 2:
    s.lastBrkId = 929;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[929]) return breakpoint(s, 23, 929, r0);
  case 23:
    s.tmp_5 = game_Hitbox_contains__P25387_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_6 = game_Hitbox_left__P25382_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.callLocIdx = 232; s.pc = 25; return s.tmp_6;
  case 25:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.tmp_7 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_7.arg0 = s.arg1;
    s.callLocIdx = 233; s.pc = 26; return s.tmp_7;
  case 26:
    r0 = s.retval;
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 234; s.pc = 24; return s.tmp_5;
  case 24:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 930;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[930]) return breakpoint(s, 27, 930, r0);
  case 27:
    r0 = true;
    { step = 17; continue; }
  case 3:
  case 4:
    s.lastBrkId = 931;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[931]) return breakpoint(s, 28, 931, r0);
  case 28:
    s.tmp_9 = game_Hitbox_contains__P25387_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.tmp_10 = game_Hitbox_right__P25384_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 235; s.pc = 30; return s.tmp_10;
  case 30:
    r0 = s.retval;
    s.tmp_9.arg1 = r0;
    s.tmp_11 = game_Hitbox_top__P25383_mk(s);
    s.tmp_11.arg0 = s.arg1;
    s.callLocIdx = 236; s.pc = 31; return s.tmp_11;
  case 31:
    r0 = s.retval;
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 237; s.pc = 29; return s.tmp_9;
  case 29:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 932;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[932]) return breakpoint(s, 32, 932, r0);
  case 32:
    r0 = true;
    { step = 17; continue; }
  case 5:
  case 6:
    s.lastBrkId = 933;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[933]) return breakpoint(s, 33, 933, r0);
  case 33:
    s.tmp_13 = game_Hitbox_contains__P25387_mk(s);
    s.tmp_13.arg0 = s.arg0;
    s.tmp_14 = game_Hitbox_right__P25384_mk(s);
    s.tmp_14.arg0 = s.arg1;
    s.callLocIdx = 238; s.pc = 35; return s.tmp_14;
  case 35:
    r0 = s.retval;
    s.tmp_13.arg1 = r0;
    s.tmp_15 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_15.arg0 = s.arg1;
    s.callLocIdx = 239; s.pc = 36; return s.tmp_15;
  case 36:
    r0 = s.retval;
    s.tmp_13.arg2 = r0;
    s.callLocIdx = 240; s.pc = 34; return s.tmp_13;
  case 34:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_12);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 934;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[934]) return breakpoint(s, 37, 934, r0);
  case 37:
    r0 = true;
    { step = 17; continue; }
  case 7:
  case 8:
    s.lastBrkId = 935;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[935]) return breakpoint(s, 38, 935, r0);
  case 38:
    s.tmp_17 = game_Hitbox_contains__P25387_mk(s);
    s.tmp_17.arg0 = s.arg1;
    s.tmp_18 = game_Hitbox_left__P25382_mk(s);
    s.tmp_18.arg0 = s.arg0;
    s.callLocIdx = 241; s.pc = 40; return s.tmp_18;
  case 40:
    r0 = s.retval;
    s.tmp_17.arg1 = r0;
    s.tmp_19 = game_Hitbox_top__P25383_mk(s);
    s.tmp_19.arg0 = s.arg0;
    s.callLocIdx = 242; s.pc = 41; return s.tmp_19;
  case 41:
    r0 = s.retval;
    s.tmp_17.arg2 = r0;
    s.callLocIdx = 243; s.pc = 39; return s.tmp_17;
  case 39:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_16);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 936;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[936]) return breakpoint(s, 42, 936, r0);
  case 42:
    r0 = true;
    { step = 17; continue; }
  case 9:
  case 10:
    s.lastBrkId = 937;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[937]) return breakpoint(s, 43, 937, r0);
  case 43:
    s.tmp_21 = game_Hitbox_contains__P25387_mk(s);
    s.tmp_21.arg0 = s.arg1;
    s.tmp_22 = game_Hitbox_left__P25382_mk(s);
    s.tmp_22.arg0 = s.arg0;
    s.callLocIdx = 244; s.pc = 45; return s.tmp_22;
  case 45:
    r0 = s.retval;
    s.tmp_21.arg1 = r0;
    s.tmp_23 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_23.arg0 = s.arg0;
    s.callLocIdx = 245; s.pc = 46; return s.tmp_23;
  case 46:
    r0 = s.retval;
    s.tmp_21.arg2 = r0;
    s.callLocIdx = 246; s.pc = 44; return s.tmp_21;
  case 44:
    r0 = s.retval;
    s.tmp_20 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_20);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 938;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[938]) return breakpoint(s, 47, 938, r0);
  case 47:
    r0 = true;
    { step = 17; continue; }
  case 11:
  case 12:
    s.lastBrkId = 939;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[939]) return breakpoint(s, 48, 939, r0);
  case 48:
    s.tmp_25 = game_Hitbox_contains__P25387_mk(s);
    s.tmp_25.arg0 = s.arg1;
    s.tmp_26 = game_Hitbox_right__P25384_mk(s);
    s.tmp_26.arg0 = s.arg0;
    s.callLocIdx = 247; s.pc = 50; return s.tmp_26;
  case 50:
    r0 = s.retval;
    s.tmp_25.arg1 = r0;
    s.tmp_27 = game_Hitbox_top__P25383_mk(s);
    s.tmp_27.arg0 = s.arg0;
    s.callLocIdx = 248; s.pc = 51; return s.tmp_27;
  case 51:
    r0 = s.retval;
    s.tmp_25.arg2 = r0;
    s.callLocIdx = 249; s.pc = 49; return s.tmp_25;
  case 49:
    r0 = s.retval;
    s.tmp_24 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_24);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 940;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[940]) return breakpoint(s, 52, 940, r0);
  case 52:
    r0 = true;
    { step = 17; continue; }
  case 13:
  case 14:
    s.lastBrkId = 941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[941]) return breakpoint(s, 53, 941, r0);
  case 53:
    s.tmp_29 = game_Hitbox_contains__P25387_mk(s);
    s.tmp_29.arg0 = s.arg1;
    s.tmp_30 = game_Hitbox_right__P25384_mk(s);
    s.tmp_30.arg0 = s.arg0;
    s.callLocIdx = 250; s.pc = 55; return s.tmp_30;
  case 55:
    r0 = s.retval;
    s.tmp_29.arg1 = r0;
    s.tmp_31 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_31.arg0 = s.arg0;
    s.callLocIdx = 251; s.pc = 56; return s.tmp_31;
  case 56:
    r0 = s.retval;
    s.tmp_29.arg2 = r0;
    s.callLocIdx = 252; s.pc = 54; return s.tmp_29;
  case 54:
    r0 = s.retval;
    s.tmp_28 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_28);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[942]) return breakpoint(s, 57, 942, r0);
  case 57:
    r0 = true;
    { step = 17; continue; }
  case 15:
  case 16:
    s.lastBrkId = 943;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[943]) return breakpoint(s, 58, 943, r0);
  case 58:
    r0 = false;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_overlapsWith__P25388.info = {"start":1205,"length":622,"line":48,"column":8,"endLine":58,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"overlapsWith","argumentNames":["this","other"]}

function game_Hitbox_overlapsWith__P25388_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_overlapsWith__P25388, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  tmp_27: undefined,
  tmp_28: undefined,
  tmp_29: undefined,
  tmp_30: undefined,
  tmp_31: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Hitbox_contains__P25387(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C25374_VT)) failedCast(r0);
    s.lastBrkId = 926;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[926]) return breakpoint(s, 7, 926, r0);
  case 7:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = game_Hitbox_left__P25382_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 225; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = game_Hitbox_right__P25384_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 226; s.pc = 9; return s.tmp_6;
  case 9:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 <= s.tmp_5);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_7;
    { step = 4; continue; }
  case 3:
    s.tmp_8 = r0 = s.arg2;
    s.tmp_10 = game_Hitbox_top__P25383_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 227; s.pc = 10; return s.tmp_10;
  case 10:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_8 >= s.tmp_9);
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = pxsim_numops_toBool(s.tmp_11);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_11;
    { step = 6; continue; }
  case 5:
    s.tmp_12 = r0 = s.arg2;
    s.tmp_14 = game_Hitbox_bottom__P25385_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.callLocIdx = 228; s.pc = 11; return s.tmp_14;
  case 11:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_12 <= s.tmp_13);
  case 6:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = s.tmp_15;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_contains__P25387.info = {"start":1051,"length":144,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"contains","argumentNames":["this","x","y"]}

function game_Hitbox_contains__P25387_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_contains__P25387, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_imageBlit__P25127(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.arg9 = (s.lambdaArgs[9]);
      s.arg10 = (s.lambdaArgs[10]);
      s.arg11 = (s.lambdaArgs[11]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[536]) return breakpoint(s, 7, 536, r0);
  case 7:
    s.tmp_0 = r0 = globals._blitArgs___27579;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    globals._blitArgs___27579 = (s.tmp_1);
    s.lastBrkId = 537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[537]) return breakpoint(s, 8, 537, r0);
  case 8:
    s.tmp_0 = r0 = globals._blitArgs___27579;
    r0 = (s.arg1 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 0, s.tmp_1);
    s.lastBrkId = 538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[538]) return breakpoint(s, 9, 538, r0);
  case 9:
    s.tmp_0 = r0 = globals._blitArgs___27579;
    r0 = (s.arg2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 1, s.tmp_1);
    s.lastBrkId = 539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[539]) return breakpoint(s, 10, 539, r0);
  case 10:
    s.tmp_0 = r0 = globals._blitArgs___27579;
    r0 = (s.arg3 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 2, s.tmp_1);
    s.lastBrkId = 540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[540]) return breakpoint(s, 11, 540, r0);
  case 11:
    s.tmp_0 = r0 = globals._blitArgs___27579;
    r0 = (s.arg4 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 3, s.tmp_1);
    s.lastBrkId = 541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[541]) return breakpoint(s, 12, 541, r0);
  case 12:
    s.tmp_0 = r0 = globals._blitArgs___27579;
    r0 = (s.arg6 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 4, s.tmp_1);
    s.lastBrkId = 542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[542]) return breakpoint(s, 13, 542, r0);
  case 13:
    s.tmp_0 = r0 = globals._blitArgs___27579;
    r0 = (s.arg7 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 5, s.tmp_1);
    s.lastBrkId = 543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[543]) return breakpoint(s, 14, 543, r0);
  case 14:
    s.tmp_0 = r0 = globals._blitArgs___27579;
    r0 = (s.arg8 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 6, s.tmp_1);
    s.lastBrkId = 544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[544]) return breakpoint(s, 15, 544, r0);
  case 15:
    s.tmp_0 = r0 = globals._blitArgs___27579;
    r0 = (s.arg9 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 7, s.tmp_1);
    s.lastBrkId = 545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[545]) return breakpoint(s, 16, 545, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.arg10);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(globals._blitArgs___27579, 8, s.tmp_0);
    s.lastBrkId = 546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[546]) return breakpoint(s, 17, 546, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.arg11);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(globals._blitArgs___27579, 9, s.tmp_0);
    s.lastBrkId = 547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[547]) return breakpoint(s, 18, 547, r0);
  case 18:
    r0 = pxsim_ImageMethods._blit(s.arg0, s.arg5, globals._blitArgs___27579);
    return leave(s, r0)
  default: oops()
} } }
helpers_imageBlit__P25127.info = {"start":3839,"length":642,"line":136,"column":4,"endLine":149,"endColumn":5,"fileName":"pxt_modules/screen---st7735/image.ts","functionName":"imageBlit","argumentNames":["img","xDst","yDst","wDst","hDst","src","xSrc","ySrc","wSrc","hSrc","transparent","check"]}

function helpers_imageBlit__P25127_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageBlit__P25127, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
  arg9: undefined,
  arg10: undefined,
  arg11: undefined,
} }





function ArcadePhysicsEngine_createMovingSprite__P27712(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ovx___40192 = undefined;
    s.ovy___40197 = undefined;
    s.fx___40224 = undefined;
    s.c___40231 = undefined;
    s.fy___40274 = undefined;
    s.c___40281 = undefined;
    s.dx___40320 = undefined;
    s.dy___40333 = undefined;
    s.xStep___40346 = undefined;
    s.yStep___40348 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1373]) return breakpoint(s, 25, 1373, r0);
  case 25:
    s.tmp_0 = ArcadePhysicsEngine_constrain__P27717_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 591; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.ovx___40192 = (r0);
    s.lastBrkId = 1374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1374]) return breakpoint(s, 27, 1374, r0);
  case 27:
    s.tmp_0 = ArcadePhysicsEngine_constrain__P27717_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 592; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.ovy___40197 = (r0);
    s.lastBrkId = 1375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1375]) return breakpoint(s, 29, 1375, r0);
  case 29:
    r0 = s.arg1.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1376]) return breakpoint(s, 30, 1376, r0);
  case 30:
    r0 = s.arg1.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1377]) return breakpoint(s, 31, 1377, r0);
  case 31:
    r0 = s.arg1.fields["_ax"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1378]) return breakpoint(s, 32, 1378, r0);
  case 32:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx_idiv__P23534_mk(s);
    s.tmp_5 = Fx_imul__P23532_mk(s);
    r0 = s.arg1.fields["_ax"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg2;
    s.callLocIdx = 593; s.pc = 35; return s.tmp_5;
  case 35:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 1000;
    s.callLocIdx = 594; s.pc = 34; return s.tmp_4;
  case 34:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 595; s.pc = 33; return s.tmp_3;
  case 33:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 8; continue; }
  case 1:
    s.lastBrkId = 1379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1379]) return breakpoint(s, 36, 1379, r0);
  case 36:
    r0 = s.arg1.fields["_fx"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1380]) return breakpoint(s, 37, 1380, r0);
  case 37:
    s.tmp_1 = Fx_idiv__P23534_mk(s);
    s.tmp_2 = Fx_imul__P23532_mk(s);
    r0 = s.arg1.fields["_fx"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 596; s.pc = 39; return s.tmp_2;
  case 39:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 597; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.fx___40224 = (r0);
    s.lastBrkId = 1381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1381]) return breakpoint(s, 40, 1381, r0);
  case 40:
    s.tmp_0 = Fx_compare__P23535_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.fx___40224;
    s.callLocIdx = 598; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.c___40231 = (r0);
    s.lastBrkId = 1382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1382]) return breakpoint(s, 42, 1382, r0);
  case 42:
    r0 = (s.c___40231 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1383]) return breakpoint(s, 43, 1383, r0);
  case 43:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P23537_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fx___40224;
    s.callLocIdx = 599; s.pc = 45; return s.tmp_4;
  case 45:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 600; s.pc = 44; return s.tmp_3;
  case 44:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 5; continue; }
  case 2:
    s.lastBrkId = 1384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1384]) return breakpoint(s, 46, 1384, r0);
  case 46:
    r0 = (s.c___40231 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1385]) return breakpoint(s, 47, 1385, r0);
  case 47:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_max__P23538_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_sub__P23530_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fx___40224;
    s.callLocIdx = 601; s.pc = 49; return s.tmp_4;
  case 49:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 602; s.pc = 48; return s.tmp_3;
  case 48:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1386]) return breakpoint(s, 50, 1386, r0);
  case 50:
    r0 = (s.arg1).fields["_vx"] = (0);
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 1387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1387]) return breakpoint(s, 51, 1387, r0);
  case 51:
    r0 = s.arg1.fields["_ay"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1388]) return breakpoint(s, 52, 1388, r0);
  case 52:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx_idiv__P23534_mk(s);
    s.tmp_5 = Fx_imul__P23532_mk(s);
    r0 = s.arg1.fields["_ay"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg2;
    s.callLocIdx = 603; s.pc = 55; return s.tmp_5;
  case 55:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 1000;
    s.callLocIdx = 604; s.pc = 54; return s.tmp_4;
  case 54:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 605; s.pc = 53; return s.tmp_3;
  case 53:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 16; continue; }
  case 9:
    s.lastBrkId = 1389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1389]) return breakpoint(s, 56, 1389, r0);
  case 56:
    r0 = s.arg1.fields["_fy"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1390]) return breakpoint(s, 57, 1390, r0);
  case 57:
    s.tmp_1 = Fx_idiv__P23534_mk(s);
    s.tmp_2 = Fx_imul__P23532_mk(s);
    r0 = s.arg1.fields["_fy"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 606; s.pc = 59; return s.tmp_2;
  case 59:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 607; s.pc = 58; return s.tmp_1;
  case 58:
    r0 = s.retval;
    s.fy___40274 = (r0);
    s.lastBrkId = 1391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1391]) return breakpoint(s, 60, 1391, r0);
  case 60:
    s.tmp_0 = Fx_compare__P23535_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.fy___40274;
    s.callLocIdx = 608; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.c___40281 = (r0);
    s.lastBrkId = 1392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1392]) return breakpoint(s, 62, 1392, r0);
  case 62:
    r0 = (s.c___40281 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1393]) return breakpoint(s, 63, 1393, r0);
  case 63:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P23537_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fy___40274;
    s.callLocIdx = 609; s.pc = 65; return s.tmp_4;
  case 65:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 610; s.pc = 64; return s.tmp_3;
  case 64:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 13; continue; }
  case 10:
    s.lastBrkId = 1394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1394]) return breakpoint(s, 66, 1394, r0);
  case 66:
    r0 = (s.c___40281 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1395]) return breakpoint(s, 67, 1395, r0);
  case 67:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_max__P23538_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_sub__P23530_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fy___40274;
    s.callLocIdx = 611; s.pc = 69; return s.tmp_4;
  case 69:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 612; s.pc = 68; return s.tmp_3;
  case 68:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 1396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1396]) return breakpoint(s, 70, 1396, r0);
  case 70:
    r0 = (s.arg1).fields["_vy"] = (0);
  case 12:
  case 13:
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 1397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1397]) return breakpoint(s, 71, 1397, r0);
  case 71:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = ArcadePhysicsEngine_constrain__P27717_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 613; s.pc = 72; return s.tmp_2;
  case 72:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    s.lastBrkId = 1398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1398]) return breakpoint(s, 73, 1398, r0);
  case 73:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = ArcadePhysicsEngine_constrain__P27717_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 614; s.pc = 74; return s.tmp_2;
  case 74:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    s.lastBrkId = 1399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1399]) return breakpoint(s, 75, 1399, r0);
  case 75:
    s.tmp_0 = Fx8__P23520_mk(s);
    s.tmp_3 = Fx_toFloat__P23544_mk(s);
    s.tmp_4 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.ovx___40192;
    s.callLocIdx = 615; s.pc = 78; return s.tmp_4;
  case 78:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 616; s.pc = 77; return s.tmp_3;
  case 77:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 1000);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 617; s.pc = 76; return s.tmp_0;
  case 76:
    r0 = s.retval;
    s.dx___40320 = (r0);
    s.lastBrkId = 1400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1400]) return breakpoint(s, 79, 1400, r0);
  case 79:
    s.tmp_0 = Fx8__P23520_mk(s);
    s.tmp_3 = Fx_toFloat__P23544_mk(s);
    s.tmp_4 = Fx_add__P23528_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.ovy___40197;
    s.callLocIdx = 618; s.pc = 82; return s.tmp_4;
  case 82:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 619; s.pc = 81; return s.tmp_3;
  case 81:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 1000);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 620; s.pc = 80; return s.tmp_0;
  case 80:
    r0 = s.retval;
    s.dy___40333 = (r0);
    s.lastBrkId = 1401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1401]) return breakpoint(s, 83, 1401, r0);
  case 83:
    s.xStep___40346 = (s.dx___40320);
    s.lastBrkId = 1402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1402]) return breakpoint(s, 84, 1402, r0);
  case 84:
    s.yStep___40348 = (s.dy___40333);
    s.lastBrkId = 1403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1403]) return breakpoint(s, 85, 1403, r0);
  case 85:
  case 17:
    s.lastBrkId = 1404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1404]) return breakpoint(s, 86, 1404, r0);
  case 86:
    s.tmp_2 = Fx_abs__P23536_mk(s);
    s.tmp_2.arg0 = s.xStep___40346;
    s.callLocIdx = 621; s.pc = 87; return s.tmp_2;
  case 87:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    s.tmp_5 = Fx_abs__P23536_mk(s);
    s.tmp_5.arg0 = s.yStep___40348;
    s.callLocIdx = 622; s.pc = 88; return s.tmp_5;
  case 88:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 19:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1405]) return breakpoint(s, 89, 1405, r0);
  case 89:
    s.tmp_10 = Fx_abs__P23536_mk(s);
    s.tmp_10.arg0 = s.xStep___40346;
    s.callLocIdx = 623; s.pc = 90; return s.tmp_10;
  case 90:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_11 = r0;
    r0 = (s.tmp_9 > s.tmp_11);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1406]) return breakpoint(s, 91, 1406, r0);
  case 91:
    s.tmp_12 = Fx_idiv__P23534_mk(s);
    s.tmp_12.arg0 = s.xStep___40346;
    s.tmp_12.arg1 = 2;
    s.callLocIdx = 624; s.pc = 92; return s.tmp_12;
  case 92:
    r0 = s.retval;
    s.xStep___40346 = (r0);
  case 20:
  case 21:
    s.lastBrkId = 1407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1407]) return breakpoint(s, 93, 1407, r0);
  case 93:
    s.tmp_2 = Fx_abs__P23536_mk(s);
    s.tmp_2.arg0 = s.yStep___40348;
    s.callLocIdx = 625; s.pc = 94; return s.tmp_2;
  case 94:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 1408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1408]) return breakpoint(s, 95, 1408, r0);
  case 95:
    s.tmp_4 = Fx_idiv__P23534_mk(s);
    s.tmp_4.arg0 = s.yStep___40348;
    s.tmp_4.arg1 = 2;
    s.callLocIdx = 626; s.pc = 96; return s.tmp_4;
  case 96:
    r0 = s.retval;
    s.yStep___40348 = (r0);
  case 22:
  case 23:
    { step = 17; continue; }
  case 24:
    s.lastBrkId = 1409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1409]) return breakpoint(s, 97, 1409, r0);
  case 97:
    r0 = pxsim_pxtcore_mkClassInstance(MovingSprite__C25680_VT);
    s.tmp_0 = r0;
    s.tmp_1 = MovingSprite_constructor__P25681_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_1.arg2 = r0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.dx___40320;
    s.tmp_1.arg5 = s.dy___40333;
    s.tmp_1.arg6 = s.xStep___40346;
    s.tmp_1.arg7 = s.yStep___40348;
    s.callLocIdx = 627; s.pc = 98; return s.tmp_1;
  case 98:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_createMovingSprite__P27712.info = {"start":6637,"length":2805,"line":210,"column":4,"endLine":300,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"createMovingSprite","argumentNames":["this","sprite","dtMs","dt2"]}

function ArcadePhysicsEngine_createMovingSprite__P27712_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_createMovingSprite__P27712, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  ovx___40192: undefined,
  ovy___40197: undefined,
  fx___40224: undefined,
  c___40231: undefined,
  fy___40274: undefined,
  c___40281: undefined,
  dx___40320: undefined,
  dy___40333: undefined,
  xStep___40346: undefined,
  yStep___40348: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_constrain__P27717(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1586]) return breakpoint(s, 1, 1586, r0);
  case 1:
    s.tmp_0 = Fx_max__P23538_mk(s);
    s.tmp_1 = Fx_min__P23537_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 774; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["maxNegativeVelocity"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 775; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_constrain__P27717.info = {"start":26054,"length":193,"line":730,"column":4,"endLine":738,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"constrain","argumentNames":["this","v"]}

function ArcadePhysicsEngine_constrain__P27717_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_constrain__P27717, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_compare__P23535(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[219]) return breakpoint(s, 1, 219, r0);
  case 1:
    r0 = (s.arg0 - s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_compare__P23535.info = {"start":1395,"length":106,"line":41,"column":4,"endLine":43,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"compare","argumentNames":["a","b"]}

function Fx_compare__P23535_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_compare__P23535, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_insertAABB__P25608(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.left___40012 = undefined;
    s.top___40015 = undefined;
    s.xn___40018 = undefined;
    s.yn___40029 = undefined;
    s.x___40040 = undefined;
    s.y___40045 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1246]) return breakpoint(s, 5, 1246, r0);
  case 5:
    s.tmp_0 = Sprite_left__P25562_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 523; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.left___40012 = (r0);
    s.lastBrkId = 1247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1247]) return breakpoint(s, 7, 1247, r0);
  case 7:
    s.tmp_0 = Sprite_top__P25566_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 524; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.top___40015 = (r0);
    s.lastBrkId = 1248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1248]) return breakpoint(s, 9, 1248, r0);
  case 9:
    s.tmp_3 = Sprite_width__P25560_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 525; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_5);
    s.xn___40018 = (r0);
    s.lastBrkId = 1249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1249]) return breakpoint(s, 11, 1249, r0);
  case 11:
    s.tmp_3 = Sprite_height__P25561_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 526; s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_5);
    s.yn___40029 = (r0);
    s.lastBrkId = 1250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1250]) return breakpoint(s, 13, 1250, r0);
  case 13:
    s.x___40040 = (0);
    s.lastBrkId = 1251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1251]) return breakpoint(s, 14, 1251, r0);
  case 14:
  case 1:
    s.lastBrkId = 1252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1252]) return breakpoint(s, 15, 1252, r0);
  case 15:
    r0 = (s.x___40040 <= s.xn___40018);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1253]) return breakpoint(s, 16, 1253, r0);
  case 16:
    s.y___40045 = (0);
    s.lastBrkId = 1254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1254]) return breakpoint(s, 17, 1254, r0);
  case 17:
  case 2:
    s.lastBrkId = 1255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1255]) return breakpoint(s, 18, 1255, r0);
  case 18:
    r0 = (s.y___40045 <= s.yn___40029);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1256]) return breakpoint(s, 19, 1256, r0);
  case 19:
    s.tmp_1 = sprites_SpriteMap_insertAtKey__P27676_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = r0 = s.left___40012;
    s.tmp_4 = Math_min__P23502_mk(s);
    s.tmp_5 = Sprite_width__P25560_mk(s);
    s.tmp_5.arg0 = s.arg1;
    s.callLocIdx = 527; s.pc = 22; return s.tmp_5;
  case 22:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_6 = r0;
    r0 = (s.x___40040 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 528; s.pc = 21; return s.tmp_4;
  case 21:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.tmp_7 = r0 = s.top___40015;
    s.tmp_9 = Math_min__P23502_mk(s);
    s.tmp_10 = Sprite_height__P25561_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 529; s.pc = 24; return s.tmp_10;
  case 24:
    r0 = s.retval;
    s.tmp_9.arg0 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_11 = r0;
    r0 = (s.y___40045 * s.tmp_11);
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 530; s.pc = 23; return s.tmp_9;
  case 23:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_1.arg2 = r0;
    s.tmp_1.arg3 = s.arg1;
    s.callLocIdx = 531; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1257]) return breakpoint(s, 25, 1257, r0);
  case 25:
    r0 = (s.y___40045 + 1);
    s.y___40045 = (r0);
    { step = 2; continue; }
  case 3:
    s.lastBrkId = 1258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1258]) return breakpoint(s, 26, 1258, r0);
  case 26:
    r0 = (s.x___40040 + 1);
    s.x___40040 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_insertAABB__P25608.info = {"start":3184,"length":521,"line":91,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"insertAABB","argumentNames":["this","sprite"]}

function sprites_SpriteMap_insertAABB__P25608_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_insertAABB__P25608, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  left___40012: undefined,
  top___40015: undefined,
  xn___40018: undefined,
  yn___40029: undefined,
  x___40040: undefined,
  y___40045: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_insertAtKey__P27676(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.k___40080 = undefined;
    s.bucket___40085 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1240]) return breakpoint(s, 5, 1240, r0);
  case 5:
    s.tmp_0 = sprites_SpriteMap_key__P27675_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 522; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.k___40080 = (r0);
    s.lastBrkId = 1241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1241]) return breakpoint(s, 7, 1241, r0);
  case 7:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___40080);
    s.bucket___40085 = (r0);
    s.lastBrkId = 1242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1242]) return breakpoint(s, 8, 1242, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.bucket___40085);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1243]) return breakpoint(s, 9, 1243, r0);
  case 9:
    r0 = s.arg0.fields["buckets"];
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.k___40080;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_2, s.tmp_3, s.tmp_4);
    s.bucket___40085 = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 1244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1244]) return breakpoint(s, 10, 1244, r0);
  case 10:
    r0 = pxsim_Array_.indexOf(s.bucket___40085, s.arg3, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1245]) return breakpoint(s, 11, 1245, r0);
  case 11:
    r0 = pxsim_Array__push(s.bucket___40085, s.arg3);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_insertAtKey__P27676.info = {"start":2872,"length":302,"line":82,"column":8,"endLine":89,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"insertAtKey","argumentNames":["this","x","y","sprite"]}

function sprites_SpriteMap_insertAtKey__P27676_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_insertAtKey__P27676, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  k___40080: undefined,
  bucket___40085: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_SpriteMap_clear__P25607(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1236]) return breakpoint(s, 1, 1236, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buckets"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_clear__P25607.info = {"start":2532,"length":50,"line":72,"column":8,"endLine":74,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"clear","argumentNames":["this"]}

function sprites_SpriteMap_clear__P25607_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_clear__P25607, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_resizeBuckets__P25606(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.maxWidth___40115 = undefined;
    s.maxHeight___40116 = undefined;
    s.sprite___40118 = undefined;
    s.unnamed370___U3 = undefined;
    s.unnamed371___U4 = undefined;
    s.tMap___40134 = undefined;
    s.areaWidth___40138 = undefined;
    s.areaHeight___40145 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1221]) return breakpoint(s, 11, 1221, r0);
  case 11:
    s.maxWidth___40115 = (0);
    s.lastBrkId = 1222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1222]) return breakpoint(s, 12, 1222, r0);
  case 12:
    s.maxHeight___40116 = (0);
    s.lastBrkId = 1223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1223]) return breakpoint(s, 13, 1223, r0);
  case 13:
    s.sprite___40118 = (undefined);
    s.unnamed370___U3 = (s.arg1);
    s.unnamed371___U4 = (0);
    s.lastBrkId = 1224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1224]) return breakpoint(s, 14, 1224, r0);
  case 14:
  case 1:
    s.tmp_0 = r0 = s.unnamed371___U4;
    r0 = pxsim_Array__length(s.unnamed370___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed370___U3, s.unnamed371___U4);
    s.sprite___40118 = (r0);
    s.lastBrkId = 1225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1225]) return breakpoint(s, 15, 1225, r0);
  case 15:
    s.tmp_4 = Sprite_width__P25560_mk(s);
    s.tmp_4.arg0 = s.sprite___40118;
    s.callLocIdx = 511; s.pc = 16; return s.tmp_4;
  case 16:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > s.maxWidth___40115);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1226]) return breakpoint(s, 17, 1226, r0);
  case 17:
    s.tmp_5 = Sprite_width__P25560_mk(s);
    s.tmp_5.arg0 = s.sprite___40118;
    s.callLocIdx = 512; s.pc = 18; return s.tmp_5;
  case 18:
    r0 = s.retval;
    s.maxWidth___40115 = (r0);
  case 2:
  case 3:
    s.lastBrkId = 1227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1227]) return breakpoint(s, 19, 1227, r0);
  case 19:
    s.tmp_2 = Sprite_height__P25561_mk(s);
    s.tmp_2.arg0 = s.sprite___40118;
    s.callLocIdx = 513; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.maxHeight___40116);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1228]) return breakpoint(s, 21, 1228, r0);
  case 21:
    s.tmp_3 = Sprite_height__P25561_mk(s);
    s.tmp_3.arg0 = s.sprite___40118;
    s.callLocIdx = 514; s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
    s.maxHeight___40116 = (r0);
  case 4:
  case 5:
    r0 = (s.unnamed371___U4 + 1);
    s.unnamed371___U4 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed370___U3 = (undefined);
    s.lastBrkId = 1229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1229]) return breakpoint(s, 23, 1229, r0);
  case 23:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 515; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tMap___40134 = (r0);
    s.lastBrkId = 1230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1230]) return breakpoint(s, 25, 1230, r0);
  case 25:
    r0 = pxsim_numops_toBoolDecr(s.tMap___40134);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = tiles_TileMap_areaWidth__P25850_mk(s);
    s.tmp_0.arg0 = s.tMap___40134;
    s.callLocIdx = 516; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.areaWidth___40138 = (s.tmp_1);
    s.lastBrkId = 1231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1231]) return breakpoint(s, 27, 1231, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.tMap___40134);
    if (!r0) { step = 9; continue; }
    s.tmp_0 = tiles_TileMap_areaHeight__P25851_mk(s);
    s.tmp_0.arg0 = s.tMap___40134;
    s.callLocIdx = 517; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.areaHeight___40145 = (s.tmp_1);
    s.lastBrkId = 1232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1232]) return breakpoint(s, 29, 1232, r0);
  case 29:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_clamp__P23498_mk(s);
    s.tmp_2.arg0 = 8;
    r0 = (s.areaWidth___40138 >> 2);
    s.tmp_2.arg1 = r0;
    r0 = (s.maxWidth___40115 * 2);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 518; s.pc = 30; return s.tmp_2;
  case 30:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cellWidth"] = (s.tmp_1);
    s.lastBrkId = 1233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1233]) return breakpoint(s, 31, 1233, r0);
  case 31:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_clamp__P23498_mk(s);
    s.tmp_2.arg0 = 8;
    r0 = (s.areaHeight___40145 >> 2);
    s.tmp_2.arg1 = r0;
    r0 = (s.maxHeight___40116 * 2);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 519; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cellHeight"] = (s.tmp_1);
    s.lastBrkId = 1234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1234]) return breakpoint(s, 33, 1234, r0);
  case 33:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.idiv(s.areaHeight___40145, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["rowCount"] = (s.tmp_1);
    s.lastBrkId = 1235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1235]) return breakpoint(s, 34, 1235, r0);
  case 34:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.idiv(s.areaWidth___40138, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["columnCount"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_resizeBuckets__P25606.info = {"start":1696,"length":826,"line":52,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"resizeBuckets","argumentNames":["this","sprites"]}

function sprites_SpriteMap_resizeBuckets__P25606_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_resizeBuckets__P25606, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  maxWidth___40115: undefined,
  maxHeight___40116: undefined,
  sprite___40118: undefined,
  unnamed370___U3: undefined,
  unnamed371___U4: undefined,
  tMap___40134: undefined,
  areaWidth___40138: undefined,
  areaHeight___40145: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_clearObstacles__P25588(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1167]) return breakpoint(s, 1, 1167, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_obstacles"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_clearObstacles__P25588.info = {"start":28560,"length":54,"line":918,"column":4,"endLine":920,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"clearObstacles","argumentNames":["this"]}

function Sprite_clearObstacles__P25588_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_clearObstacles__P25588, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Fx_idiv__P23534(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[218]) return breakpoint(s, 1, 218, r0);
  case 1:
    r0 = pxsim.Math_.idiv(s.arg0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_idiv__P23534.info = {"start":1279,"length":111,"line":38,"column":4,"endLine":40,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"idiv","argumentNames":["a","b"]}

function Fx_idiv__P23534_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_idiv__P23534, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayMap__P23477(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___40410 = undefined;
    s.len___40412 = undefined;
    s.i___40415 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 58;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[58]) return breakpoint(s, 3, 58, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.res___40410 = (r0);
    s.lastBrkId = 59;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[59]) return breakpoint(s, 4, 59, r0);
  case 4:
    r0 = pxsim_Array__length(s.arg0);
    s.len___40412 = (r0);
    s.lastBrkId = 60;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[60]) return breakpoint(s, 5, 60, r0);
  case 5:
    s.i___40415 = (0);
    s.lastBrkId = 61;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[61]) return breakpoint(s, 6, 61, r0);
  case 6:
  case 1:
    s.lastBrkId = 62;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[62]) return breakpoint(s, 7, 62, r0);
  case 7:
    r0 = (s.i___40415 < s.len___40412);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 63;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[63]) return breakpoint(s, 8, 63, r0);
  case 8:
    s.tmp_1 = r0 = s.res___40410;
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___40415);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.i___40415;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 3; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 64;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[64]) return breakpoint(s, 10, 64, r0);
  case 10:
    r0 = (s.i___40415 + 1);
    s.i___40415 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 65;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[65]) return breakpoint(s, 11, 65, r0);
  case 11:
    r0 = s.res___40410;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayMap__P23477.info = {"start":6528,"length":299,"line":229,"column":4,"endLine":236,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayMap","argumentNames":["arr","callbackfn"]}

function helpers_arrayMap__P23477_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayMap__P23477, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  res___40410: undefined,
  len___40412: undefined,
  i___40415: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_draw__P25693(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1316]) return breakpoint(s, 1, 1316, r0);
  case 1:
    s.tmp_0 = sprites_SpriteMap_draw__P25605_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 557; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_draw__P25693.info = {"start":2777,"length":39,"line":108,"column":4,"endLine":110,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"draw","argumentNames":["this"]}

function ArcadePhysicsEngine_draw__P25693_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_draw__P25693, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_draw__P25605(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___40436 = undefined;
    s.y___40442 = undefined;
    s.left___40448 = undefined;
    s.top___40453 = undefined;
    s.k___40458 = undefined;
    s.b___40463 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C25601_VT)) failedCast(r0);
    s.lastBrkId = 1207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1207]) return breakpoint(s, 9, 1207, r0);
  case 9:
    s.x___40436 = (0);
    s.lastBrkId = 1208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1208]) return breakpoint(s, 10, 1208, r0);
  case 10:
  case 1:
    s.lastBrkId = 1209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1209]) return breakpoint(s, 11, 1209, r0);
  case 11:
    r0 = s.arg0.fields["columnCount"];
    s.tmp_1 = r0;
    r0 = (s.x___40436 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1210]) return breakpoint(s, 12, 1210, r0);
  case 12:
    s.y___40442 = (0);
    s.lastBrkId = 1211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1211]) return breakpoint(s, 13, 1211, r0);
  case 13:
  case 2:
    s.lastBrkId = 1212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1212]) return breakpoint(s, 14, 1212, r0);
  case 14:
    r0 = s.arg0.fields["rowCount"];
    s.tmp_1 = r0;
    r0 = (s.y___40442 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1213]) return breakpoint(s, 15, 1213, r0);
  case 15:
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2 = r0;
    r0 = (s.x___40436 * s.tmp_2);
    s.left___40448 = (r0);
    s.lastBrkId = 1214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1214]) return breakpoint(s, 16, 1214, r0);
  case 16:
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_0 = r0;
    r0 = (s.y___40442 * s.tmp_0);
    s.top___40453 = (r0);
    s.lastBrkId = 1215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1215]) return breakpoint(s, 17, 1215, r0);
  case 17:
    s.tmp_0 = sprites_SpriteMap_key__P27675_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.left___40448;
    s.tmp_0.arg2 = s.top___40453;
    s.callLocIdx = 509; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.k___40458 = (r0);
    s.lastBrkId = 1216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1216]) return breakpoint(s, 19, 1216, r0);
  case 19:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___40458);
    s.b___40463 = (r0);
    s.lastBrkId = 1217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1217]) return breakpoint(s, 20, 1217, r0);
  case 20:
    s.tmp_0 = r0 = s.b___40463;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__length(s.b___40463);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1218]) return breakpoint(s, 21, 1218, r0);
  case 21:
    s.tmp_2 = helpers_imageDrawRect__P25133_mk(s);
    s.tmp_2.arg0 = globals.screen___25204;
    s.tmp_2.arg1 = s.left___40448;
    s.tmp_2.arg2 = s.top___40453;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2.arg3 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_2.arg4 = r0;
    s.tmp_2.arg5 = 5;
    s.callLocIdx = 510; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1219]) return breakpoint(s, 23, 1219, r0);
  case 23:
    r0 = (s.y___40442 + 1);
    s.y___40442 = (r0);
    { step = 2; continue; }
  case 7:
    s.lastBrkId = 1220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1220]) return breakpoint(s, 24, 1220, r0);
  case 24:
    r0 = (s.x___40436 + 1);
    s.x___40436 = (r0);
    { step = 1; continue; }
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_draw__P25605.info = {"start":1122,"length":496,"line":36,"column":8,"endLine":47,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"draw","argumentNames":["this"]}

function sprites_SpriteMap_draw__P25605_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_draw__P25605, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  x___40436: undefined,
  y___40442: undefined,
  left___40448: undefined,
  top___40453: undefined,
  k___40458: undefined,
  b___40463: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_removeSprite__P25692(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1315]) return breakpoint(s, 1, 1315, r0);
  case 1:
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_removeSprite__P25692.info = {"start":2691,"length":80,"line":104,"column":4,"endLine":106,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"removeSprite","argumentNames":["this","sprite"]}

function ArcadePhysicsEngine_removeSprite__P25692_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_removeSprite__P25692, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_addSprite__P25691(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___40500 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C25682_VT)) failedCast(r0);
    s.lastBrkId = 1311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1311]) return breakpoint(s, 5, 1311, r0);
  case 5:
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.lastBrkId = 1312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1312]) return breakpoint(s, 6, 1312, r0);
  case 6:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 555; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___40500 = (r0);
    s.lastBrkId = 1313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1313]) return breakpoint(s, 8, 1313, r0);
  case 8:
    s.tmp_0 = r0 = s.tm___40500;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_isOnWall__P25865_mk(s);
    s.tmp_1.arg0 = s.tm___40500;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 556; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1314]) return breakpoint(s, 10, 1314, r0);
  case 10:
    s.tmp_3 = r0 = s.arg1;
    r0 = s.tmp_3.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["flags"] = (s.tmp_4);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_addSprite__P25691.info = {"start":2465,"length":220,"line":96,"column":4,"endLine":102,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function ArcadePhysicsEngine_addSprite__P25691_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_addSprite__P25691, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tm___40500: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_toString__P25597(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1194]) return breakpoint(s, 1, 1194, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_9 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_11 = r0;
    if ((s.tmp_11) && (s.tmp_11).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_11);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_11) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_8, "(");
    s.tmp_7 = r0;
    s.tmp_14 = Sprite_x__P25517_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.callLocIdx = 490; s.pc = 3; return s.tmp_14;
  case 3:
    r0 = s.retval;
    s.tmp_13 = r0;
    if ((s.tmp_13) && (s.tmp_13).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_13);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_13) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_String__concat(s.tmp_7, s.tmp_12);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, ",");
    s.tmp_5 = r0;
    s.tmp_17 = Sprite_y__P25519_mk(s);
    s.tmp_17.arg0 = s.arg0;
    s.callLocIdx = 491; s.pc = 5; return s.tmp_17;
  case 5:
    r0 = s.retval;
    s.tmp_16 = r0;
    if ((s.tmp_16) && (s.tmp_16).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_16);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_16) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_15);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ")->(");
    s.tmp_3 = r0;
    s.tmp_20 = Sprite_vx__P25521_mk(s);
    s.tmp_20.arg0 = s.arg0;
    s.callLocIdx = 492; s.pc = 7; return s.tmp_20;
  case 7:
    r0 = s.retval;
    s.tmp_19 = r0;
    if ((s.tmp_19) && (s.tmp_19).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_19);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_19) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_18);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_23 = Sprite_vy__P25523_mk(s);
    s.tmp_23.arg0 = s.arg0;
    s.callLocIdx = 493; s.pc = 9; return s.tmp_23;
  case 9:
    r0 = s.retval;
    s.tmp_22 = r0;
    if ((s.tmp_22) && (s.tmp_22).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_22);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_22) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_21 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_21);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
Sprite_toString__P25597.info = {"start":37683,"length":93,"line":1169,"column":4,"endLine":1171,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"toString","argumentNames":["this"]}

function Sprite_toString__P25597_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_toString__P25597, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  arg0: undefined,
} }





function Sprite___update__P25579(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.bounce___40573 = undefined;
    s.tm___40578 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1117]) return breakpoint(s, 33, 1117, r0);
  case 33:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1118]) return breakpoint(s, 34, 1118, r0);
  case 34:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.arg2 * 1000);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 1119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1119]) return breakpoint(s, 35, 1119, r0);
  case 35:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1120]) return breakpoint(s, 36, 1120, r0);
  case 36:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 1121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1121]) return breakpoint(s, 37, 1121, r0);
  case 37:
    s.tmp_0 = Sprite__destroyCore__P25592_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 403; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 1122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1122]) return breakpoint(s, 39, 1122, r0);
  case 39:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_2 = Sprite_isOutOfScreen__P25577_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 404; s.pc = 40; return s.tmp_2;
  case 40:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1123]) return breakpoint(s, 41, 1123, r0);
  case 41:
    s.tmp_4 = Sprite_destroy__P25591_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = undefined;
    s.tmp_4.arg2 = undefined;
    s.callLocIdx = 405; s.pc = 42; return s.tmp_4;
  case 42:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 1124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1124]) return breakpoint(s, 43, 1124, r0);
  case 43:
    r0 = s.arg0.fields["flags"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & 32);
    s.bounce___40573 = (r0);
    s.lastBrkId = 1125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1125]) return breakpoint(s, 44, 1125, r0);
  case 44:
    s.tmp_0 = game_currentScene__P26061_mk(s);
    s.callLocIdx = 406; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___40578 = (r0);
    s.lastBrkId = 1126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1126]) return breakpoint(s, 46, 1126, r0);
  case 46:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 8);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 9:
    s.tmp_2 = r0 = s.bounce___40573;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_2;
    { step = 11; continue; }
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.tm___40578);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 11:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 12:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 29; continue; }
    s.lastBrkId = 1127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1127]) return breakpoint(s, 47, 1127, r0);
  case 47:
    s.tmp_8 = Sprite_left__P25562_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 407; s.pc = 48; return s.tmp_8;
  case 48:
    r0 = s.retval;
    s.tmp_7 = r0;
    s.tmp_10 = scene_Camera_offsetX__P25893_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 408; s.pc = 49; return s.tmp_10;
  case 49:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_7 < s.tmp_9);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1128]) return breakpoint(s, 50, 1128, r0);
  case 50:
    s.tmp_11 = Sprite_left__P25563_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.tmp_12 = scene_Camera_offsetX__P25893_mk(s);
    s.tmp_12.arg0 = s.arg1;
    s.callLocIdx = 409; s.pc = 52; return s.tmp_12;
  case 52:
    r0 = s.retval;
    s.tmp_11.arg1 = r0;
    s.callLocIdx = 410; s.pc = 51; return s.tmp_11;
  case 51:
    r0 = s.retval;
    s.lastBrkId = 1129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1129]) return breakpoint(s, 53, 1129, r0);
  case 53:
    r0 = pxsim_numops_toBoolDecr(s.bounce___40573);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1130]) return breakpoint(s, 54, 1130, r0);
  case 54:
    s.tmp_0 = Sprite_vx__P25522_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vx__P25521_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 411; s.pc = 56; return s.tmp_2;
  case 56:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 412; s.pc = 55; return s.tmp_0;
  case 55:
    r0 = s.retval;
  case 13:
  case 14:
    { step = 20; continue; }
  case 15:
    s.lastBrkId = 1131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1131]) return breakpoint(s, 57, 1131, r0);
  case 57:
    s.tmp_2 = Sprite_right__P25564_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 413; s.pc = 58; return s.tmp_2;
  case 58:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = scene_Camera_offsetX__P25893_mk(s);
    s.tmp_5.arg0 = s.arg1;
    s.callLocIdx = 414; s.pc = 59; return s.tmp_5;
  case 59:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 1132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1132]) return breakpoint(s, 60, 1132, r0);
  case 60:
    s.tmp_7 = Sprite_right__P25565_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.tmp_9 = scene_Camera_offsetX__P25893_mk(s);
    s.tmp_9.arg0 = s.arg1;
    s.callLocIdx = 415; s.pc = 62; return s.tmp_9;
  case 62:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_10 = r0;
    r0 = (s.tmp_8 + s.tmp_10);
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 416; s.pc = 61; return s.tmp_7;
  case 61:
    r0 = s.retval;
    s.lastBrkId = 1133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1133]) return breakpoint(s, 63, 1133, r0);
  case 63:
    r0 = pxsim_numops_toBoolDecr(s.bounce___40573);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 1134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1134]) return breakpoint(s, 64, 1134, r0);
  case 64:
    s.tmp_0 = Sprite_vx__P25522_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vx__P25521_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 417; s.pc = 66; return s.tmp_2;
  case 66:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 418; s.pc = 65; return s.tmp_0;
  case 65:
    r0 = s.retval;
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    s.lastBrkId = 1135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1135]) return breakpoint(s, 67, 1135, r0);
  case 67:
    s.tmp_2 = Sprite_top__P25566_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 419; s.pc = 68; return s.tmp_2;
  case 68:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = scene_Camera_offsetY__P25895_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.callLocIdx = 420; s.pc = 69; return s.tmp_4;
  case 69:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 < s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 1136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1136]) return breakpoint(s, 70, 1136, r0);
  case 70:
    s.tmp_5 = Sprite_top__P25567_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_6 = scene_Camera_offsetY__P25895_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.callLocIdx = 421; s.pc = 72; return s.tmp_6;
  case 72:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 422; s.pc = 71; return s.tmp_5;
  case 71:
    r0 = s.retval;
    s.lastBrkId = 1137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1137]) return breakpoint(s, 73, 1137, r0);
  case 73:
    r0 = pxsim_numops_toBoolDecr(s.bounce___40573);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 1138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1138]) return breakpoint(s, 74, 1138, r0);
  case 74:
    s.tmp_0 = Sprite_vy__P25524_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vy__P25523_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 423; s.pc = 76; return s.tmp_2;
  case 76:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 424; s.pc = 75; return s.tmp_0;
  case 75:
    r0 = s.retval;
  case 21:
  case 22:
    { step = 28; continue; }
  case 23:
    s.lastBrkId = 1139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1139]) return breakpoint(s, 77, 1139, r0);
  case 77:
    s.tmp_2 = Sprite_bottom__P25568_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 425; s.pc = 78; return s.tmp_2;
  case 78:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = scene_Camera_offsetY__P25895_mk(s);
    s.tmp_5.arg0 = s.arg1;
    s.callLocIdx = 426; s.pc = 79; return s.tmp_5;
  case 79:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 26; continue; }
    s.lastBrkId = 1140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1140]) return breakpoint(s, 80, 1140, r0);
  case 80:
    s.tmp_7 = Sprite_bottom__P25569_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.tmp_9 = scene_Camera_offsetY__P25895_mk(s);
    s.tmp_9.arg0 = s.arg1;
    s.callLocIdx = 427; s.pc = 82; return s.tmp_9;
  case 82:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_10 = r0;
    r0 = (s.tmp_8 + s.tmp_10);
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 428; s.pc = 81; return s.tmp_7;
  case 81:
    r0 = s.retval;
    s.lastBrkId = 1141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1141]) return breakpoint(s, 83, 1141, r0);
  case 83:
    r0 = pxsim_numops_toBoolDecr(s.bounce___40573);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1142]) return breakpoint(s, 84, 1142, r0);
  case 84:
    s.tmp_0 = Sprite_vy__P25524_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vy__P25523_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 429; s.pc = 86; return s.tmp_2;
  case 86:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 430; s.pc = 85; return s.tmp_0;
  case 85:
    r0 = s.retval;
  case 24:
  case 25:
  case 26:
  case 27:
  case 28:
  case 29:
  case 30:
    s.lastBrkId = 1143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1143]) return breakpoint(s, 87, 1143, r0);
  case 87:
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    s.lastBrkId = 1144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1144]) return breakpoint(s, 88, 1144, r0);
  case 88:
    s.tmp_1 = sprites_BaseSpriteSayRenderer__C25424_v1_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg2;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, sprites_BaseSpriteSayRenderer__C25424_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.update;
    s.pc = 89; return s.tmp_1;
  case 89:
    r0 = s.retval;
  case 31:
  case 32:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite___update__P25579.info = {"start":21606,"length":1363,"line":714,"column":4,"endLine":750,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__update","argumentNames":["this","camera","dt"]}

function Sprite___update__P25579_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___update__P25579, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  bounce___40573: undefined,
  tm___40578: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_isOutOfScreen__P25577(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___40673 = undefined;
    s.oy___40681 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1083;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1083]) return breakpoint(s, 11, 1083, r0);
  case 11:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg1.fields["drawOffsetX"];
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.ox___40673 = (s.tmp_2);
    s.lastBrkId = 1084;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1084]) return breakpoint(s, 12, 1084, r0);
  case 12:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["drawOffsetY"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.oy___40681 = (s.tmp_2);
    s.lastBrkId = 1085;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1085]) return breakpoint(s, 13, 1085, r0);
  case 13:
    s.tmp_3 = Sprite_right__P25564_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 368; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.ox___40673);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_6 = Sprite_bottom__P25568_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 369; s.pc = 15; return s.tmp_6;
  case 15:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.oy___40681);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 < 0);
  case 6:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_7;
    { step = 8; continue; }
  case 7:
    s.tmp_10 = Sprite_left__P25562_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 370; s.pc = 16; return s.tmp_10;
  case 16:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 - s.ox___40673);
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_11 = r0;
    r0 = (s.tmp_8 > s.tmp_11);
  case 8:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBool(s.tmp_12);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_12;
    { step = 10; continue; }
  case 9:
    s.tmp_15 = Sprite_top__P25566_mk(s);
    s.tmp_15.arg0 = s.arg0;
    s.callLocIdx = 371; s.pc = 17; return s.tmp_15;
  case 17:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = (s.tmp_14 - s.oy___40681);
    s.tmp_13 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_16 = r0;
    r0 = (s.tmp_13 > s.tmp_16);
  case 10:
    // jmp value (already in r0)
    s.tmp_17 = r0;
    r0 = s.tmp_17;
    return leave(s, r0)
  default: oops()
} } }
Sprite_isOutOfScreen__P25577.info = {"start":18931,"length":358,"line":640,"column":4,"endLine":644,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isOutOfScreen","argumentNames":["this","camera"]}

function Sprite_isOutOfScreen__P25577_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isOutOfScreen__P25577, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  ox___40673: undefined,
  oy___40681: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_bottom__P25569(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1067]) return breakpoint(s, 1, 1067, r0);
  case 1:
    s.tmp_0 = Sprite_top__P25567_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Sprite_height__P25561_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 361; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 362; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_bottom__P25569.info = {"start":13305,"length":73,"line":473,"column":4,"endLine":475,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"bottom","argumentNames":["this","value"]}

function Sprite_bottom__P25569_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_bottom__P25569, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_right__P25565(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1062]) return breakpoint(s, 1, 1062, r0);
  case 1:
    s.tmp_0 = Sprite_left__P25563_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Sprite_width__P25560_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 353; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 354; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_right__P25565.info = {"start":12468,"length":71,"line":443,"column":4,"endLine":445,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"right","argumentNames":["this","value"]}

function Sprite_right__P25565_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_right__P25565, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSpriteSayRenderer_update__P25427(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C25424_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_update__P25427.info = {"start":250,"length":68,"line":9,"column":8,"endLine":11,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"update","argumentNames":["this","dt","camera","owner"]}

function sprites_BaseSpriteSayRenderer_update__P25427_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_update__P25427, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_data__P25540(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1000;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1000]) return breakpoint(s, 1, 1000, r0);
  case 1:
    r0 = (s.arg0).fields["_data"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_data__P25540.info = {"start":6536,"length":56,"line":241,"column":4,"endLine":243,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"data","argumentNames":["this","value"]}

function Sprite_data__P25540_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_data__P25540, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_data__P25539(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 997;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[997]) return breakpoint(s, 3, 997, r0);
  case 3:
    r0 = s.arg0.fields["_data"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 998;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[998]) return breakpoint(s, 4, 998, r0);
  case 4:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_data"] = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 999;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[999]) return breakpoint(s, 5, 999, r0);
  case 5:
    r0 = s.arg0.fields["_data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_data__P25539.info = {"start":6438,"length":92,"line":236,"column":4,"endLine":239,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"data","argumentNames":["this"]}
Sprite_data__P25539.isGetter = true;

function Sprite_data__P25539_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_data__P25539, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function scene_BackgroundLayer_constructor__P25793(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_BackgroundLayer__C25786_VT)) failedCast(r0);
    s.lastBrkId = 1617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1617]) return breakpoint(s, 7, 1617, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_max__P23501_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 783; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["distance"] = (s.tmp_1);
    s.lastBrkId = 1618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1618]) return breakpoint(s, 9, 1618, r0);
  case 9:
    r0 = (s.arg0).fields["img"] = (s.arg3);
    s.lastBrkId = 1619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1619]) return breakpoint(s, 10, 1619, r0);
  case 10:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 1:
    s.lastBrkId = 1620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1620]) return breakpoint(s, 11, 1620, r0);
  case 11:
    r0 = (s.arg0).fields["repeatX"] = (true);
    s.lastBrkId = 1621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1621]) return breakpoint(s, 12, 1621, r0);
  case 12:
    r0 = (s.arg0).fields["repeatY"] = (true);
    s.lastBrkId = 1622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1622]) return breakpoint(s, 13, 1622, r0);
  case 13:
    r0 = (s.arg0).fields["alignX"] = (5);
    s.lastBrkId = 1623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1623]) return breakpoint(s, 14, 1623, r0);
  case 14:
    r0 = (s.arg0).fields["alignY"] = (5);
    s.lastBrkId = 1624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1624]) return breakpoint(s, 15, 1624, r0);
  case 15:
    { step = 6; continue; }
  case 2:
  case 3:
    s.lastBrkId = 1625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1625]) return breakpoint(s, 16, 1625, r0);
  case 16:
    r0 = (s.arg0).fields["repeatX"] = (false);
    s.lastBrkId = 1626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1626]) return breakpoint(s, 17, 1626, r0);
  case 17:
    r0 = (s.arg0).fields["repeatY"] = (true);
    s.lastBrkId = 1627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1627]) return breakpoint(s, 18, 1627, r0);
  case 18:
    r0 = (s.arg0).fields["alignX"] = (s.arg2);
    s.lastBrkId = 1628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1628]) return breakpoint(s, 19, 1628, r0);
  case 19:
    r0 = (s.arg0).fields["alignY"] = (5);
    s.lastBrkId = 1629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1629]) return breakpoint(s, 20, 1629, r0);
  case 20:
    { step = 6; continue; }
  case 4:
  case 5:
    s.lastBrkId = 1630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1630]) return breakpoint(s, 21, 1630, r0);
  case 21:
    r0 = (s.arg0).fields["repeatX"] = (true);
    s.lastBrkId = 1631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1631]) return breakpoint(s, 22, 1631, r0);
  case 22:
    r0 = (s.arg0).fields["repeatY"] = (false);
    s.lastBrkId = 1632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1632]) return breakpoint(s, 23, 1632, r0);
  case 23:
    r0 = (s.arg0).fields["alignX"] = (5);
    s.lastBrkId = 1633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1633]) return breakpoint(s, 24, 1633, r0);
  case 24:
    r0 = (s.arg0).fields["alignY"] = (s.arg2);
    s.lastBrkId = 1634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1634]) return breakpoint(s, 25, 1634, r0);
  case 25:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_BackgroundLayer_constructor__P25793.info = {"start":1936,"length":1117,"line":72,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["this","distance","alignment","img"]}

function scene_BackgroundLayer_constructor__P25793_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_BackgroundLayer_constructor__P25793, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Camera_y__P25898(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C25888_VT)) failedCast(r0);
    s.lastBrkId = 1815;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1815]) return breakpoint(s, 1, 1815, r0);
  case 1:
    r0 = s.arg0.fields["drawOffsetY"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_y__P25898.info = {"start":1398,"length":79,"line":49,"column":8,"endLine":51,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"y","argumentNames":["this"]}
scene_Camera_y__P25898.isGetter = true;

function scene_Camera_y__P25898_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_y__P25898, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_Camera_x__P25897(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C25888_VT)) failedCast(r0);
    s.lastBrkId = 1814;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1814]) return breakpoint(s, 1, 1814, r0);
  case 1:
    r0 = s.arg0.fields["drawOffsetX"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_x__P25897.info = {"start":1311,"length":78,"line":46,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"x","argumentNames":["this"]}
scene_Camera_x__P25897.isGetter = true;

function scene_Camera_x__P25897_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_x__P25897, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function particles_ParticleSource___draw__P26214(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.current___40795 = undefined;
    s.left___40798 = undefined;
    s.top___40808 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2242]) return breakpoint(s, 9, 2242, r0);
  case 9:
    r0 = s.arg0.fields["head"];
    s.current___40795 = (r0);
    s.lastBrkId = 2243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2243]) return breakpoint(s, 10, 2243, r0);
  case 10:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = s.arg1.fields["drawOffsetX"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1131; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.left___40798 = (s.tmp_3);
    s.lastBrkId = 2244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2244]) return breakpoint(s, 12, 2244, r0);
  case 12:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    s.tmp_2 = Fx8__P23520_mk(s);
    r0 = s.arg1.fields["drawOffsetY"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1132; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.top___40808 = (s.tmp_3);
    s.lastBrkId = 2245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2245]) return breakpoint(s, 14, 2245, r0);
  case 14:
  case 5:
    s.lastBrkId = 2246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2246]) return breakpoint(s, 15, 2246, r0);
  case 15:
    r0 = pxsim_numops_toBoolDecr(s.current___40795);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2247]) return breakpoint(s, 16, 2247, r0);
  case 16:
    r0 = s.current___40795.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2248]) return breakpoint(s, 17, 2248, r0);
  case 17:
    s.tmp_2 = particles_ParticleSource_drawParticle__P28180_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.current___40795;
    s.tmp_2.arg2 = s.left___40798;
    s.tmp_2.arg3 = s.top___40808;
    s.callLocIdx = 1133; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
  case 6:
  case 7:
    s.lastBrkId = 2249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2249]) return breakpoint(s, 19, 2249, r0);
  case 19:
    r0 = s.current___40795.fields["next"];
    s.current___40795 = (r0);
    { step = 5; continue; }
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource___draw__P26214.info = {"start":3216,"length":468,"line":112,"column":8,"endLine":122,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"__draw","argumentNames":["this","camera"]}

function particles_ParticleSource___draw__P26214_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource___draw__P26214, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  current___40795: undefined,
  left___40798: undefined,
  top___40808: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_drawParticle__P28180(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C26208_VT)) failedCast(r0);
    s.lastBrkId = 2321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2321]) return breakpoint(s, 1, 2321, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory__C26244_v1_4_mk(s);
    r0 = s.arg0.fields["_factory"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_1 = Fx_sub__P23530_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 1155; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_2 = Fx_sub__P23530_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg3;
    s.callLocIdx = 1156; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleFactory__C26244_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawParticle;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_drawParticle__P28180.info = {"start":8615,"length":174,"line":287,"column":8,"endLine":289,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"drawParticle","argumentNames":["this","p","screenLeft","screenTop"]}

function particles_ParticleSource_drawParticle__P28180_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_drawParticle__P28180, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_ParticleFactory_drawParticle__P26247(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C26244_VT)) failedCast(r0);
    s.lastBrkId = 2392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2392]) return breakpoint(s, 1, 2392, r0);
  case 1:
    s.tmp_0 = r0 = globals.screen___25204;
    s.tmp_2 = Fx_toInt__P23543_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1192; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P23543_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1193; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_drawParticle__P26247.info = {"start":2265,"length":118,"line":85,"column":8,"endLine":87,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","particle","x","y"]}

function particles_ParticleFactory_drawParticle__P26247_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_drawParticle__P26247, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_BaseSprite___update__P25272(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C25264_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___update__P25272.info = {"start":1027,"length":46,"line":45,"column":8,"endLine":45,"endColumn":54,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__update","argumentNames":["this","camera","dt"]}

function sprites_BaseSprite___update__P25272_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___update__P25272, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function sprites_BaseSprite___draw__P25270(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C25264_VT)) failedCast(r0);
    s.lastBrkId = 731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[731]) return breakpoint(s, 3, 731, r0);
  case 3:
    s.tmp_1 = sprites_BaseSprite__C25264_v0_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, sprites_BaseSprite__C25264_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.__visible;
    s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[732]) return breakpoint(s, 5, 732, r0);
  case 5:
    s.tmp_2 = sprites_BaseSprite__C25264_v2_2_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    if (!checkSubtype(s.tmp_2.arg0, sprites_BaseSprite__C25264_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.__drawCore;
    s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___draw__P25270.info = {"start":840,"length":131,"line":37,"column":8,"endLine":41,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__draw","argumentNames":["this","camera"]}

function sprites_BaseSprite___draw__P25270_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___draw__P25270, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___drawCore__P25271(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C25264_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___drawCore__P25271.info = {"start":981,"length":36,"line":43,"column":8,"endLine":43,"endColumn":44,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function sprites_BaseSprite___drawCore__P25271_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___drawCore__P25271, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___visible__P25267(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C25264_VT)) failedCast(r0);
    s.lastBrkId = 726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[726]) return breakpoint(s, 1, 726, r0);
  case 1:
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___visible__P25267.info = {"start":524,"length":57,"line":22,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__visible","argumentNames":["this"]}

function sprites_BaseSprite___visible__P25267_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___visible__P25267, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ShapeFactory_createParticle__P26274(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___40859 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C26270_VT)) failedCast(r0);
    s.lastBrkId = 2428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2428]) return breakpoint(s, 1, 2428, r0);
  case 1:
    s.tmp_0 = particles_AreaFactory_createParticle__P26260_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1227; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.p___40859 = (r0);
    s.lastBrkId = 2429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2429]) return breakpoint(s, 3, 2429, r0);
  case 3:
    s.tmp_0 = r0 = s.p___40859;
    s.tmp_2 = Math_FastRandom_randomRange__P26120_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 1;
    s.tmp_2.arg2 = 14;
    s.callLocIdx = 1228; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["color"] = (s.tmp_1);
    s.lastBrkId = 2430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2430]) return breakpoint(s, 5, 2430, r0);
  case 5:
    r0 = s.p___40859;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_createParticle__P26274.info = {"start":7505,"length":178,"line":239,"column":8,"endLine":243,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_ShapeFactory_createParticle__P26274_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_createParticle__P26274, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  p___40859: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AreaFactory_createParticle__P26260(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___40871 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C26254_VT)) failedCast(r0);
    s.lastBrkId = 2412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2412]) return breakpoint(s, 3, 2412, r0);
  case 3:
    s.tmp_0 = particles_SprayFactory_createParticle__P26250_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1209; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.p___40871 = (r0);
    s.lastBrkId = 2413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2413]) return breakpoint(s, 5, 2413, r0);
  case 5:
    s.tmp_0 = r0 = s.p___40871;
    s.tmp_2 = Math_FastRandom_randomRange__P26120_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["minLifespan"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg0.fields["maxLifespan"];
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1210; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 2414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2414]) return breakpoint(s, 7, 2414, r0);
  case 7:
    s.tmp_0 = r0 = s.p___40871;
    s.tmp_2 = Fx_iadd__P23529_mk(s);
    s.tmp_4 = Math_FastRandom_randomRange__P26120_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_4.arg2 = r0;
    s.callLocIdx = 1211; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2.arg0 = r0;
    r0 = s.p___40871.fields["_x"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1212; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 2415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2415]) return breakpoint(s, 10, 2415, r0);
  case 10:
    s.tmp_1 = if_height_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "height");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["height"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["height"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1214; s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_height_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "height");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["height"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["height"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1215; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.p___40871;
    s.tmp_7 = Fx_iadd__P23529_mk(s);
    s.tmp_9 = Math_FastRandom_randomRange__P26120_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = 0;
    r0 = s.arg0.fields["yRange"];
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 1213; s.pc = 14; return s.tmp_9;
  case 14:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_8 - s.tmp_4);
    s.tmp_7.arg0 = r0;
    r0 = s.p___40871.fields["_y"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 1216; s.pc = 13; return s.tmp_7;
  case 13:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_y"] = (s.tmp_6);
    s.lastBrkId = 2416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2416]) return breakpoint(s, 15, 2416, r0);
  case 15:
    r0 = s.p___40871;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_createParticle__P26260.info = {"start":4334,"length":426,"line":148,"column":8,"endLine":156,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_AreaFactory_createParticle__P26260_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_createParticle__P26260, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  p___40871: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_SprayFactory_createParticle__P26250(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___40919 = undefined;
    s.angle___40923 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C26248_VT)) failedCast(r0);
    s.lastBrkId = 2397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2397]) return breakpoint(s, 1, 2397, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory_createParticle__P26246_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1198; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.p___40919 = (r0);
    s.lastBrkId = 2398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2398]) return breakpoint(s, 3, 2398, r0);
  case 3:
    r0 = s.arg0.fields["minAngle"];
    s.tmp_1 = r0;
    s.tmp_3 = Math_FastRandom_randomRange__P26120_mk(s);
    s.tmp_3.arg0 = globals.galois___28194;
    s.tmp_3.arg1 = 0;
    r0 = s.arg0.fields["spread"];
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1199; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % 100);
    s.angle___40923 = (r0);
    s.lastBrkId = 2399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2399]) return breakpoint(s, 5, 2399, r0);
  case 5:
    s.tmp_0 = r0 = s.p___40919;
    s.tmp_2 = Fx_mul__P23531_mk(s);
    r0 = pxsim_Array__getAt(globals.cachedSin___28189, s.angle___40923);
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["speed"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1200; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vx"] = (s.tmp_1);
    s.lastBrkId = 2400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2400]) return breakpoint(s, 7, 2400, r0);
  case 7:
    s.tmp_0 = r0 = s.p___40919;
    s.tmp_2 = Fx_mul__P23531_mk(s);
    r0 = pxsim_Array__getAt(globals.cachedCos___28190, s.angle___40923);
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["speed"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1201; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    s.lastBrkId = 2401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2401]) return breakpoint(s, 9, 2401, r0);
  case 9:
    r0 = s.p___40919;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_createParticle__P26250.info = {"start":2851,"length":333,"line":105,"column":8,"endLine":113,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_SprayFactory_createParticle__P26250_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_createParticle__P26250, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  p___40919: undefined,
  angle___40923: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Scene_data__P25971(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C25947_VT)) failedCast(r0);
    s.lastBrkId = 1893;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1893]) return breakpoint(s, 1, 1893, r0);
  case 1:
    r0 = s.arg0.fields["_data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Scene_data__P25971.info = {"start":6765,"length":53,"line":184,"column":8,"endLine":186,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"data","argumentNames":["this"]}
scene_Scene_data__P25971.isGetter = true;

function scene_Scene_data__P25971_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_data__P25971, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMap_constructor__P25844(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1718;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1718]) return breakpoint(s, 1, 1718, r0);
  case 1:
    r0 = (s.arg0).fields["_layer"] = (1);
    s.lastBrkId = 1719;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1719]) return breakpoint(s, 2, 1719, r0);
  case 2:
    s.tmp_0 = tiles_TileMap_scale__P25846_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 803; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 1720;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1720]) return breakpoint(s, 4, 1720, r0);
  case 4:
    r0 = pxsim_pxtcore_mkAction(1, tiles_TileMap_inline__P31082);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = scene_createRenderable__P25911_mk(s);
    s.tmp_3.arg0 = -1;
    s.tmp_3.arg1 = s.tmp_0;
    s.tmp_3.arg2 = undefined;
    s.callLocIdx = 805; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["renderable"] = (s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_constructor__P25844.info = {"start":8891,"length":268,"line":300,"column":8,"endLine":308,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","scale"]}

function tiles_TileMap_constructor__P25844_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_constructor__P25844, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_inline__P31082(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = tiles_TileMap_draw__P27784_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 804; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_inline__P31082.info = {"start":9109,"length":25,"line":306,"column":16,"endLine":306,"endColumn":41,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["t","c"]}

function tiles_TileMap_inline__P31082_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_inline__P31082, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_draw__P27784(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.bitmask___31093 = undefined;
    s.offsetX___31099 = undefined;
    s.offsetY___31104 = undefined;
    s.x0___31109 = undefined;
    s.xn___31116 = undefined;
    s.y0___31133 = undefined;
    s.yn___31140 = undefined;
    s.x___31157 = undefined;
    s.y___31163 = undefined;
    s.index___31169 = undefined;
    s.tile___31176 = undefined;
    s.x___31212 = undefined;
    s.xLine___31218 = undefined;
    s.y___31244 = undefined;
    s.yLine___31250 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1734;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1734]) return breakpoint(s, 24, 1734, r0);
  case 24:
    s.tmp_3 = tiles_TileMap_enabled__P25854_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 820; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1735;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1735]) return breakpoint(s, 26, 1735, r0);
  case 26:
    { step = 23; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1736;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1736]) return breakpoint(s, 27, 1736, r0);
  case 27:
    s.tmp_6 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 821; s.pc = 28; return s.tmp_6;
  case 28:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (1 << s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.bitmask___31093 = (r0);
    s.lastBrkId = 1737;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1737]) return breakpoint(s, 29, 1737, r0);
  case 29:
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & s.bitmask___31093);
    s.offsetX___31099 = (r0);
    s.lastBrkId = 1738;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1738]) return breakpoint(s, 30, 1738, r0);
  case 30:
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & s.bitmask___31093);
    s.offsetY___31104 = (r0);
    s.lastBrkId = 1739;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1739]) return breakpoint(s, 31, 1739, r0);
  case 31:
    s.tmp_0 = Math_max__P23501_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_1 = r0;
    s.tmp_3 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 822; s.pc = 33; return s.tmp_3;
  case 33:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >> s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 823; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.x0___31109 = (r0);
    s.lastBrkId = 1740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1740]) return breakpoint(s, 34, 1740, r0);
  case 34:
    s.tmp_0 = Math_min__P23502_mk(s);
    s.tmp_1 = tiles_TileMapData_width__P25826_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 824; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    s.tmp_7 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 825; s.pc = 37; return s.tmp_7;
  case 37:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 >> s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 826; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.xn___31116 = (r0);
    s.lastBrkId = 1741;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1741]) return breakpoint(s, 38, 1741, r0);
  case 38:
    s.tmp_0 = Math_max__P23501_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_1 = r0;
    s.tmp_3 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 827; s.pc = 40; return s.tmp_3;
  case 40:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >> s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 828; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.y0___31133 = (r0);
    s.lastBrkId = 1742;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1742]) return breakpoint(s, 41, 1742, r0);
  case 41:
    s.tmp_0 = Math_min__P23502_mk(s);
    s.tmp_1 = tiles_TileMapData_height__P25827_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 829; s.pc = 43; return s.tmp_1;
  case 43:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    s.tmp_7 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 830; s.pc = 44; return s.tmp_7;
  case 44:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 >> s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 831; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.yn___31140 = (r0);
    s.lastBrkId = 1743;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1743]) return breakpoint(s, 45, 1743, r0);
  case 45:
    s.x___31157 = (s.x0___31109);
    s.lastBrkId = 1744;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1744]) return breakpoint(s, 46, 1744, r0);
  case 46:
  case 3:
    s.lastBrkId = 1745;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1745]) return breakpoint(s, 47, 1745, r0);
  case 47:
    r0 = (s.x___31157 <= s.xn___31116);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1746;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1746]) return breakpoint(s, 48, 1746, r0);
  case 48:
    s.y___31163 = (s.y0___31133);
    s.lastBrkId = 1747;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1747]) return breakpoint(s, 49, 1747, r0);
  case 49:
  case 4:
    s.lastBrkId = 1748;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1748]) return breakpoint(s, 50, 1748, r0);
  case 50:
    r0 = (s.y___31163 <= s.yn___31140);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1749;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1749]) return breakpoint(s, 51, 1749, r0);
  case 51:
    s.tmp_1 = tiles_TileMapData_getTile__P25830_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.x___31157;
    s.tmp_1.arg2 = s.y___31163;
    s.callLocIdx = 832; s.pc = 52; return s.tmp_1;
  case 52:
    r0 = s.retval;
    s.index___31169 = (r0);
    s.lastBrkId = 1750;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1750]) return breakpoint(s, 53, 1750, r0);
  case 53:
    s.tmp_0 = tiles_TileMapData_getTileImage__P25833_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___31169;
    s.callLocIdx = 833; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.tile___31176 = (r0);
    s.lastBrkId = 1751;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1751]) return breakpoint(s, 55, 1751, r0);
  case 55:
    r0 = pxsim_numops_toBoolDecr(s.tile___31176);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1752;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1752]) return breakpoint(s, 56, 1752, r0);
  case 56:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_1 = r0 = s.tile___31176;
    r0 = (s.x___31157 - s.x0___31109);
    s.tmp_4 = r0;
    s.tmp_6 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 834; s.pc = 57; return s.tmp_6;
  case 57:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 << s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.offsetX___31099);
    s.tmp_2 = r0;
    r0 = (s.y___31163 - s.y0___31133);
    s.tmp_9 = r0;
    s.tmp_11 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.callLocIdx = 835; s.pc = 58; return s.tmp_11;
  case 58:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9 << s.tmp_10);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 - s.offsetY___31104);
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_7);
  case 5:
  case 6:
    s.lastBrkId = 1753;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1753]) return breakpoint(s, 59, 1753, r0);
  case 59:
    r0 = (s.y___31163 + 1);
    s.y___31163 = (r0);
    { step = 4; continue; }
  case 7:
    s.lastBrkId = 1754;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1754]) return breakpoint(s, 60, 1754, r0);
  case 60:
    r0 = (s.x___31157 + 1);
    s.x___31157 = (r0);
    { step = 3; continue; }
  case 8:
    s.lastBrkId = 1755;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1755]) return breakpoint(s, 61, 1755, r0);
  case 61:
    r0 = pxsim_numops_toBoolDecr(globals.debug___26057);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 1756;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1756]) return breakpoint(s, 62, 1756, r0);
  case 62:
    s.x___31212 = (s.x0___31109);
    s.lastBrkId = 1757;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1757]) return breakpoint(s, 63, 1757, r0);
  case 63:
  case 9:
    s.lastBrkId = 1758;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1758]) return breakpoint(s, 64, 1758, r0);
  case 64:
    r0 = (s.x___31212 <= s.xn___31116);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1759;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1759]) return breakpoint(s, 65, 1759, r0);
  case 65:
    r0 = (s.x___31212 - s.x0___31109);
    s.tmp_2 = r0;
    s.tmp_4 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 836; s.pc = 66; return s.tmp_4;
  case 66:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.offsetX___31099);
    s.xLine___31218 = (r0);
    s.lastBrkId = 1760;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1760]) return breakpoint(s, 67, 1760, r0);
  case 67:
    r0 = (s.xLine___31218 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_1 = r0 = s.xLine___31218;
    r0 = pxsim_ImageMethods.width(globals.screen___25204);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1761;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1761]) return breakpoint(s, 68, 1761, r0);
  case 68:
    s.tmp_4 = helpers_imageDrawLine__P25132_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.tmp_4.arg1 = s.xLine___31218;
    s.tmp_4.arg2 = 0;
    s.tmp_4.arg3 = s.xLine___31218;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_4.arg4 = r0;
    s.tmp_4.arg5 = 1;
    s.callLocIdx = 837; s.pc = 69; return s.tmp_4;
  case 69:
    r0 = s.retval;
  case 12:
  case 13:
    s.lastBrkId = 1762;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1762]) return breakpoint(s, 70, 1762, r0);
  case 70:
    r0 = (s.x___31212 + 1);
    s.x___31212 = (r0);
    { step = 9; continue; }
  case 14:
    s.lastBrkId = 1763;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1763]) return breakpoint(s, 71, 1763, r0);
  case 71:
    s.y___31244 = (s.y0___31133);
    s.lastBrkId = 1764;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1764]) return breakpoint(s, 72, 1764, r0);
  case 72:
  case 15:
    s.lastBrkId = 1765;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1765]) return breakpoint(s, 73, 1765, r0);
  case 73:
    r0 = (s.y___31244 <= s.yn___31140);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1766;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1766]) return breakpoint(s, 74, 1766, r0);
  case 74:
    r0 = (s.y___31244 - s.y0___31133);
    s.tmp_2 = r0;
    s.tmp_4 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 838; s.pc = 75; return s.tmp_4;
  case 75:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.offsetY___31104);
    s.yLine___31250 = (r0);
    s.lastBrkId = 1767;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1767]) return breakpoint(s, 76, 1767, r0);
  case 76:
    r0 = (s.yLine___31250 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 16:
    s.tmp_1 = r0 = s.yLine___31250;
    r0 = pxsim_ImageMethods.height(globals.screen___25204);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
  case 17:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 1768;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1768]) return breakpoint(s, 77, 1768, r0);
  case 77:
    s.tmp_4 = helpers_imageDrawLine__P25132_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.tmp_4.arg1 = 0;
    s.tmp_4.arg2 = s.yLine___31250;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_4.arg3 = r0;
    s.tmp_4.arg4 = s.yLine___31250;
    s.tmp_4.arg5 = 1;
    s.callLocIdx = 839; s.pc = 78; return s.tmp_4;
  case 78:
    r0 = s.retval;
  case 18:
  case 19:
    s.lastBrkId = 1769;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1769]) return breakpoint(s, 79, 1769, r0);
  case 79:
    r0 = (s.y___31244 + 1);
    s.y___31244 = (r0);
    { step = 15; continue; }
  case 20:
  case 21:
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_draw__P27784.info = {"start":13949,"length":2224,"line":457,"column":8,"endLine":512,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"draw","argumentNames":["this","target","camera"]}

function tiles_TileMap_draw__P27784_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_draw__P27784, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  bitmask___31093: undefined,
  offsetX___31099: undefined,
  offsetY___31104: undefined,
  x0___31109: undefined,
  xn___31116: undefined,
  y0___31133: undefined,
  yn___31140: undefined,
  x___31157: undefined,
  y___31163: undefined,
  index___31169: undefined,
  tile___31176: undefined,
  x___31212: undefined,
  xLine___31218: undefined,
  y___31244: undefined,
  yLine___31250: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_scale__P25846(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C25842_VT)) failedCast(r0);
    s.lastBrkId = 1722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1722]) return breakpoint(s, 3, 1722, r0);
  case 3:
    r0 = (s.arg0).fields["_scale"] = (s.arg1);
    s.lastBrkId = 1723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1723]) return breakpoint(s, 4, 1723, r0);
  case 4:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1724]) return breakpoint(s, 5, 1724, r0);
  case 5:
    s.tmp_1 = tiles_TileMapData_scale__P25829_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 806; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_scale__P25846.info = {"start":9234,"length":144,"line":314,"column":8,"endLine":319,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this","s"]}

function tiles_TileMap_scale__P25846_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_scale__P25846, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_AnyButton_isPressed__P27655(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctrl___40968 = undefined;
    s.b___40972 = undefined;
    s.unnamed362___U2 = undefined;
    s.unnamed363___U3 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_AnyButton__C27647_VT)) failedCast(r0);
    s.lastBrkId = 826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[826]) return breakpoint(s, 6, 826, r0);
  case 6:
    s.tmp_0 = controller__player1__P25298_mk(s);
    s.callLocIdx = 190; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.ctrl___40968 = (r0);
    s.lastBrkId = 827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[827]) return breakpoint(s, 8, 827, r0);
  case 8:
    s.b___40972 = (undefined);
    r0 = s.ctrl___40968.fields["buttons"];
    s.unnamed362___U2 = (r0);
    s.unnamed363___U3 = (0);
    s.lastBrkId = 828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[828]) return breakpoint(s, 9, 828, r0);
  case 9:
  case 1:
    s.tmp_0 = r0 = s.unnamed363___U3;
    r0 = pxsim_Array__length(s.unnamed362___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed362___U2, s.unnamed363___U3);
    s.b___40972 = (r0);
    s.lastBrkId = 829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[829]) return breakpoint(s, 10, 829, r0);
  case 10:
    s.tmp_3 = controller_Button__C25355_v0_1_mk(s);
    s.tmp_3.arg0 = s.b___40972;
    if (!checkSubtype(s.tmp_3.arg0, controller_Button__C25355_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.isPressed;
    s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[830]) return breakpoint(s, 12, 830, r0);
  case 12:
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.unnamed363___U3 + 1);
    s.unnamed363___U3 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed362___U2 = (undefined);
    s.lastBrkId = 831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[831]) return breakpoint(s, 13, 831, r0);
  case 13:
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
controller_AnyButton_isPressed__P27655.info = {"start":13715,"length":202,"line":416,"column":8,"endLine":423,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"isPressed","argumentNames":["this"]}

function controller_AnyButton_isPressed__P27655_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_AnyButton_isPressed__P27655, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ctrl___40968: undefined,
  b___40972: undefined,
  unnamed362___U2: undefined,
  unnamed363___U3: undefined,
  arg0: undefined,
} }





function controller_Button_toString__P25360(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C25355_VT)) failedCast(r0);
    s.lastBrkId = 842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[842]) return breakpoint(s, 3, 842, r0);
  case 3:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "down";
    { step = 2; continue; }
  case 1:
    r0 = "up";
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("btn ", s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, " ");
    s.tmp_2 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_6);
    return leave(s, r0)
  default: oops()
} } }
controller_Button_toString__P25360.info = {"start":1894,"length":100,"line":73,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"toString","argumentNames":["this"]}

function controller_Button_toString__P25360_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_toString__P25360, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function sprites_BaseSpriteSayRenderer_constructor__P25425(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C25424_VT)) failedCast(r0);
    r0 = (s.arg0).fields["text"] = (s.arg1);
    r0 = (s.arg0).fields["fgColor"] = (s.arg2);
    r0 = (s.arg0).fields["bgColor"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_constructor__P25425.info = {"start":69,"length":92,"line":2,"column":8,"endLine":3,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"inline","argumentNames":["this","text","fgColor","bgColor"]}

function sprites_BaseSpriteSayRenderer_constructor__P25425_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_constructor__P25425, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_StaticObstacle_width__P25663(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C25653_VT)) failedCast(r0);
    s.lastBrkId = 1296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1296]) return breakpoint(s, 1, 1296, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_width__P25663.info = {"start":1088,"length":68,"line":48,"column":8,"endLine":50,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"width","argumentNames":["this"]}
sprites_StaticObstacle_width__P25663.isGetter = true;

function sprites_StaticObstacle_width__P25663_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_width__P25663, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_height__P25662(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C25653_VT)) failedCast(r0);
    s.lastBrkId = 1295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1295]) return breakpoint(s, 1, 1295, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_height__P25662.info = {"start":1008,"length":70,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"height","argumentNames":["this"]}
sprites_StaticObstacle_height__P25662.isGetter = true;

function sprites_StaticObstacle_height__P25662_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_height__P25662, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_y__P25661(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C25653_VT)) failedCast(r0);
    s.lastBrkId = 1294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1294]) return breakpoint(s, 1, 1294, r0);
  case 1:
    r0 = s.arg0.fields["top"];
    s.tmp_0 = r0;
    s.tmp_3 = sprites_StaticObstacle_height__P25662_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 541; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_y__P25661.info = {"start":921,"length":77,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"y","argumentNames":["this"]}
sprites_StaticObstacle_y__P25661.isGetter = true;

function sprites_StaticObstacle_y__P25661_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_y__P25661, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_x__P25660(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C25653_VT)) failedCast(r0);
    s.lastBrkId = 1293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1293]) return breakpoint(s, 1, 1293, r0);
  case 1:
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    s.tmp_3 = sprites_StaticObstacle_width__P25663_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 540; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_x__P25660.info = {"start":834,"length":77,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"x","argumentNames":["this"]}
sprites_StaticObstacle_x__P25660.isGetter = true;

function sprites_StaticObstacle_x__P25660_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_x__P25660, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_top__P25808(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C25800_VT)) failedCast(r0);
    s.lastBrkId = 1688;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1688]) return breakpoint(s, 1, 1688, r0);
  case 1:
    r0 = s.arg0.fields["_row"];
    s.tmp_0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_3 = tiles_Location_tileMap__P25802_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 793; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 794; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 << s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_top__P25808.info = {"start":1791,"length":83,"line":68,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"top","argumentNames":["this"]}
tiles_Location_top__P25808.isGetter = true;

function tiles_Location_top__P25808_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_top__P25808, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_left__P25807(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C25800_VT)) failedCast(r0);
    s.lastBrkId = 1687;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1687]) return breakpoint(s, 1, 1687, r0);
  case 1:
    r0 = s.arg0.fields["_col"];
    s.tmp_0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_3 = tiles_Location_tileMap__P25802_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 791; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 792; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 << s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_left__P25807.info = {"start":1579,"length":84,"line":61,"column":8,"endLine":63,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"left","argumentNames":["this"]}
tiles_Location_left__P25807.isGetter = true;

function tiles_Location_left__P25807_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_left__P25807, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_y__P25806(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___41028 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C25800_VT)) failedCast(r0);
    s.lastBrkId = 1685;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1685]) return breakpoint(s, 1, 1685, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_1 = tiles_Location_tileMap__P25802_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 789; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 790; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scale___41028 = (r0);
    s.lastBrkId = 1686;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1686]) return breakpoint(s, 4, 1686, r0);
  case 4:
    r0 = s.arg0.fields["_row"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << s.scale___41028);
    s.tmp_0 = r0;
    r0 = (s.scale___41028 - 1);
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_y__P25806.info = {"start":1315,"length":135,"line":53,"column":8,"endLine":56,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"y","argumentNames":["this"]}
tiles_Location_y__P25806.isGetter = true;

function tiles_Location_y__P25806_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_y__P25806, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scale___41028: undefined,
  arg0: undefined,
} }





function tiles_Location_x__P25805(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___41044 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C25800_VT)) failedCast(r0);
    s.lastBrkId = 1683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1683]) return breakpoint(s, 1, 1683, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_scale__P25845_mk(s);
    s.tmp_1 = tiles_Location_tileMap__P25802_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 787; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 788; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scale___41044 = (r0);
    s.lastBrkId = 1684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1684]) return breakpoint(s, 4, 1684, r0);
  case 4:
    r0 = s.arg0.fields["_col"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << s.scale___41044);
    s.tmp_0 = r0;
    r0 = (s.scale___41044 - 1);
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_x__P25805.info = {"start":1054,"length":135,"line":45,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"x","argumentNames":["this"]}
tiles_Location_x__P25805.isGetter = true;

function tiles_Location_x__P25805_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_x__P25805, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scale___41044: undefined,
  arg0: undefined,
} }





function scene_Renderable___drawCore__P25909(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C25906_VT)) failedCast(r0);
    s.lastBrkId = 1840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1840]) return breakpoint(s, 1, 1840, r0);
  case 1:
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.screen___25204;
    s.tmp_0.arg2 = s.arg1;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 888; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 888; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 888; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 888; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable___drawCore__P25909.info = {"start":390,"length":86,"line":14,"column":8,"endLine":16,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function scene_Renderable___drawCore__P25909_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable___drawCore__P25909, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Renderable___visible__P25908(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C25906_VT)) failedCast(r0);
    s.lastBrkId = 1839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1839]) return breakpoint(s, 1, 1839, r0);
  case 1:
    s.tmp_0 = if_shouldBeVisible_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "shouldBeVisible"), 1);
      s.callLocIdx = 887; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["shouldBeVisible"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["shouldBeVisible"], 1); s.callLocIdx = 887; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 887; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 887; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable___visible__P25908.info = {"start":305,"length":75,"line":10,"column":8,"endLine":12,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"__visible","argumentNames":["this"]}

function scene_Renderable___visible__P25908_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable___visible__P25908, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite___drawCore__P25578(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___41094 = undefined;
    s.oy___41102 = undefined;
    s.l___41110 = undefined;
    s.t___41116 = undefined;
    s.font___41151 = undefined;
    s.tx___41155 = undefined;
    s.ty___41157 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1086;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1086]) return breakpoint(s, 28, 1086, r0);
  case 28:
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1087;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1087]) return breakpoint(s, 29, 1087, r0);
  case 29:
    r0 = s.arg0.fields["sayEndTime"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1088;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1088]) return breakpoint(s, 30, 1088, r0);
  case 30:
    r0 = pxsim.control.millis();
    s.tmp_4 = r0;
    r0 = s.arg0.fields["sayEndTime"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 < s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1089;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1089]) return breakpoint(s, 31, 1089, r0);
  case 31:
    s.tmp_6 = sprites_BaseSpriteSayRenderer__C25424_v0_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = globals.screen___25204;
    s.tmp_6.arg2 = s.arg1;
    s.tmp_6.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_6.arg0, sprites_BaseSpriteSayRenderer__C25424_VT)) failedCast(s.tmp_6.arg0);
    s.tmp_6.fn = s.tmp_6.arg0.vtable.methods.draw;
    s.pc = 32; return s.tmp_6;
  case 32:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1090;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1090]) return breakpoint(s, 33, 1090, r0);
  case 33:
    s.tmp_0 = sprites_BaseSpriteSayRenderer__C25424_v2_1_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0.arg0 = r0;
    if (!checkSubtype(s.tmp_0.arg0, sprites_BaseSpriteSayRenderer__C25424_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.destroy;
    s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    s.lastBrkId = 1091;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1091]) return breakpoint(s, 35, 1091, r0);
  case 35:
    r0 = (s.arg0).fields["sayRenderer"] = (undefined);
    s.lastBrkId = 1092;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1092]) return breakpoint(s, 36, 1092, r0);
  case 36:
    r0 = (s.arg0).fields["sayEndTime"] = (undefined);
  case 2:
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1093;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1093]) return breakpoint(s, 37, 1093, r0);
  case 37:
    s.tmp_0 = sprites_BaseSpriteSayRenderer__C25424_v0_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.screen___25204;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, sprites_BaseSpriteSayRenderer__C25424_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.draw;
    s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 1094;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1094]) return breakpoint(s, 39, 1094, r0);
  case 39:
    s.tmp_1 = Sprite_isOutOfScreen__P25577_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 372; s.pc = 40; return s.tmp_1;
  case 40:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1095;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1095]) return breakpoint(s, 41, 1095, r0);
  case 41:
    { step = 27; continue; }
  case 7:
  case 8:
    s.lastBrkId = 1096;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1096]) return breakpoint(s, 42, 1096, r0);
  case 42:
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 512);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 9; continue; }
    r0 = 0;
    { step = 10; continue; }
  case 9:
    r0 = s.arg1.fields["drawOffsetX"];
  case 10:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.ox___41094 = (s.tmp_4);
    s.lastBrkId = 1097;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1097]) return breakpoint(s, 43, 1097, r0);
  case 43:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = 0;
    { step = 12; continue; }
  case 11:
    r0 = s.arg1.fields["drawOffsetY"];
  case 12:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.oy___41102 = (s.tmp_2);
    s.lastBrkId = 1098;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1098]) return breakpoint(s, 44, 1098, r0);
  case 44:
    s.tmp_2 = Sprite_left__P25562_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 373; s.pc = 45; return s.tmp_2;
  case 45:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.ox___41094);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.l___41110 = (r0);
    s.lastBrkId = 1099;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1099]) return breakpoint(s, 46, 1099, r0);
  case 46:
    s.tmp_2 = Sprite_top__P25566_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 374; s.pc = 47; return s.tmp_2;
  case 47:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.oy___41102);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.t___41116 = (r0);
    s.lastBrkId = 1100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1100]) return breakpoint(s, 48, 1100, r0);
  case 48:
    s.tmp_3 = Sprite_isScaled__P27674_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 375; s.pc = 49; return s.tmp_3;
  case 49:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1101]) return breakpoint(s, 50, 1101, r0);
  case 50:
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___25204, s.tmp_4, s.l___41110, s.t___41116);
    { step = 14; continue; }
  case 13:
    s.lastBrkId = 1102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1102]) return breakpoint(s, 51, 1102, r0);
  case 51:
    s.tmp_0 = helpers_imageBlit__P25127_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    s.tmp_0.arg1 = s.l___41110;
    s.tmp_0.arg2 = s.t___41116;
    s.tmp_1 = Sprite_width__P25560_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 376; s.pc = 53; return s.tmp_1;
  case 53:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_2 = Sprite_height__P25561_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 377; s.pc = 54; return s.tmp_2;
  case 54:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = 0;
    s.tmp_0.arg7 = 0;
    r0 = s.arg0.fields["_image"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_0.arg8 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_4);
    s.tmp_0.arg9 = r0;
    s.tmp_0.arg10 = true;
    s.tmp_0.arg11 = false;
    s.callLocIdx = 378; s.pc = 52; return s.tmp_0;
  case 52:
    r0 = s.retval;
  case 14:
    s.lastBrkId = 1103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1103]) return breakpoint(s, 55, 1103, r0);
  case 55:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 64);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 1104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1104]) return breakpoint(s, 56, 1104, r0);
  case 56:
    s.font___41151 = (globals.font5___25152);
    s.lastBrkId = 1105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1105]) return breakpoint(s, 57, 1105, r0);
  case 57:
    s.tx___41155 = (s.l___41110);
    s.lastBrkId = 1106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1106]) return breakpoint(s, 58, 1106, r0);
  case 58:
    s.tmp_1 = r0 = s.t___41116;
    s.tmp_3 = Sprite_height__P25561_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 379; s.pc = 59; return s.tmp_3;
  case 59:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 2);
    s.ty___41157 = (r0);
    s.lastBrkId = 1107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1107]) return breakpoint(s, 60, 1107, r0);
  case 60:
    s.tmp_0 = helpers_imagePrint__P25162_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    s.tmp_7 = Sprite_x__P25517_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 380; s.pc = 62; return s.tmp_7;
  case 62:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 0);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 63);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 63:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_11 = Sprite_y__P25519_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.callLocIdx = 381; s.pc = 64; return s.tmp_11;
  case 64:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 >> 0);
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 65);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 65:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_8);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___41155;
    s.tmp_0.arg3 = s.ty___41157;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___41151;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 382; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.lastBrkId = 1108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1108]) return breakpoint(s, 66, 1108, r0);
  case 66:
    s.tmp_0 = r0 = s.tx___41155;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.font___41151;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 383; s.pc = 67; return s.tmp_2; }
    }
  case 67:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.tx___41155 = (r0);
    s.lastBrkId = 1109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1109]) return breakpoint(s, 68, 1109, r0);
  case 68:
    s.tmp_1 = Sprite_vx__P25521_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 384; s.pc = 69; return s.tmp_1;
  case 69:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = s.tmp_0;
    { step = 16; continue; }
  case 15:
    s.tmp_2 = Sprite_vy__P25523_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 385; s.pc = 70; return s.tmp_2;
  case 70:
    r0 = s.retval;
  case 16:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1110]) return breakpoint(s, 71, 1110, r0);
  case 71:
    s.tmp_4 = r0 = s.ty___41157;
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.font___41151;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 386; s.pc = 72; return s.tmp_7; }
    }
  case 72:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.ty___41157 = (r0);
    s.lastBrkId = 1111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1111]) return breakpoint(s, 73, 1111, r0);
  case 73:
    s.tmp_0 = helpers_imagePrint__P25162_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    s.tmp_6 = Sprite_vx__P25521_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 387; s.pc = 75; return s.tmp_6;
  case 75:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 76);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 76:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("v", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_vy__P25523_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 388; s.pc = 77; return s.tmp_10;
  case 77:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 0);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 78);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 78:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___41155;
    s.tmp_0.arg3 = s.ty___41157;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___41151;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 389; s.pc = 74; return s.tmp_0;
  case 74:
    r0 = s.retval;
  case 17:
  case 18:
    s.lastBrkId = 1112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1112]) return breakpoint(s, 79, 1112, r0);
  case 79:
    s.tmp_1 = Sprite_ax__P25525_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 390; s.pc = 80; return s.tmp_1;
  case 80:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 19; continue; }
    r0 = s.tmp_0;
    { step = 20; continue; }
  case 19:
    s.tmp_2 = Sprite_ay__P25527_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 391; s.pc = 81; return s.tmp_2;
  case 81:
    r0 = s.retval;
  case 20:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 1113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1113]) return breakpoint(s, 82, 1113, r0);
  case 82:
    s.tmp_4 = r0 = s.ty___41157;
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.font___41151;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 392; s.pc = 83; return s.tmp_7; }
    }
  case 83:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.ty___41157 = (r0);
    s.lastBrkId = 1114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1114]) return breakpoint(s, 84, 1114, r0);
  case 84:
    s.tmp_0 = helpers_imagePrint__P25162_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    s.tmp_6 = Sprite_ax__P25525_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 393; s.pc = 86; return s.tmp_6;
  case 86:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 87);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 87:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("a", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_ay__P25527_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 394; s.pc = 88; return s.tmp_10;
  case 88:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 0);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 89);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 89:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___41155;
    s.tmp_0.arg3 = s.ty___41157;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___41151;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 395; s.pc = 85; return s.tmp_0;
  case 85:
    r0 = s.retval;
  case 21:
  case 22:
  case 23:
  case 24:
    s.lastBrkId = 1115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1115]) return breakpoint(s, 90, 1115, r0);
  case 90:
    r0 = pxsim_numops_toBoolDecr(globals.debug___26057);
    if (!r0) { step = 25; continue; }
    s.lastBrkId = 1116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1116]) return breakpoint(s, 91, 1116, r0);
  case 91:
    s.tmp_0 = helpers_imageDrawRect__P25133_mk(s);
    s.tmp_0.arg0 = globals.screen___25204;
    s.tmp_2 = Fx_toInt__P23543_mk(s);
    s.tmp_3 = game_Hitbox_left__P25382_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 396; s.pc = 94; return s.tmp_3;
  case 94:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 397; s.pc = 93; return s.tmp_2;
  case 93:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.ox___41094);
    s.tmp_0.arg1 = r0;
    s.tmp_5 = Fx_toInt__P23543_mk(s);
    s.tmp_6 = game_Hitbox_top__P25383_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 398; s.pc = 96; return s.tmp_6;
  case 96:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 399; s.pc = 95; return s.tmp_5;
  case 95:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.oy___41102);
    s.tmp_0.arg2 = r0;
    s.tmp_7 = Fx_toInt__P23543_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["width"];
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 400; s.pc = 97; return s.tmp_7;
  case 97:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_8 = Fx_toInt__P23543_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["height"];
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 401; s.pc = 98; return s.tmp_8;
  case 98:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 402; s.pc = 92; return s.tmp_0;
  case 92:
    r0 = s.retval;
  case 25:
  case 26:
  case 27:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite___drawCore__P25578.info = {"start":19295,"length":2305,"line":646,"column":4,"endLine":712,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function Sprite___drawCore__P25578_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___drawCore__P25578, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  ox___41094: undefined,
  oy___41102: undefined,
  l___41110: undefined,
  t___41116: undefined,
  font___41151: undefined,
  tx___41155: undefined,
  ty___41157: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSpriteSayRenderer_destroy__P25428(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C25424_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_destroy__P25428.info = {"start":328,"length":22,"line":13,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"destroy","argumentNames":["this"]}

function sprites_BaseSpriteSayRenderer_destroy__P25428_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_destroy__P25428, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_BaseSpriteSayRenderer_draw__P25426(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C25424_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_draw__P25426.info = {"start":171,"length":69,"line":5,"column":8,"endLine":7,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"draw","argumentNames":["this","screen","camera","owner"]}

function sprites_BaseSpriteSayRenderer_draw__P25426_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_draw__P25426, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite___visible__P25559(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C25504_VT)) failedCast(r0);
    s.lastBrkId = 1051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1051]) return breakpoint(s, 1, 1051, r0);
  case 1:
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 128);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
Sprite___visible__P25559.info = {"start":11007,"length":72,"line":392,"column":4,"endLine":394,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__visible","argumentNames":["this"]}

function Sprite___visible__P25559_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___visible__P25559, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_Camera_top__P25901(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C25888_VT)) failedCast(r0);
    s.lastBrkId = 1817;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1817]) return breakpoint(s, 1, 1817, r0);
  case 1:
    r0 = s.arg0.fields["drawOffsetY"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_top__P25901.info = {"start":1638,"length":58,"line":58,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"top","argumentNames":["this"]}
scene_Camera_top__P25901.isGetter = true;

function scene_Camera_top__P25901_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_top__P25901, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_left__P25899(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C25888_VT)) failedCast(r0);
    s.lastBrkId = 1816;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1816]) return breakpoint(s, 1, 1816, r0);
  case 1:
    r0 = s.arg0.fields["drawOffsetX"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_left__P25899.info = {"start":1486,"length":59,"line":52,"column":8,"endLine":54,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"left","argumentNames":["this"]}
scene_Camera_left__P25899.isGetter = true;

function scene_Camera_left__P25899_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_left__P25899, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ShapeFactory_drawParticle__P26273(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pImage___41287 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C26270_VT)) failedCast(r0);
    s.lastBrkId = 2425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2425]) return breakpoint(s, 1, 2425, r0);
  case 1:
    s.tmp_1 = Math_FastRandom_pickRandom__P26121_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["sources"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1222; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_0);
    s.pImage___41287 = (r0);
    s.lastBrkId = 2426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2426]) return breakpoint(s, 3, 2426, r0);
  case 3:
    r0 = s.arg1.fields["color"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.replace(s.pImage___41287, 15, s.tmp_0);
    s.lastBrkId = 2427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2427]) return breakpoint(s, 4, 2427, r0);
  case 4:
    s.tmp_0 = r0 = globals.screen___25204;
    s.tmp_1 = r0 = s.pImage___41287;
    s.tmp_3 = Fx_toInt__P23543_mk(s);
    s.tmp_4 = Fx_sub__P23530_mk(s);
    s.tmp_4.arg0 = s.arg2;
    r0 = s.arg0.fields["ox"];
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1223; s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1224; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_6 = Fx_toInt__P23543_mk(s);
    s.tmp_7 = Fx_sub__P23530_mk(s);
    s.tmp_7.arg0 = s.arg3;
    r0 = s.arg0.fields["oy"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 1225; s.pc = 8; return s.tmp_7;
  case 8:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 1226; s.pc = 7; return s.tmp_6;
  case 7:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_drawParticle__P26273.info = {"start":7172,"length":323,"line":229,"column":8,"endLine":237,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_ShapeFactory_drawParticle__P26273_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_drawParticle__P26273, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  pImage___41287: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Math_FastRandom_pickRandom__P26121(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C26116_VT)) failedCast(r0);
    s.lastBrkId = 1987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1987]) return breakpoint(s, 6, 1987, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1988]) return breakpoint(s, 7, 1988, r0);
  case 7:
    r0 = undefined;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1989]) return breakpoint(s, 8, 1989, r0);
  case 8:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = Math_FastRandom_randomRange__P26120_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = 0;
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 - 1);
    s.tmp_6.arg2 = r0;
    s.callLocIdx = 951; s.pc = 9; return s.tmp_6;
  case 9:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_pickRandom__P26121.info = {"start":2358,"length":192,"line":70,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"pickRandom","argumentNames":["this","list"]}

function Math_FastRandom_pickRandom__P26121_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_pickRandom__P26121, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AreaFactory_drawParticle__P26261(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.col___41333 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C26254_VT)) failedCast(r0);
    s.lastBrkId = 2417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2417]) return breakpoint(s, 5, 2417, r0);
  case 5:
    r0 = s.arg1.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 500);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 4;
    { step = 4; continue; }
  case 1:
    r0 = s.arg1.fields["lifespan"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 250);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = 5;
    { step = 3; continue; }
  case 2:
    r0 = 1;
  case 3:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.col___41333 = (s.tmp_5);
    s.lastBrkId = 2418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2418]) return breakpoint(s, 6, 2418, r0);
  case 6:
    s.tmp_0 = r0 = globals.screen___25204;
    s.tmp_2 = Fx_toInt__P23543_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1217; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P23543_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1218; s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, s.col___41333);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_drawParticle__P26261.info = {"start":4770,"length":222,"line":158,"column":8,"endLine":163,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_AreaFactory_drawParticle__P26261_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_drawParticle__P26261, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  col___41333: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_SprayFactory_drawParticle__P26251(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C26248_VT)) failedCast(r0);
    s.lastBrkId = 2402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2402]) return breakpoint(s, 1, 2402, r0);
  case 1:
    s.tmp_0 = r0 = globals.screen___25204;
    s.tmp_2 = Fx_toInt__P23543_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1202; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P23543_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1203; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_drawParticle__P26251.info = {"start":3194,"length":118,"line":115,"column":8,"endLine":117,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","particle","x","y"]}

function particles_SprayFactory_drawParticle__P26251_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_drawParticle__P26251, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }




function lambda_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function lambda_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function if_callback_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_handler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_flags_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function particles_ParticleFactory__C26244_v0_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function particles_ParticleSource__C26208_v4_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_x_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_y_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_condition_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_id_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function PhysicsEngine__C25666_v4_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if___update_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function lambda_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function PhysicsEngine__C25666_v3_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_charHeight_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_charWidth_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_multiplier_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_data_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_xOffset_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_yOffset_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if___draw_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_z_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_id_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function controller_Button__C25355_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_s_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_vx_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_vy_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_effect_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_sourceFactory_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function PhysicsEngine__C25666_v1_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_destroyHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_handler_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_generator_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_padding_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardsPerRow_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardWidth_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardSpacing_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardsTop_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_headerText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_headerFont_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_infoTop_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_infoFont_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_getText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function PhysicsEngine__C25666_v2_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function if_basicCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_selectedCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_activeCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_z_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function PhysicsEngine__C25666_v0_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_handler_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_tileIndex_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_left_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_top_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function sprites_BaseSpriteSayRenderer__C25424_v1_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function particles_ParticleFactory__C26244_v1_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function sprites_BaseSprite__C25264_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function sprites_BaseSprite__C25264_v2_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_height_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_shouldBeVisible_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function sprites_BaseSpriteSayRenderer__C25424_v0_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function sprites_BaseSpriteSayRenderer__C25424_v2_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_scene_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_state_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_width_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }

const controller_Button__C25355_VT = mkVTable({
  name: "Button",
  numFields: 7,
  classNo: 16,
  lastSubtypeNo: 17,
  maxBgInstances: null,
  methods: {
    "isPressed": controller_Button_isPressed__P25366,
  },
  iface: {
    "_owner": null,
    "set/_owner": null,
    "id": null,
    "set/id": null,
    "repeatDelay": null,
    "set/repeatDelay": null,
    "repeatInterval": null,
    "set/repeatInterval": null,
    "_pressed": null,
    "set/_pressed": null,
    "_pressedElasped": null,
    "set/_pressedElasped": null,
    "_repeatCount": null,
    "set/_repeatCount": null,
    "handlerState": controller_Button_handlerState__P27649,
    "toString": controller_Button_toString__P25360,
    "raiseButtonUp": controller_Button_raiseButtonUp__P27650,
    "raiseButtonDown": controller_Button_raiseButtonDown__P27651,
    "raiseButtonRepeat": controller_Button_raiseButtonRepeat__P27652,
    "onEvent": controller_Button_onEvent__P25362,
    "isPressed": controller_Button_isPressed__P25366,
    "pressureLevel": controller_Button_pressureLevel__P25367,
    "setPressed": controller_Button_setPressed__P25368,
    "__update": controller_Button___update__P25369,
    "runButtonEvents": controller_Button_runButtonEvents__P27653,
    "getOrCreateHandlerForEvent": controller_Button_getOrCreateHandlerForEvent__P27654,
  },
  toStringMethod: controller_Button_toString__P25360,
});
const controller_AnyButton__C27647_VT = mkVTable({
  name: "AnyButton",
  numFields: 7,
  classNo: 17,
  lastSubtypeNo: 17,
  maxBgInstances: null,
  methods: {
    "isPressed": controller_AnyButton_isPressed__P27655,
  },
  iface: {
    "_owner": null,
    "set/_owner": null,
    "id": null,
    "set/id": null,
    "repeatDelay": null,
    "set/repeatDelay": null,
    "repeatInterval": null,
    "set/repeatInterval": null,
    "_pressed": null,
    "set/_pressed": null,
    "_pressedElasped": null,
    "set/_pressedElasped": null,
    "_repeatCount": null,
    "set/_repeatCount": null,
    "isPressed": controller_AnyButton_isPressed__P27655,
    "handlerState": controller_Button_handlerState__P27649,
    "toString": controller_Button_toString__P25360,
    "raiseButtonUp": controller_Button_raiseButtonUp__P27650,
    "raiseButtonDown": controller_Button_raiseButtonDown__P27651,
    "raiseButtonRepeat": controller_Button_raiseButtonRepeat__P27652,
    "onEvent": controller_Button_onEvent__P25362,
    "pressureLevel": controller_Button_pressureLevel__P25367,
    "setPressed": controller_Button_setPressed__P25368,
    "__update": controller_Button___update__P25369,
    "runButtonEvents": controller_Button_runButtonEvents__P27653,
    "getOrCreateHandlerForEvent": controller_Button_getOrCreateHandlerForEvent__P27654,
  },
});
const Math_FastRandom__C26116_VT = mkVTable({
  name: "FastRandom",
  numFields: 2,
  classNo: 18,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "lfsr": null,
    "set/lfsr": null,
    "seed": null,
    "set/seed": null,
    "next": Math_FastRandom_next__P26119,
    "randomRange": Math_FastRandom_randomRange__P26120,
    "pickRandom": Math_FastRandom_pickRandom__P26121,
  },
});
const tiles_TileMap__C25842_VT = mkVTable({
  name: "TileMap",
  numFields: 5,
  classNo: 19,
  lastSubtypeNo: 19,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_scale": null,
    "set/_scale": null,
    "_layer": null,
    "set/_layer": null,
    "_map": null,
    "set/_map": null,
    "renderable": null,
    "set/renderable": null,
    "handlerState": null,
    "set/handlerState": null,
    "scale": tiles_TileMap_scale__P25845,
    "set/scale": tiles_TileMap_scale__P25846,
    "data": tiles_TileMap_data__P25847,
    "offsetX": tiles_TileMap_offsetX__P25848,
    "offsetY": tiles_TileMap_offsetY__P25849,
    "areaWidth": tiles_TileMap_areaWidth__P25850,
    "areaHeight": tiles_TileMap_areaHeight__P25851,
    "layer": tiles_TileMap_layer__P25852,
    "enabled": tiles_TileMap_enabled__P25854,
    "getTile": tiles_TileMap_getTile__P25856,
    "getTileIndex": tiles_TileMap_getTileIndex__P25857,
    "draw": tiles_TileMap_draw__P27784,
    "isObstacle": tiles_TileMap_isObstacle__P25863,
    "getObstacle": tiles_TileMap_getObstacle__P25864,
    "isOnWall": tiles_TileMap_isOnWall__P25865,
    "getTileImage": tiles_TileMap_getTileImage__P25866,
  },
});
const tiles_TileMapData__C25824_VT = mkVTable({
  name: "TileMapData",
  numFields: 7,
  classNo: 20,
  lastSubtypeNo: 20,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "data": null,
    "set/data": null,
    "layers": null,
    "set/layers": null,
    "tileset": null,
    "set/tileset": null,
    "cachedTileView": null,
    "set/cachedTileView": null,
    "_scale": null,
    "set/_scale": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "width": tiles_TileMapData_width__P25826,
    "height": tiles_TileMapData_height__P25827,
    "scale": tiles_TileMapData_scale__P25828,
    "set/scale": tiles_TileMapData_scale__P25829,
    "getTile": tiles_TileMapData_getTile__P25830,
    "getTileset": tiles_TileMapData_getTileset__P25832,
    "getTileImage": tiles_TileMapData_getTileImage__P25833,
    "isWall": tiles_TileMapData_isWall__P25835,
    "isOutsideMap": tiles_TileMapData_isOutsideMap__P25836,
  },
});
const controller_ButtonHandler__C25349_VT = mkVTable({
  name: "ButtonHandler",
  numFields: 2,
  classNo: 21,
  lastSubtypeNo: 21,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "event": null,
    "set/event": null,
    "callback": null,
    "set/callback": null,
  },
});
const controller_ButtonEventHandlerState__C25351_VT = mkVTable({
  name: "ButtonEventHandlerState",
  numFields: 3,
  classNo: 22,
  lastSubtypeNo: 22,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "id": null,
    "set/id": null,
    "user": null,
    "set/user": null,
    "system": null,
    "set/system": null,
  },
});
const control_EventContext__C23766_VT = mkVTable({
  name: "EventContext",
  numFields: 9,
  classNo: 23,
  lastSubtypeNo: 23,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "handlers": null,
    "set/handlers": null,
    "frameCallbacks": null,
    "set/frameCallbacks": null,
    "frameWorker": null,
    "set/frameWorker": null,
    "framesInSample": null,
    "set/framesInSample": null,
    "timeInSample": null,
    "set/timeInSample": null,
    "deltaTimeMillis": null,
    "set/deltaTimeMillis": null,
    "prevTimeMillis": null,
    "set/prevTimeMillis": null,
    "idleCallbacks": null,
    "set/idleCallbacks": null,
    "runningCallbacks": null,
    "set/runningCallbacks": null,
    "deltaTime": control_EventContext_deltaTime__P23771,
    "runCallbacks": control_EventContext_runCallbacks__P27496,
    "registerFrameCallbacks": control_EventContext_registerFrameCallbacks__P27497,
    "register": control_EventContext_register__P23772,
    "unregister": control_EventContext_unregister__P23773,
    "registerFrameHandler": control_EventContext_registerFrameHandler__P23774,
    "registerHandler": control_EventContext_registerHandler__P23776,
  },
});
const control_EventHandler__C27491_VT = mkVTable({
  name: "EventHandler",
  numFields: 4,
  classNo: 24,
  lastSubtypeNo: 24,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "src": null,
    "set/src": null,
    "value": null,
    "set/value": null,
    "handler": null,
    "set/handler": null,
    "flags": null,
    "set/flags": null,
    "register": control_EventHandler_register__P27492,
    "unregister": control_EventHandler_unregister__P27493,
  },
});
const scene_Background__C25776_VT = mkVTable({
  name: "Background",
  numFields: 4,
  classNo: 25,
  lastSubtypeNo: 25,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "color": null,
    "set/color": null,
    "_image": null,
    "set/_image": null,
    "camera": null,
    "set/camera": null,
    "_layers": null,
    "set/_layers": null,
    "image": scene_Background_image__P25782,
    "set/image": scene_Background_image__P25783,
    "draw": scene_Background_draw__P25785,
  },
});
const scene_Scene__C25947_VT = mkVTable({
  name: "Scene",
  numFields: 24,
  classNo: 26,
  lastSubtypeNo: 26,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eventContext": null,
    "set/eventContext": null,
    "background": null,
    "set/background": null,
    "tileMap": null,
    "set/tileMap": null,
    "allSprites": null,
    "set/allSprites": null,
    "spriteNextId": null,
    "set/spriteNextId": null,
    "spritesByKind": null,
    "set/spritesByKind": null,
    "physicsEngine": null,
    "set/physicsEngine": null,
    "camera": null,
    "set/camera": null,
    "flags": null,
    "set/flags": null,
    "destroyedHandlers": null,
    "set/destroyedHandlers": null,
    "createdHandlers": null,
    "set/createdHandlers": null,
    "overlapHandlers": null,
    "set/overlapHandlers": null,
    "overlapMap": null,
    "set/overlapMap": null,
    "tileOverlapHandlers": null,
    "set/tileOverlapHandlers": null,
    "collisionHandlers": null,
    "set/collisionHandlers": null,
    "wallCollisionHandlers": null,
    "set/wallCollisionHandlers": null,
    "gameForeverHandlers": null,
    "set/gameForeverHandlers": null,
    "particleSources": null,
    "set/particleSources": null,
    "controlledSprites": null,
    "set/controlledSprites": null,
    "followingSprites": null,
    "set/followingSprites": null,
    "buttonEventHandlers": null,
    "set/buttonEventHandlers": null,
    "_millis": null,
    "set/_millis": null,
    "_data": null,
    "set/_data": null,
    "previousScene": null,
    "set/previousScene": null,
    "init": scene_Scene_init__P25970,
    "data": scene_Scene_data__P25971,
    "millis": scene_Scene_millis__P25972,
    "addSprite": scene_Scene_addSprite__P25973,
    "render": scene_Scene_render__P25975,
  },
});
const effects_ImageEffect__C26346_VT = mkVTable({
  name: "ImageEffect",
  numFields: 4,
  classNo: 27,
  lastSubtypeNo: 27,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "preferredDelay": null,
    "set/preferredDelay": null,
    "effect": null,
    "set/effect": null,
    "fastRandom": null,
    "set/fastRandom": null,
    "times": null,
    "set/times": null,
    "applyTo": effects_ImageEffect_applyTo__P26348,
    "change": effects_ImageEffect_change__P26349,
  },
});
const effects_ParticleEffect__C26319_VT = mkVTable({
  name: "ParticleEffect",
  numFields: 3,
  classNo: 28,
  lastSubtypeNo: 29,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sourceFactory": null,
    "set/sourceFactory": null,
    "defaultRate": null,
    "set/defaultRate": null,
    "defaultLifespan": null,
    "set/defaultLifespan": null,
    "start": effects_ParticleEffect_start__P26321,
    "destroy": effects_ParticleEffect_destroy__P26322,
  },
});
const effects_ScreenEffect__C26323_VT = mkVTable({
  name: "ScreenEffect",
  numFields: 5,
  classNo: 29,
  lastSubtypeNo: 29,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sourceFactory": null,
    "set/sourceFactory": null,
    "defaultRate": null,
    "set/defaultRate": null,
    "defaultLifespan": null,
    "set/defaultLifespan": null,
    "source": null,
    "set/source": null,
    "sceneDefaultRate": null,
    "set/sceneDefaultRate": null,
    "start": effects_ParticleEffect_start__P26321,
    "destroy": effects_ParticleEffect_destroy__P26322,
  },
});
const particles_ParticleFactory__C26244_VT = mkVTable({
  name: "ParticleFactory",
  numFields: 0,
  classNo: 30,
  lastSubtypeNo: 34,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ParticleFactory_createParticle__P26246,
    "drawParticle": particles_ParticleFactory_drawParticle__P26247,
  },
  iface: {
    "createParticle": particles_ParticleFactory_createParticle__P26246,
    "drawParticle": particles_ParticleFactory_drawParticle__P26247,
  },
});
const particles_SprayFactory__C26248_VT = mkVTable({
  name: "SprayFactory",
  numFields: 3,
  classNo: 31,
  lastSubtypeNo: 34,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_SprayFactory_createParticle__P26250,
    "drawParticle": particles_SprayFactory_drawParticle__P26251,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "createParticle": particles_SprayFactory_createParticle__P26250,
    "drawParticle": particles_SprayFactory_drawParticle__P26251,
    "setSpeed": particles_SprayFactory_setSpeed__P26252,
    "setDirection": particles_SprayFactory_setDirection__P26253,
  },
});
const particles_AreaFactory__C26254_VT = mkVTable({
  name: "AreaFactory",
  numFields: 8,
  classNo: 32,
  lastSubtypeNo: 34,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_AreaFactory_createParticle__P26260,
    "drawParticle": particles_AreaFactory_drawParticle__P26261,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "createParticle": particles_AreaFactory_createParticle__P26260,
    "drawParticle": particles_AreaFactory_drawParticle__P26261,
    "setSpeed": particles_SprayFactory_setSpeed__P26252,
    "setDirection": particles_SprayFactory_setDirection__P26253,
  },
});
const particles_ShapeFactory__C26270_VT = mkVTable({
  name: "ShapeFactory",
  numFields: 11,
  classNo: 33,
  lastSubtypeNo: 34,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ShapeFactory_createParticle__P26274,
    "drawParticle": particles_ShapeFactory_drawParticle__P26273,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "sources": null,
    "set/sources": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "addShape": particles_ShapeFactory_addShape__P26272,
    "drawParticle": particles_ShapeFactory_drawParticle__P26273,
    "createParticle": particles_ShapeFactory_createParticle__P26274,
    "setSpeed": particles_SprayFactory_setSpeed__P26252,
    "setDirection": particles_SprayFactory_setDirection__P26253,
  },
});
const particles_ConfettiFactory__C26275_VT = mkVTable({
  name: "ConfettiFactory",
  numFields: 11,
  classNo: 34,
  lastSubtypeNo: 34,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ShapeFactory_createParticle__P26274,
    "drawParticle": particles_ShapeFactory_drawParticle__P26273,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "sources": null,
    "set/sources": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "addShape": particles_ShapeFactory_addShape__P26272,
    "drawParticle": particles_ShapeFactory_drawParticle__P26273,
    "createParticle": particles_ShapeFactory_createParticle__P26274,
    "setSpeed": particles_SprayFactory_setSpeed__P26252,
    "setDirection": particles_SprayFactory_setDirection__P26253,
  },
});
const sprites_BaseSprite__C25264_VT = mkVTable({
  name: "BaseSprite",
  numFields: 2,
  classNo: 35,
  lastSubtypeNo: 38,
  maxBgInstances: null,
  methods: {
    "__visible": sprites_BaseSprite___visible__P25267,
    "__draw": sprites_BaseSprite___draw__P25270,
    "__drawCore": sprites_BaseSprite___drawCore__P25271,
    "__update": sprites_BaseSprite___update__P25272,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "__visible": sprites_BaseSprite___visible__P25267,
    "z": sprites_BaseSprite_z__P25268,
    "set/z": sprites_BaseSprite_z__P25269,
    "__draw": sprites_BaseSprite___draw__P25270,
    "__drawCore": sprites_BaseSprite___drawCore__P25271,
    "__update": sprites_BaseSprite___update__P25272,
  },
});
const particles_ParticleSource__C26208_VT = mkVTable({
  name: "ParticleSource",
  numFields: 13,
  classNo: 36,
  lastSubtypeNo: 36,
  maxBgInstances: null,
  methods: {
    "__visible": sprites_BaseSprite___visible__P25267,
    "__draw": particles_ParticleSource___draw__P26214,
    "__drawCore": sprites_BaseSprite___drawCore__P25271,
    "__update": sprites_BaseSprite___update__P25272,
    "updateParticle": particles_ParticleSource_updateParticle__P28179,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "priority": null,
    "set/priority": null,
    "_dt": null,
    "set/_dt": null,
    "anchor": null,
    "set/anchor": null,
    "lifespan": null,
    "set/lifespan": null,
    "pFlags": null,
    "set/pFlags": null,
    "head": null,
    "set/head": null,
    "timer": null,
    "set/timer": null,
    "period": null,
    "set/period": null,
    "_factory": null,
    "set/_factory": null,
    "ax": null,
    "set/ax": null,
    "ay": null,
    "set/ay": null,
    "__draw": particles_ParticleSource___draw__P26214,
    "_update": particles_ParticleSource__update__P26215,
    "_prune": particles_ParticleSource__prune__P26216,
    "setAcceleration": particles_ParticleSource_setAcceleration__P26217,
    "setRelativeToCamera": particles_ParticleSource_setRelativeToCamera__P26219,
    "enabled": particles_ParticleSource_enabled__P26220,
    "set/enabled": particles_ParticleSource_enabled__P26221,
    "destroy": particles_ParticleSource_destroy__P26222,
    "clear": particles_ParticleSource_clear__P26223,
    "setAnchor": particles_ParticleSource_setAnchor__P26224,
    "setRate": particles_ParticleSource_setRate__P26225,
    "setFactory": particles_ParticleSource_setFactory__P26227,
    "updateParticle": particles_ParticleSource_updateParticle__P28179,
    "drawParticle": particles_ParticleSource_drawParticle__P28180,
    "__visible": sprites_BaseSprite___visible__P25267,
    "z": sprites_BaseSprite_z__P25268,
    "set/z": sprites_BaseSprite_z__P25269,
    "__drawCore": sprites_BaseSprite___drawCore__P25271,
    "__update": sprites_BaseSprite___update__P25272,
  },
});
const particles_Particle__C26189_VT = mkVTable({
  name: "Particle",
  numFields: 8,
  classNo: 39,
  lastSubtypeNo: 39,
  maxBgInstances: 200,
  methods: {
  },
  iface: {
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "vx": null,
    "set/vx": null,
    "vy": null,
    "set/vy": null,
    "lifespan": null,
    "set/lifespan": null,
    "next": null,
    "set/next": null,
    "data": null,
    "set/data": null,
    "color": null,
    "set/color": null,
  },
});
const control_FrameCallback__C23763_VT = mkVTable({
  name: "FrameCallback",
  numFields: 2,
  classNo: 40,
  lastSubtypeNo: 40,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "order": null,
    "set/order": null,
    "handler": null,
    "set/handler": null,
  },
});
const control_PollEvent__C27470_VT = mkVTable({
  name: "PollEvent",
  numFields: 6,
  classNo: 41,
  lastSubtypeNo: 41,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eid": null,
    "set/eid": null,
    "vid": null,
    "set/vid": null,
    "start": null,
    "set/start": null,
    "timeOut": null,
    "set/timeOut": null,
    "condition": null,
    "set/condition": null,
    "once": null,
    "set/once": null,
  },
});
const PhysicsEngine__C25666_VT = mkVTable({
  name: "PhysicsEngine",
  numFields: 0,
  classNo: 42,
  lastSubtypeNo: 43,
  maxBgInstances: null,
  methods: {
    "addSprite": PhysicsEngine_addSprite__P25668,
    "removeSprite": PhysicsEngine_removeSprite__P25669,
    "moveSprite": PhysicsEngine_moveSprite__P25670,
    "draw": PhysicsEngine_draw__P25671,
    "move": PhysicsEngine_move__P25672,
  },
  iface: {
    "addSprite": PhysicsEngine_addSprite__P25668,
    "removeSprite": PhysicsEngine_removeSprite__P25669,
    "moveSprite": PhysicsEngine_moveSprite__P25670,
    "draw": PhysicsEngine_draw__P25671,
    "move": PhysicsEngine_move__P25672,
  },
});
const scene_Camera__C25888_VT = mkVTable({
  name: "Camera",
  numFields: 8,
  classNo: 44,
  lastSubtypeNo: 44,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_offsetX": null,
    "set/_offsetX": null,
    "_offsetY": null,
    "set/_offsetY": null,
    "drawOffsetX": null,
    "set/drawOffsetX": null,
    "drawOffsetY": null,
    "set/drawOffsetY": null,
    "sprite": null,
    "set/sprite": null,
    "shakeStartTime": null,
    "set/shakeStartTime": null,
    "shakeDuration": null,
    "set/shakeDuration": null,
    "shakeAmplitude": null,
    "set/shakeAmplitude": null,
    "offsetX": scene_Camera_offsetX__P25893,
    "set/offsetX": scene_Camera_offsetX__P25894,
    "offsetY": scene_Camera_offsetY__P25895,
    "set/offsetY": scene_Camera_offsetY__P25896,
    "x": scene_Camera_x__P25897,
    "y": scene_Camera_y__P25898,
    "left": scene_Camera_left__P25899,
    "top": scene_Camera_top__P25901,
    "update": scene_Camera_update__P25904,
  },
});
const scene_BackgroundLayer__C25786_VT = mkVTable({
  name: "BackgroundLayer",
  numFields: 6,
  classNo: 45,
  lastSubtypeNo: 45,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "distance": null,
    "set/distance": null,
    "img": null,
    "set/img": null,
    "repeatX": null,
    "set/repeatX": null,
    "repeatY": null,
    "set/repeatY": null,
    "alignX": null,
    "set/alignX": null,
    "alignY": null,
    "set/alignY": null,
    "draw": scene_BackgroundLayer_draw__P25794,
  },
});
const Sprite__C25504_VT = mkVTable({
  name: "Sprite",
  numFields: 30,
  classNo: 37,
  lastSubtypeNo: 37,
  maxBgInstances: null,
  methods: {
    "__visible": Sprite___visible__P25559,
    "__draw": sprites_BaseSprite___draw__P25270,
    "__drawCore": Sprite___drawCore__P25578,
    "__update": Sprite___update__P25579,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "_vx": null,
    "set/_vx": null,
    "_vy": null,
    "set/_vy": null,
    "_ax": null,
    "set/_ax": null,
    "_ay": null,
    "set/_ay": null,
    "_fx": null,
    "set/_fx": null,
    "_fy": null,
    "set/_fy": null,
    "_sx": null,
    "set/_sx": null,
    "_sy": null,
    "set/_sy": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "_data": null,
    "set/_data": null,
    "_kind": null,
    "set/_kind": null,
    "layer": null,
    "set/layer": null,
    "_lastX": null,
    "set/_lastX": null,
    "_lastY": null,
    "set/_lastY": null,
    "_action": null,
    "set/_action": null,
    "lifespan": null,
    "set/lifespan": null,
    "_image": null,
    "set/_image": null,
    "_obstacles": null,
    "set/_obstacles": null,
    "sayEndTime": null,
    "set/sayEndTime": null,
    "sayRenderer": null,
    "set/sayRenderer": null,
    "_hitbox": null,
    "set/_hitbox": null,
    "_overlappers": null,
    "set/_overlappers": null,
    "_kindsOverlappedWith": null,
    "set/_kindsOverlappedWith": null,
    "flags": null,
    "set/flags": null,
    "destroyHandler": null,
    "set/destroyHandler": null,
    "x": Sprite_x__P25517,
    "set/x": Sprite_x__P25518,
    "y": Sprite_y__P25519,
    "set/y": Sprite_y__P25520,
    "vx": Sprite_vx__P25521,
    "set/vx": Sprite_vx__P25522,
    "vy": Sprite_vy__P25523,
    "set/vy": Sprite_vy__P25524,
    "ax": Sprite_ax__P25525,
    "set/ax": Sprite_ax__P25526,
    "ay": Sprite_ay__P25527,
    "set/ay": Sprite_ay__P25528,
    "fx": Sprite_fx__P25529,
    "set/fx": Sprite_fx__P25530,
    "fy": Sprite_fy__P25531,
    "set/fy": Sprite_fy__P25532,
    "sx": Sprite_sx__P25533,
    "sy": Sprite_sy__P25535,
    "data": Sprite_data__P25539,
    "set/data": Sprite_data__P25540,
    "image": Sprite_image__P25553,
    "setImage": Sprite_setImage__P25554,
    "calcDimensionalHash": Sprite_calcDimensionalHash__P25555,
    "resetHitbox": Sprite_resetHitbox__P25556,
    "setHitbox": Sprite_setHitbox__P25557,
    "isStatic": Sprite_isStatic__P25558,
    "__visible": Sprite___visible__P25559,
    "recalcSize": Sprite_recalcSize__P27673,
    "isScaled": Sprite_isScaled__P27674,
    "width": Sprite_width__P25560,
    "height": Sprite_height__P25561,
    "left": Sprite_left__P25562,
    "set/left": Sprite_left__P25563,
    "right": Sprite_right__P25564,
    "set/right": Sprite_right__P25565,
    "top": Sprite_top__P25566,
    "set/top": Sprite_top__P25567,
    "bottom": Sprite_bottom__P25568,
    "set/bottom": Sprite_bottom__P25569,
    "kind": Sprite_kind__P25570,
    "setKind": Sprite_setKind__P25571,
    "isOutOfScreen": Sprite_isOutOfScreen__P25577,
    "__drawCore": Sprite___drawCore__P25578,
    "__update": Sprite___update__P25579,
    "setFlag": Sprite_setFlag__P25582,
    "overlapsWith": Sprite_overlapsWith__P25583,
    "clearObstacles": Sprite_clearObstacles__P25588,
    "registerObstacle": Sprite_registerObstacle__P25589,
    "destroy": Sprite_destroy__P25591,
    "_destroyCore": Sprite__destroyCore__P25592,
    "toString": Sprite_toString__P25597,
    "z": sprites_BaseSprite_z__P25268,
    "set/z": sprites_BaseSprite_z__P25269,
    "__draw": sprites_BaseSprite___draw__P25270,
  },
  toStringMethod: Sprite_toString__P25597,
});
const controller_Controller__C25304_VT = mkVTable({
  name: "Controller",
  numFields: 5,
  classNo: 46,
  lastSubtypeNo: 46,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "playerIndex": null,
    "set/playerIndex": null,
    "buttons": null,
    "set/buttons": null,
    "analog": null,
    "set/analog": null,
    "_id": null,
    "set/_id": null,
    "_connected": null,
    "set/_connected": null,
    "_controlledSprites": controller_Controller__controlledSprites__P25309,
    "set/_controlledSprites": controller_Controller__controlledSprites__P25310,
    "id": controller_Controller_id__P25311,
    "left": controller_Controller_left__P25313,
    "right": controller_Controller_right__P25314,
    "up": controller_Controller_up__P25315,
    "down": controller_Controller_down__P25316,
    "button": controller_Controller_button__P27646,
    "connected": controller_Controller_connected__P25323,
    "set/connected": controller_Controller_connected__P25324,
    "__preUpdate": controller_Controller___preUpdate__P25328,
    "__update": controller_Controller___update__P25329,
  },
});
const ArcadePhysicsEngine__C25682_VT = mkVTable({
  name: "ArcadePhysicsEngine",
  numFields: 6,
  classNo: 43,
  lastSubtypeNo: 43,
  maxBgInstances: null,
  methods: {
    "addSprite": ArcadePhysicsEngine_addSprite__P25691,
    "removeSprite": ArcadePhysicsEngine_removeSprite__P25692,
    "moveSprite": ArcadePhysicsEngine_moveSprite__P25696,
    "draw": ArcadePhysicsEngine_draw__P25693,
    "move": ArcadePhysicsEngine_move__P25694,
  },
  iface: {
    "sprites": null,
    "set/sprites": null,
    "map": null,
    "set/map": null,
    "maxVelocity": null,
    "set/maxVelocity": null,
    "maxNegativeVelocity": null,
    "set/maxNegativeVelocity": null,
    "minSingleStep": null,
    "set/minSingleStep": null,
    "maxSingleStep": null,
    "set/maxSingleStep": null,
    "maxSpeed": ArcadePhysicsEngine_maxSpeed__P25684,
    "set/maxSpeed": ArcadePhysicsEngine_maxSpeed__P25685,
    "minStep": ArcadePhysicsEngine_minStep__P25686,
    "set/minStep": ArcadePhysicsEngine_minStep__P25687,
    "maxStep": ArcadePhysicsEngine_maxStep__P25688,
    "set/maxStep": ArcadePhysicsEngine_maxStep__P25689,
    "addSprite": ArcadePhysicsEngine_addSprite__P25691,
    "removeSprite": ArcadePhysicsEngine_removeSprite__P25692,
    "draw": ArcadePhysicsEngine_draw__P25693,
    "move": ArcadePhysicsEngine_move__P25694,
    "createMovingSprite": ArcadePhysicsEngine_createMovingSprite__P27712,
    "spriteCollisions": ArcadePhysicsEngine_spriteCollisions__P27713,
    "tilemapCollisions": ArcadePhysicsEngine_tilemapCollisions__P27714,
    "tilemapOverlaps": ArcadePhysicsEngine_tilemapOverlaps__P27715,
    "moveSprite": ArcadePhysicsEngine_moveSprite__P25696,
    "canResolveClipping": ArcadePhysicsEngine_canResolveClipping__P27716,
    "constrain": ArcadePhysicsEngine_constrain__P27717,
  },
});
const sprites_SpriteMap__C25601_VT = mkVTable({
  name: "SpriteMap",
  numFields: 5,
  classNo: 47,
  lastSubtypeNo: 47,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "cellWidth": null,
    "set/cellWidth": null,
    "cellHeight": null,
    "set/cellHeight": null,
    "rowCount": null,
    "set/rowCount": null,
    "columnCount": null,
    "set/columnCount": null,
    "buckets": null,
    "set/buckets": null,
    "neighbors": sprites_SpriteMap_neighbors__P25603,
    "overlaps": sprites_SpriteMap_overlaps__P25604,
    "draw": sprites_SpriteMap_draw__P25605,
    "resizeBuckets": sprites_SpriteMap_resizeBuckets__P25606,
    "clear": sprites_SpriteMap_clear__P25607,
    "key": sprites_SpriteMap_key__P27675,
    "insertAtKey": sprites_SpriteMap_insertAtKey__P27676,
    "insertAABB": sprites_SpriteMap_insertAABB__P25608,
    "mergeAtKey": sprites_SpriteMap_mergeAtKey__P27677,
    "toString": sprites_SpriteMap_toString__P25609,
  },
  toStringMethod: sprites_SpriteMap_toString__P25609,
});
const music_Melody__C24987_VT = mkVTable({
  name: "Melody",
  numFields: 2,
  classNo: 48,
  lastSubtypeNo: 48,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_text": null,
    "set/_text": null,
    "_player": null,
    "set/_player": null,
    "toString": music_Melody_toString__P24996,
  },
  toStringMethod: music_Melody_toString__P24996,
});
const scene_systemMenu_PauseMenu__C26152_VT = mkVTable({
  name: "PauseMenu",
  numFields: 7,
  classNo: 49,
  lastSubtypeNo: 49,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "options": null,
    "set/options": null,
    "theme": null,
    "set/theme": null,
    "selection": null,
    "set/selection": null,
    "scrollRow": null,
    "set/scrollRow": null,
    "scrollTarget": null,
    "set/scrollTarget": null,
    "scrollOffset": null,
    "set/scrollOffset": null,
    "generator": null,
    "set/generator": null,
    "show": scene_systemMenu_PauseMenu_show__P26154,
    "onUpdate": scene_systemMenu_PauseMenu_onUpdate__P26155,
    "setSelection": scene_systemMenu_PauseMenu_setSelection__P26156,
    "drawText": scene_systemMenu_PauseMenu_drawText__P26157,
    "dispose": scene_systemMenu_PauseMenu_dispose__P26158,
    "updateScrollTarget": scene_systemMenu_PauseMenu_updateScrollTarget__P28094,
  },
});
const scene_systemMenu_MenuOption__C26144_VT = mkVTable({
  name: "MenuOption",
  numFields: 8,
  classNo: 50,
  lastSubtypeNo: 50,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "card": null,
    "set/card": null,
    "icon": null,
    "set/icon": null,
    "top": null,
    "set/top": null,
    "state": null,
    "set/state": null,
    "theme": null,
    "set/theme": null,
    "iconImage": null,
    "set/iconImage": null,
    "getText": null,
    "set/getText": null,
    "action": null,
    "set/action": null,
    "show": scene_systemMenu_MenuOption_show__P26146,
    "position": scene_systemMenu_MenuOption_position__P26147,
    "setOffset": scene_systemMenu_MenuOption_setOffset__P26148,
    "setTheme": scene_systemMenu_MenuOption_setTheme__P26149,
    "setState": scene_systemMenu_MenuOption_setState__P26150,
    "dispose": scene_systemMenu_MenuOption_dispose__P26151,
    "updateCard": scene_systemMenu_MenuOption_updateCard__P28093,
  },
});
const game_Hitbox__C25374_VT = mkVTable({
  name: "Hitbox",
  numFields: 6,
  classNo: 51,
  lastSubtypeNo: 51,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "hash": null,
    "set/hash": null,
    "parent": null,
    "set/parent": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "width": null,
    "set/width": null,
    "height": null,
    "set/height": null,
    "left": game_Hitbox_left__P25382,
    "top": game_Hitbox_top__P25383,
    "right": game_Hitbox_right__P25384,
    "bottom": game_Hitbox_bottom__P25385,
    "isValid": game_Hitbox_isValid__P25386,
    "contains": game_Hitbox_contains__P25387,
    "overlapsWith": game_Hitbox_overlapsWith__P25388,
  },
});
const sprites_SpriteSet__C25618_VT = mkVTable({
  name: "SpriteSet",
  numFields: 1,
  classNo: 52,
  lastSubtypeNo: 52,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_sprites": null,
    "set/_sprites": null,
    "length": sprites_SpriteSet_length__P25621,
    "add": sprites_SpriteSet_add__P25623,
    "remove": sprites_SpriteSet_remove__P25625,
    "contains": sprites_SpriteSet_contains__P25626,
    "toString": sprites_SpriteSet_toString__P25629,
  },
  toStringMethod: sprites_SpriteSet_toString__P25629,
});
const scene_Renderable__C25906_VT = mkVTable({
  name: "Renderable",
  numFields: 4,
  classNo: 38,
  lastSubtypeNo: 38,
  maxBgInstances: null,
  methods: {
    "__visible": scene_Renderable___visible__P25908,
    "__draw": sprites_BaseSprite___draw__P25270,
    "__drawCore": scene_Renderable___drawCore__P25909,
    "__update": sprites_BaseSprite___update__P25272,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "handler": null,
    "set/handler": null,
    "shouldBeVisible": null,
    "set/shouldBeVisible": null,
    "__visible": scene_Renderable___visible__P25908,
    "__drawCore": scene_Renderable___drawCore__P25909,
    "z": sprites_BaseSprite_z__P25268,
    "set/z": sprites_BaseSprite_z__P25269,
    "__draw": sprites_BaseSprite___draw__P25270,
    "__update": sprites_BaseSprite___update__P25272,
  },
});
const MovingSprite__C25680_VT = mkVTable({
  name: "MovingSprite",
  numFields: 7,
  classNo: 53,
  lastSubtypeNo: 53,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sprite": null,
    "set/sprite": null,
    "cachedVx": null,
    "set/cachedVx": null,
    "cachedVy": null,
    "set/cachedVy": null,
    "dx": null,
    "set/dx": null,
    "dy": null,
    "set/dy": null,
    "xStep": null,
    "set/xStep": null,
    "yStep": null,
    "set/yStep": null,
  },
});
const tiles_Location__C25800_VT = mkVTable({
  name: "Location",
  numFields: 2,
  classNo: 54,
  lastSubtypeNo: 54,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_row": null,
    "set/_row": null,
    "_col": null,
    "set/_col": null,
    "tileMap": tiles_Location_tileMap__P25802,
    "column": tiles_Location_column__P25803,
    "row": tiles_Location_row__P25804,
    "x": tiles_Location_x__P25805,
    "y": tiles_Location_y__P25806,
    "left": tiles_Location_left__P25807,
    "top": tiles_Location_top__P25808,
    "tileSet": tiles_Location_tileSet__P25811,
  },
});
const sprites_StaticObstacle__C25653_VT = mkVTable({
  name: "StaticObstacle",
  numFields: 5,
  classNo: 55,
  lastSubtypeNo: 55,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "layer": null,
    "set/layer": null,
    "image": null,
    "set/image": null,
    "tileIndex": null,
    "set/tileIndex": null,
    "top": null,
    "set/top": null,
    "left": null,
    "set/left": null,
    "x": sprites_StaticObstacle_x__P25660,
    "y": sprites_StaticObstacle_y__P25661,
    "height": sprites_StaticObstacle_height__P25662,
    "width": sprites_StaticObstacle_width__P25663,
  },
});
const sprites_BaseSpriteSayRenderer__C25424_VT = mkVTable({
  name: "BaseSpriteSayRenderer",
  numFields: 3,
  classNo: 56,
  lastSubtypeNo: 56,
  maxBgInstances: null,
  methods: {
    "draw": sprites_BaseSpriteSayRenderer_draw__P25426,
    "update": sprites_BaseSpriteSayRenderer_update__P25427,
    "destroy": sprites_BaseSpriteSayRenderer_destroy__P25428,
  },
  iface: {
    "text": null,
    "set/text": null,
    "fgColor": null,
    "set/fgColor": null,
    "bgColor": null,
    "set/bgColor": null,
    "draw": sprites_BaseSpriteSayRenderer_draw__P25426,
    "update": sprites_BaseSpriteSayRenderer_update__P25427,
    "destroy": sprites_BaseSpriteSayRenderer_destroy__P25428,
  },
});

const breakpoints = setupDebugger(1, ["transparency16___27301","tile1___27302","tile2___27303","tile3___27304","tile4___27305","tile5___27306","tile6___27307","tile7___27308","tile8___27309","tile9___27310","tile10___27311","tile11___27312","tile12___27313","tile13___27314","tile14___27315","tile15___27316","tile16___27317","tile17___27318","tile18___27319","tile19___27320","tile20___27321","tile21___27322","tile22___27323","tile23___27324","tile24___27325","tile25___27326","tile26___27327","tile27___27328","tile28___27329","tile29___27330","tile30___27331","tile31___27332","tile32___27333","tile33___27334","tile34___27335","tile35___27336","tile36___27337","tile37___27338","tile38___27339","tile39___27340","tile40___27341","tile41___27342","tile42___27343","tile43___27344","tile44___27345","tile45___27346","tile46___27347","tile47___27348","tile48___27349","tile49___27350","tile50___27351","tile51___27352","tile52___27353","tile53___27354","tile54___27355","tile55___27356","tile56___27357","tile57___27358","tile58___27359","tile59___27360","tile60___27361","tile61___27362","tile62___27363","tile63___27364","tile64___27365","tile65___27366","tile66___27367","tile67___27368","tile68___27369","tile69___27370","tile70___27371","tile71___27372","tile72___27373","tile73___27374","tile74___27375","tile75___27376","tile76___27377","tile77___27378","tile78___27379","tile79___27380","tile80___27381","tile81___27382","tile82___27383","tile83___27384","tile84___27385","tile85___27386","tile86___27387","tile87___27388","tile88___27389","tile89___27390","tile90___27391","tile91___27392","tile92___27393","tile93___27394","tile94___27395","tile95___27396","tile96___27397","tile97___27398","tile98___27399","tile99___27400","tile100___27401","tile101___27402","tile102___27403","tile103___27404","tile104___27405","tile105___27406","tile106___27407","tile107___27408","tile108___27409","tile109___27410","hex___58111"])

return _main___P59361
})
